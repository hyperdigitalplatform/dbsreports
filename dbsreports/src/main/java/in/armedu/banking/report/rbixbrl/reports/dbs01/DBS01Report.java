package in.armedu.banking.report.rbixbrl.reports.dbs01;



import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;

import org.xbrl._2003.instance.Context;
import org.xbrl._2003.instance.ContextEntityType;
import org.xbrl._2003.instance.ContextEntityType.Identifier;
import org.xbrl._2006.xbrldi.ExplicitMember;
import org.xbrl._2006.xbrldi.TypedMember;
import org.xbrl._2003.instance.ContextPeriodType;
import org.xbrl._2003.instance.ObjectFactory;
import org.xbrl._2003.instance.Unit;
import org.xbrl._2003.instance.Xbrl;
import org.xbrl._2003.xlink.SimpleType;

// generic import classes
import java.lang.Boolean;
import java.io.StringWriter;
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import in.armedu.banking.report.rbixbrl.util.DefaultNamespacePrefixMapper;
import lombok.Setter;

// import model class
import in.armedu.banking.report.rbixbrl.model.dbs01.*;
import in.armedu.banking.report.rbixbrl.model.FieldDataValue;
// add xbrl data type and inerface
import in.armedu.banking.report.rbixbrl.reports.XBRLReportIntf;
import in.armedu.banking.report.rbixbrl.util.CommonFns;
import in.armedu.banking.report.rbixbrl.model.ReportData;

// add data type 

import org.xbrl._2003.instance.StringItemType;

import org.xbrl._2003.instance.DateItemType;

import org.xbrl._2003.instance.ReportingScale;

import org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ReportStatusItemType;

                        import org.xbrl.dtr.type.non_numeric.TextBlockItemType;
                        
import org.xbrl._2003.instance.NatureOfFilingEntity;

import org.xbrl._2003.instance.MailAddress;

import org.xbrl._2003.instance.TelephoneNumber10DigitString;


@Setter
public class DBS01Report implements XBRLReportIntf {
    private org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory instancObjectFactory = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory();
    
    // logic for main method

    @Override
    public StringWriter generateReport(ReportData reportData){
        JAXBContext jc;
        Marshaller m;
        // TODO should be generated dynamically
        DBS01ReportData mainReportData = (DBS01ReportData) reportData;

        try {
            jc = JAXBContext.newInstance(ObjectFactory.class,
            org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ObjectFactory.class,
            org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory.class,
            org.rbi.in_rbi_rep_par.ObjectFactory.class,
            org.xbrl._2003.xlink.ObjectFactory.class,
            org.xbrl._2003.instance.ObjectFactory.class,
            org.xbrl._2006.xbrldi.ObjectFactory.class,
            org.xbrl._2003.linkbase.ObjectFactory.class,
            org.xbrl._2005.xbrldt.ObjectFactory.class,
            org.xbrl.dtr.type.non_numeric.ObjectFactory.class,
            org.xbrl.dtr.type.numeric.ObjectFactory.class);

            m = jc.createMarshaller();
            StringWriter writer = new StringWriter();
            Xbrl xbrl = new org.xbrl._2003.instance.ObjectFactory().createXbrl();
            
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            m.setProperty("com.sun.xml.bind.namespacePrefixMapper", new DefaultNamespacePrefixMapper());
            org.xbrl._2003.xlink.ObjectFactory xlinkObjectFactory = new org.xbrl._2003.xlink.ObjectFactory();
            SimpleType simpleType = xlinkObjectFactory.createSimpleType();
            simpleType.setType("simple");
            // TODO should be changed to specific xsd related to report dbs01
            simpleType.setHref("in-rbi-dbs01.xsd");
            xbrl.getSchemaRef().add(simpleType);
            xbrl.getOtherAttributes().put(new QName("xml:lang"), "en");
           
            
            // context identifiers and body elements
            List<String> contextIdentifiers = new ArrayList<String>();
            List<Context> contextElements = new ArrayList<Context>();
            List<Object> bodyElements = new ArrayList<Object>();
            List<String> unitIdentifiers = new ArrayList<String>();
            List<Unit> unitElements = new ArrayList<Unit>();
           
            //Unit unitObj = null;
            //DBS01ReportData dBS01ReportData = new DBS01ReportData();
            // print values           
    

            // TODO : create proper context with loop and element
            // initiatilize data class and allow to be set 
            //private DBS01ReportData dBS01ReportData = new DBS01ReportData();
            // retrieve bankcode, startdate, enddate and perioddate
            String bankCode = mainReportData.getBankCode();
            String startDate = mainReportData.getStartDate();
            String endDate = mainReportData.getEndDate();
            String periodDate = mainReportData.getPeriodDate();

             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                // method calling
                
                    filingInfo_Layout1Method(filingInfo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                // method calling
                
                    filingInfo_Layout2Method(filingInfo_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01AddInfo_Layout1 if any typeMembers then List or Single
                DBS01AddInfo_Layout1 dBS01AddInfo_Layout1 = mainReportData.getDBS01AddInfo_Layout1();
                // method calling
                
                    dBS01AddInfo_Layout1Method(dBS01AddInfo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout1 if any typeMembers then List or Single
                DBS01FS_Layout1 dBS01FS_Layout1 = mainReportData.getDBS01FS_Layout1();
                // method calling
                
                    dBS01FS_Layout1Method(dBS01FS_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout2 if any typeMembers then List or Single
                DBS01FS_Layout2 dBS01FS_Layout2 = mainReportData.getDBS01FS_Layout2();
                // method calling
                
                    dBS01FS_Layout2Method(dBS01FS_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout3 if any typeMembers then List or Single
                DBS01FS_Layout3 dBS01FS_Layout3 = mainReportData.getDBS01FS_Layout3();
                // method calling
                
                    dBS01FS_Layout3Method(dBS01FS_Layout3, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01OFC_Layout1 if any typeMembers then List or Single
                DBS01OFC_Layout1 dBS01OFC_Layout1 = mainReportData.getDBS01OFC_Layout1();
                // method calling
                
                    dBS01OFC_Layout1Method(dBS01OFC_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
            // end contexts loop
            // add contexts to xbrl
            contextElements.forEach(ce->{
                xbrl.getItemOrTupleOrContext().add(ce);
            });
            unitElements.forEach(u->{
                xbrl.getItemOrTupleOrContext().add(u);
            });
            
            bodyElements.forEach(be->{
                xbrl.getItemOrTupleOrContext().add(be);
            });
            m.marshal(xbrl, writer);
            System.out.println("");
            System.out.println(writer.toString());
            System.out.println("");
            return writer;
        } catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }






    // logic to generate method
             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                //FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                
                    private String filingInfo_Layout1Method(FilingInfo_Layout1 filingInfo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    FilingInfo_Layout1 field = filingInfo_Layout1;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReturnName
                            
                                Map zeroFilingInfo_Layout1ReturnNameMap3 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReturnNameValue2 = DBS01ReportUtil.retrieveValueForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap3);

                                    
                                        Context FilingInfo_Layout1ReturnNameContext1 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReturnNameValue2 != null && !"".equals(zeroFilingInfo_Layout1ReturnNameValue2)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReturnNameContext1.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReturnNameContext1);
                                        contextIdentifiers.add(FilingInfo_Layout1ReturnNameContext1.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType returnNameValue4 = new StringItemType();
                                    returnNameValue4.setContextRef(FilingInfo_Layout1ReturnNameContext1);
                                    
                                        returnNameValue4.setValue(zeroFilingInfo_Layout1ReturnNameValue2);        
                                        
                                    
                                    JAXBElement<StringItemType> returnNameElement5 = instancObjectFactory.createReturnName(returnNameValue4);
                                    bodyElements.add(returnNameElement5);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReturnCode
                            
                                Map zeroFilingInfo_Layout1ReturnCodeMap8 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReturnCodeValue7 = DBS01ReportUtil.retrieveValueForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap8);

                                    
                                        Context FilingInfo_Layout1ReturnCodeContext6 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReturnCodeValue7 != null && !"".equals(zeroFilingInfo_Layout1ReturnCodeValue7)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReturnCodeContext6.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReturnCodeContext6);
                                        contextIdentifiers.add(FilingInfo_Layout1ReturnCodeContext6.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType returnCodeValue9 = new StringItemType();
                                    returnCodeValue9.setContextRef(FilingInfo_Layout1ReturnCodeContext6);
                                    
                                        returnCodeValue9.setValue(zeroFilingInfo_Layout1ReturnCodeValue7);        
                                        
                                    
                                    JAXBElement<StringItemType> returnCodeElement10 = instancObjectFactory.createReturnCode(returnCodeValue9);
                                    bodyElements.add(returnCodeElement10);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - NameOfReportingInstitution
                            
                                Map zeroFilingInfo_Layout1NameOfReportingInstitutionMap13 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1NameOfReportingInstitutionValue12 = DBS01ReportUtil.retrieveValueForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap13);

                                    
                                        Context FilingInfo_Layout1NameOfReportingInstitutionContext11 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1NameOfReportingInstitutionValue12 != null && !"".equals(zeroFilingInfo_Layout1NameOfReportingInstitutionValue12)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1NameOfReportingInstitutionContext11.getId())) {
                                        contextElements.add(FilingInfo_Layout1NameOfReportingInstitutionContext11);
                                        contextIdentifiers.add(FilingInfo_Layout1NameOfReportingInstitutionContext11.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType nameOfReportingInstitutionValue14 = new StringItemType();
                                    nameOfReportingInstitutionValue14.setContextRef(FilingInfo_Layout1NameOfReportingInstitutionContext11);
                                    
                                        nameOfReportingInstitutionValue14.setValue(zeroFilingInfo_Layout1NameOfReportingInstitutionValue12);        
                                        
                                    
                                    JAXBElement<StringItemType> nameOfReportingInstitutionElement15 = instancObjectFactory.createNameOfReportingInstitution(nameOfReportingInstitutionValue14);
                                    bodyElements.add(nameOfReportingInstitutionElement15);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - BankCode
                            
                                Map zeroFilingInfo_Layout1BankCodeMap18 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1BankCodeValue17 = DBS01ReportUtil.retrieveValueForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap18);

                                    
                                    Context FilingInfo_Layout1BankCodeContext16 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1BankCodeValue17 != null && !"".equals(zeroFilingInfo_Layout1BankCodeValue17)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1BankCodeContext16.getId())) {
                                        contextElements.add(FilingInfo_Layout1BankCodeContext16);
                                        contextIdentifiers.add(FilingInfo_Layout1BankCodeContext16.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType bankCodeValue19 = new StringItemType();
                                    bankCodeValue19.setContextRef(FilingInfo_Layout1BankCodeContext16);
                                    
                                        bankCodeValue19.setValue(zeroFilingInfo_Layout1BankCodeValue17);        
                                        
                                    
                                    JAXBElement<StringItemType> bankCodeElement20 = instancObjectFactory.createBankCode(bankCodeValue19);
                                    bodyElements.add(bankCodeElement20);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - InstitutionType
                            
                                Map zeroFilingInfo_Layout1InstitutionTypeMap23 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1InstitutionTypeValue22 = DBS01ReportUtil.retrieveValueForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap23);

                                    
                                        Context FilingInfo_Layout1InstitutionTypeContext21 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1InstitutionTypeValue22 != null && !"".equals(zeroFilingInfo_Layout1InstitutionTypeValue22)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1InstitutionTypeContext21.getId())) {
                                        contextElements.add(FilingInfo_Layout1InstitutionTypeContext21);
                                        contextIdentifiers.add(FilingInfo_Layout1InstitutionTypeContext21.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType institutionTypeValue24 = new StringItemType();
                                    institutionTypeValue24.setContextRef(FilingInfo_Layout1InstitutionTypeContext21);
                                    
                                        institutionTypeValue24.setValue(zeroFilingInfo_Layout1InstitutionTypeValue22);        
                                        
                                    
                                    JAXBElement<StringItemType> institutionTypeElement25 = (new org.rbi.in.xbrl.rbi_core.ObjectFactory()).createInstitutionType(institutionTypeValue24);
                                    bodyElements.add(institutionTypeElement25);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingFrequency
                            
                                Map zeroFilingInfo_Layout1ReportingFrequencyMap28 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingFrequencyValue27 = DBS01ReportUtil.retrieveValueForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap28);

                                    
                                        Context FilingInfo_Layout1ReportingFrequencyContext26 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReportingFrequencyValue27 != null && !"".equals(zeroFilingInfo_Layout1ReportingFrequencyValue27)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingFrequencyContext26.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReportingFrequencyContext26);
                                        contextIdentifiers.add(FilingInfo_Layout1ReportingFrequencyContext26.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType reportingFrequencyValue29 = new StringItemType();
                                    reportingFrequencyValue29.setContextRef(FilingInfo_Layout1ReportingFrequencyContext26);
                                    
                                        reportingFrequencyValue29.setValue(zeroFilingInfo_Layout1ReportingFrequencyValue27);        
                                        
                                    
                                    JAXBElement<StringItemType> reportingFrequencyElement30 = instancObjectFactory.createReportingFrequency(reportingFrequencyValue29);
                                    bodyElements.add(reportingFrequencyElement30);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingPeriodStartDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodStartDateMap33 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingPeriodStartDateValue32 = DBS01ReportUtil.retrieveValueForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap33);

                                    
                                    Context FilingInfo_Layout1ReportingPeriodStartDateContext31 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReportingPeriodStartDateValue32 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodStartDateValue32)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingPeriodStartDateContext31.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReportingPeriodStartDateContext31);
                                        contextIdentifiers.add(FilingInfo_Layout1ReportingPeriodStartDateContext31.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    DateItemType reportingPeriodStartDateValue34 = new DateItemType();
                                    reportingPeriodStartDateValue34.setContextRef(FilingInfo_Layout1ReportingPeriodStartDateContext31);
                                    
                                    reportingPeriodStartDateValue34.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodStartDateValue32));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodStartDateElement35 = instancObjectFactory.createReportingPeriodStartDate(reportingPeriodStartDateValue34);
                                    bodyElements.add(reportingPeriodStartDateElement35);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingPeriodEndDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodEndDateMap38 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingPeriodEndDateValue37 = DBS01ReportUtil.retrieveValueForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap38);

                                    
                                    Context FilingInfo_Layout1ReportingPeriodEndDateContext36 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReportingPeriodEndDateValue37 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodEndDateValue37)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingPeriodEndDateContext36.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReportingPeriodEndDateContext36);
                                        contextIdentifiers.add(FilingInfo_Layout1ReportingPeriodEndDateContext36.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    DateItemType reportingPeriodEndDateValue39 = new DateItemType();
                                    reportingPeriodEndDateValue39.setContextRef(FilingInfo_Layout1ReportingPeriodEndDateContext36);
                                    
                                    reportingPeriodEndDateValue39.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodEndDateValue37));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodEndDateElement40 = instancObjectFactory.createReportingPeriodEndDate(reportingPeriodEndDateValue39);
                                    bodyElements.add(reportingPeriodEndDateElement40);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingCurrency
                            
                                Map zeroFilingInfo_Layout1ReportingCurrencyMap43 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingCurrencyValue42 = DBS01ReportUtil.retrieveValueForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap43);

                                    
                                        Context FilingInfo_Layout1ReportingCurrencyContext41 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReportingCurrencyValue42 != null && !"".equals(zeroFilingInfo_Layout1ReportingCurrencyValue42)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingCurrencyContext41.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReportingCurrencyContext41);
                                        contextIdentifiers.add(FilingInfo_Layout1ReportingCurrencyContext41.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType reportingCurrencyValue44 = new StringItemType();
                                    reportingCurrencyValue44.setContextRef(FilingInfo_Layout1ReportingCurrencyContext41);
                                    
                                        reportingCurrencyValue44.setValue(zeroFilingInfo_Layout1ReportingCurrencyValue42);        
                                        
                                    
                                    JAXBElement<StringItemType> reportingCurrencyElement45 = (new org.rbi.in.xbrl.rbi_core.ObjectFactory()).createReportingCurrency(reportingCurrencyValue44);
                                    bodyElements.add(reportingCurrencyElement45);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingScale
                            
                                Map zeroFilingInfo_Layout1ReportingScaleMap48 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingScaleValue47 = DBS01ReportUtil.retrieveValueForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap48);

                                    
                                        Context FilingInfo_Layout1ReportingScaleContext46 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReportingScaleValue47 != null && !"".equals(zeroFilingInfo_Layout1ReportingScaleValue47)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingScaleContext46.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReportingScaleContext46);
                                        contextIdentifiers.add(FilingInfo_Layout1ReportingScaleContext46.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    org.rbi.in.xbrl.rbi_core.ReportingScale reportingScaleValue49 = new org.rbi.in.xbrl.rbi_core.ReportingScale();
                                    reportingScaleValue49.setContextRef(FilingInfo_Layout1ReportingScaleContext46);
                                    
                                        reportingScaleValue49.setValue(zeroFilingInfo_Layout1ReportingScaleValue47);        
                                        
                                    
                                    JAXBElement<ReportingScale> reportingScaleElement50 = (new org.rbi.in.xbrl.rbi_core.ObjectFactory()).createReportingScale(reportingScaleValue49);
                                    bodyElements.add(reportingScaleElement50);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - TaxonomyVersion
                            
                                Map zeroFilingInfo_Layout1TaxonomyVersionMap53 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1TaxonomyVersionValue52 = DBS01ReportUtil.retrieveValueForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap53);

                                    
                                        Context FilingInfo_Layout1TaxonomyVersionContext51 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1TaxonomyVersionValue52 != null && !"".equals(zeroFilingInfo_Layout1TaxonomyVersionValue52)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1TaxonomyVersionContext51.getId())) {
                                        contextElements.add(FilingInfo_Layout1TaxonomyVersionContext51);
                                        contextIdentifiers.add(FilingInfo_Layout1TaxonomyVersionContext51.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType taxonomyVersionValue54 = new StringItemType();
                                    taxonomyVersionValue54.setContextRef(FilingInfo_Layout1TaxonomyVersionContext51);
                                    
                                        taxonomyVersionValue54.setValue(zeroFilingInfo_Layout1TaxonomyVersionValue52);        
                                        
                                    
                                    JAXBElement<StringItemType> taxonomyVersionElement55 = (new org.rbi.in.xbrl.rbi_core.ObjectFactory()).createTaxonomyVersion(taxonomyVersionValue54);
                                    bodyElements.add(taxonomyVersionElement55);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ToolName
                            
                                Map zeroFilingInfo_Layout1ToolNameMap58 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ToolNameValue57 = DBS01ReportUtil.retrieveValueForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap58);

                                    
                                        Context FilingInfo_Layout1ToolNameContext56 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ToolNameValue57 != null && !"".equals(zeroFilingInfo_Layout1ToolNameValue57)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ToolNameContext56.getId())) {
                                        contextElements.add(FilingInfo_Layout1ToolNameContext56);
                                        contextIdentifiers.add(FilingInfo_Layout1ToolNameContext56.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType toolNameValue59 = new StringItemType();
                                    toolNameValue59.setContextRef(FilingInfo_Layout1ToolNameContext56);
                                    
                                        toolNameValue59.setValue(zeroFilingInfo_Layout1ToolNameValue57);        
                                        
                                    
                                    JAXBElement<StringItemType> toolNameElement60 = (new org.rbi.in.xbrl.rbi_core.ObjectFactory()).createToolName(toolNameValue59);
                                    bodyElements.add(toolNameElement60);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ToolVersion
                            
                                Map zeroFilingInfo_Layout1ToolVersionMap63 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ToolVersionValue62 = DBS01ReportUtil.retrieveValueForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap63);

                                    
                                        Context FilingInfo_Layout1ToolVersionContext61 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ToolVersionValue62 != null && !"".equals(zeroFilingInfo_Layout1ToolVersionValue62)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ToolVersionContext61.getId())) {
                                        contextElements.add(FilingInfo_Layout1ToolVersionContext61);
                                        contextIdentifiers.add(FilingInfo_Layout1ToolVersionContext61.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType toolVersionValue64 = new StringItemType();
                                    toolVersionValue64.setContextRef(FilingInfo_Layout1ToolVersionContext61);
                                    
                                        toolVersionValue64.setValue(zeroFilingInfo_Layout1ToolVersionValue62);        
                                        
                                    
                                    JAXBElement<StringItemType> toolVersionElement65 = (new org.rbi.in.xbrl.rbi_core.ObjectFactory()).createToolVersion(toolVersionValue64);
                                    bodyElements.add(toolVersionElement65);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportStatus
                            
                                Map zeroFilingInfo_Layout1ReportStatusMap68 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportStatusValue67 = DBS01ReportUtil.retrieveValueForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap68);

                                    
                                        Context FilingInfo_Layout1ReportStatusContext66 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1ReportStatusValue67 != null && !"".equals(zeroFilingInfo_Layout1ReportStatusValue67)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1ReportStatusContext66.getId())) {
                                        contextElements.add(FilingInfo_Layout1ReportStatusContext66);
                                        contextIdentifiers.add(FilingInfo_Layout1ReportStatusContext66.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    ReportStatusItemType reportStatusValue69 = new ReportStatusItemType();
                                    reportStatusValue69.setContextRef(FilingInfo_Layout1ReportStatusContext66);
                                    
                                        reportStatusValue69.setValue(zeroFilingInfo_Layout1ReportStatusValue67);        
                                        
                                    
                                    JAXBElement<ReportStatusItemType> reportStatusElement70 = instancObjectFactory.createReportStatus(reportStatusValue69);
                                    bodyElements.add(reportStatusElement70);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - DateOfAudit
                            
                                Map zeroFilingInfo_Layout1DateOfAuditMap73 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1DateOfAuditValue72 = DBS01ReportUtil.retrieveValueForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap73);

                                    
                                    Context FilingInfo_Layout1DateOfAuditContext71 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1DateOfAuditValue72 != null && !"".equals(zeroFilingInfo_Layout1DateOfAuditValue72)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1DateOfAuditContext71.getId())) {
                                        contextElements.add(FilingInfo_Layout1DateOfAuditContext71);
                                        contextIdentifiers.add(FilingInfo_Layout1DateOfAuditContext71.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    DateItemType dateOfAuditValue74 = new DateItemType();
                                    dateOfAuditValue74.setContextRef(FilingInfo_Layout1DateOfAuditContext71);
                                    
                                    dateOfAuditValue74.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1DateOfAuditValue72));
                                    
                                    
                                    JAXBElement<DateItemType> dateOfAuditElement75 = instancObjectFactory.createDateOfAudit(dateOfAuditValue74);
                                    bodyElements.add(dateOfAuditElement75);
                                
                            }
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - GeneralRemarks
                            
                                Map zeroFilingInfo_Layout1GeneralRemarksMap78 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1GeneralRemarksValue77 = DBS01ReportUtil.retrieveValueForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap78);

                                    
                                        Context FilingInfo_Layout1GeneralRemarksContext76 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout1GeneralRemarksValue77 != null && !"".equals(zeroFilingInfo_Layout1GeneralRemarksValue77)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout1GeneralRemarksContext76.getId())) {
                                        contextElements.add(FilingInfo_Layout1GeneralRemarksContext76);
                                        contextIdentifiers.add(FilingInfo_Layout1GeneralRemarksContext76.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    TextBlockItemType generalRemarksValue79 = new TextBlockItemType();
                                    generalRemarksValue79.setContextRef(FilingInfo_Layout1GeneralRemarksContext76);
                                    
                                        generalRemarksValue79.setValue(zeroFilingInfo_Layout1GeneralRemarksValue77);        
                                        
                                    
                                    JAXBElement<TextBlockItemType> generalRemarksElement80 = instancObjectFactory.createGeneralRemarks(generalRemarksValue79);
                                    bodyElements.add(generalRemarksElement80);
                                
                            }
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                //FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                
                    private String filingInfo_Layout2Method(FilingInfo_Layout2 filingInfo_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    FilingInfo_Layout2 field = filingInfo_Layout2;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of FilingInfo_Layout2
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - NatureOfFilingEntity
                            
                                Map zeroFilingInfo_Layout2NatureOfFilingEntityMap83 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout2NatureOfFilingEntityValue82 = DBS01ReportUtil.retrieveValueForElement(field.getNatureOfFilingEntity(), zeroFilingInfo_Layout2NatureOfFilingEntityMap83);

                                    
                                        Context FilingInfo_Layout2NatureOfFilingEntityContext81 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroFilingInfo_Layout2NatureOfFilingEntityValue82 != null && !"".equals(zeroFilingInfo_Layout2NatureOfFilingEntityValue82)) {
                                    
                                    if(!contextIdentifiers.contains(FilingInfo_Layout2NatureOfFilingEntityContext81.getId())) {
                                        contextElements.add(FilingInfo_Layout2NatureOfFilingEntityContext81);
                                        contextIdentifiers.add(FilingInfo_Layout2NatureOfFilingEntityContext81.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    NatureOfFilingEntity natureOfFilingEntityValue84 = new NatureOfFilingEntity();
                                    natureOfFilingEntityValue84.setContextRef(FilingInfo_Layout2NatureOfFilingEntityContext81);
                                    
                                        natureOfFilingEntityValue84.setValue(zeroFilingInfo_Layout2NatureOfFilingEntityValue82);        
                                        
                                    
                                    JAXBElement<NatureOfFilingEntity> natureOfFilingEntityElement85 = instancObjectFactory.createNatureOfFilingEntity(natureOfFilingEntityValue84);
                                    bodyElements.add(natureOfFilingEntityElement85);
                                
                            }
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01AddInfo_Layout1 if any typeMembers then List or Single
                //DBS01AddInfo_Layout1 dBS01AddInfo_Layout1 = mainReportData.getDBS01AddInfo_Layout1();
                
                    private String dBS01AddInfo_Layout1Method(DBS01AddInfo_Layout1 dBS01AddInfo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    DBS01AddInfo_Layout1 field = dBS01AddInfo_Layout1;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerName
                            
                                Map zeroDBS01AddInfo_Layout1MakerNameMap88 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerNameValue87 = DBS01ReportUtil.retrieveValueForElement(field.getMakerName(), zeroDBS01AddInfo_Layout1MakerNameMap88);

                                    
                                        Context DBS01AddInfo_Layout1MakerNameContext86 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1MakerNameValue87 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerNameValue87)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerNameContext86.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1MakerNameContext86);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1MakerNameContext86.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType makerNameValue89 = new StringItemType();
                                    makerNameValue89.setContextRef(DBS01AddInfo_Layout1MakerNameContext86);
                                    
                                        makerNameValue89.setValue(zeroDBS01AddInfo_Layout1MakerNameValue87);        
                                        
                                    
                                    JAXBElement<StringItemType> makerNameElement90 = instancObjectFactory.createMakerName(makerNameValue89);
                                    bodyElements.add(makerNameElement90);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerDesignation
                            
                                Map zeroDBS01AddInfo_Layout1MakerDesignationMap93 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerDesignationValue92 = DBS01ReportUtil.retrieveValueForElement(field.getMakerDesignation(), zeroDBS01AddInfo_Layout1MakerDesignationMap93);

                                    
                                        Context DBS01AddInfo_Layout1MakerDesignationContext91 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1MakerDesignationValue92 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerDesignationValue92)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerDesignationContext91.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1MakerDesignationContext91);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1MakerDesignationContext91.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType makerDesignationValue94 = new StringItemType();
                                    makerDesignationValue94.setContextRef(DBS01AddInfo_Layout1MakerDesignationContext91);
                                    
                                        makerDesignationValue94.setValue(zeroDBS01AddInfo_Layout1MakerDesignationValue92);        
                                        
                                    
                                    JAXBElement<StringItemType> makerDesignationElement95 = instancObjectFactory.createMakerDesignation(makerDesignationValue94);
                                    bodyElements.add(makerDesignationElement95);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerEmail
                            
                                Map zeroDBS01AddInfo_Layout1MakerEmailMap98 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerEmailValue97 = DBS01ReportUtil.retrieveValueForElement(field.getMakerEmail(), zeroDBS01AddInfo_Layout1MakerEmailMap98);

                                    
                                        Context DBS01AddInfo_Layout1MakerEmailContext96 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1MakerEmailValue97 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerEmailValue97)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerEmailContext96.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1MakerEmailContext96);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1MakerEmailContext96.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    MailAddress makerEmailValue99 = new MailAddress();
                                    makerEmailValue99.setContextRef(DBS01AddInfo_Layout1MakerEmailContext96);
                                    
                                        makerEmailValue99.setValue(zeroDBS01AddInfo_Layout1MakerEmailValue97);        
                                        
                                    
                                    JAXBElement<MailAddress> makerEmailElement100 = instancObjectFactory.createMakerEmail(makerEmailValue99);
                                    bodyElements.add(makerEmailElement100);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerLandline
                            
                                Map zeroDBS01AddInfo_Layout1MakerLandlineMap103 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerLandlineValue102 = DBS01ReportUtil.retrieveValueForElement(field.getMakerLandline(), zeroDBS01AddInfo_Layout1MakerLandlineMap103);

                                    
                                        Context DBS01AddInfo_Layout1MakerLandlineContext101 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1MakerLandlineValue102 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerLandlineValue102)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerLandlineContext101.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1MakerLandlineContext101);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1MakerLandlineContext101.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType makerLandlineValue104 = new StringItemType();
                                    makerLandlineValue104.setContextRef(DBS01AddInfo_Layout1MakerLandlineContext101);
                                    
                                        makerLandlineValue104.setValue(zeroDBS01AddInfo_Layout1MakerLandlineValue102);        
                                        
                                    
                                    JAXBElement<StringItemType> makerLandlineElement105 = instancObjectFactory.createMakerLandline(makerLandlineValue104);
                                    bodyElements.add(makerLandlineElement105);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerMobile
                            
                                Map zeroDBS01AddInfo_Layout1MakerMobileMap108 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerMobileValue107 = DBS01ReportUtil.retrieveValueForElement(field.getMakerMobile(), zeroDBS01AddInfo_Layout1MakerMobileMap108);

                                    
                                        Context DBS01AddInfo_Layout1MakerMobileContext106 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1MakerMobileValue107 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerMobileValue107)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerMobileContext106.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1MakerMobileContext106);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1MakerMobileContext106.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    TelephoneNumber10DigitString makerMobileValue109 = new TelephoneNumber10DigitString();
                                    makerMobileValue109.setContextRef(DBS01AddInfo_Layout1MakerMobileContext106);
                                    
                                        makerMobileValue109.setValue(zeroDBS01AddInfo_Layout1MakerMobileValue107);        
                                        
                                    
                                    JAXBElement<TelephoneNumber10DigitString> makerMobileElement110 = instancObjectFactory.createMakerMobile(makerMobileValue109);
                                    bodyElements.add(makerMobileElement110);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerName
                            
                                Map zeroDBS01AddInfo_Layout1CheckerNameMap113 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerNameValue112 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerName(), zeroDBS01AddInfo_Layout1CheckerNameMap113);

                                    
                                        Context DBS01AddInfo_Layout1CheckerNameContext111 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1CheckerNameValue112 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerNameValue112)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerNameContext111.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1CheckerNameContext111);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1CheckerNameContext111.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType checkerNameValue114 = new StringItemType();
                                    checkerNameValue114.setContextRef(DBS01AddInfo_Layout1CheckerNameContext111);
                                    
                                        checkerNameValue114.setValue(zeroDBS01AddInfo_Layout1CheckerNameValue112);        
                                        
                                    
                                    JAXBElement<StringItemType> checkerNameElement115 = instancObjectFactory.createCheckerName(checkerNameValue114);
                                    bodyElements.add(checkerNameElement115);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerDesignation
                            
                                Map zeroDBS01AddInfo_Layout1CheckerDesignationMap118 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerDesignationValue117 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerDesignation(), zeroDBS01AddInfo_Layout1CheckerDesignationMap118);

                                    
                                        Context DBS01AddInfo_Layout1CheckerDesignationContext116 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1CheckerDesignationValue117 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerDesignationValue117)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerDesignationContext116.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1CheckerDesignationContext116);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1CheckerDesignationContext116.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType checkerDesignationValue119 = new StringItemType();
                                    checkerDesignationValue119.setContextRef(DBS01AddInfo_Layout1CheckerDesignationContext116);
                                    
                                        checkerDesignationValue119.setValue(zeroDBS01AddInfo_Layout1CheckerDesignationValue117);        
                                        
                                    
                                    JAXBElement<StringItemType> checkerDesignationElement120 = instancObjectFactory.createCheckerDesignation(checkerDesignationValue119);
                                    bodyElements.add(checkerDesignationElement120);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerEmail
                            
                                Map zeroDBS01AddInfo_Layout1CheckerEmailMap123 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerEmailValue122 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerEmail(), zeroDBS01AddInfo_Layout1CheckerEmailMap123);

                                    
                                        Context DBS01AddInfo_Layout1CheckerEmailContext121 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1CheckerEmailValue122 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerEmailValue122)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerEmailContext121.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1CheckerEmailContext121);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1CheckerEmailContext121.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    MailAddress checkerEmailValue124 = new MailAddress();
                                    checkerEmailValue124.setContextRef(DBS01AddInfo_Layout1CheckerEmailContext121);
                                    
                                        checkerEmailValue124.setValue(zeroDBS01AddInfo_Layout1CheckerEmailValue122);        
                                        
                                    
                                    JAXBElement<MailAddress> checkerEmailElement125 = instancObjectFactory.createCheckerEmail(checkerEmailValue124);
                                    bodyElements.add(checkerEmailElement125);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerLandline
                            
                                Map zeroDBS01AddInfo_Layout1CheckerLandlineMap128 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerLandlineValue127 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerLandline(), zeroDBS01AddInfo_Layout1CheckerLandlineMap128);

                                    
                                        Context DBS01AddInfo_Layout1CheckerLandlineContext126 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1CheckerLandlineValue127 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerLandlineValue127)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerLandlineContext126.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1CheckerLandlineContext126);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1CheckerLandlineContext126.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    StringItemType checkerLandlineValue129 = new StringItemType();
                                    checkerLandlineValue129.setContextRef(DBS01AddInfo_Layout1CheckerLandlineContext126);
                                    
                                        checkerLandlineValue129.setValue(zeroDBS01AddInfo_Layout1CheckerLandlineValue127);        
                                        
                                    
                                    JAXBElement<StringItemType> checkerLandlineElement130 = instancObjectFactory.createCheckerLandline(checkerLandlineValue129);
                                    bodyElements.add(checkerLandlineElement130);
                                
                            }
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckMobile
                            
                                Map zeroDBS01AddInfo_Layout1CheckMobileMap133 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckMobileValue132 = DBS01ReportUtil.retrieveValueForElement(field.getCheckMobile(), zeroDBS01AddInfo_Layout1CheckMobileMap133);

                                    
                                        Context DBS01AddInfo_Layout1CheckMobileContext131 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                // make a check if value is null or empty
                                if(zeroDBS01AddInfo_Layout1CheckMobileValue132 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckMobileValue132)) {
                                    
                                    if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckMobileContext131.getId())) {
                                        contextElements.add(DBS01AddInfo_Layout1CheckMobileContext131);
                                        contextIdentifiers.add(DBS01AddInfo_Layout1CheckMobileContext131.getId());
                                    }
                                    // create element JAXB Element
                                    
                                    TelephoneNumber10DigitString checkMobileValue134 = new TelephoneNumber10DigitString();
                                    checkMobileValue134.setContextRef(DBS01AddInfo_Layout1CheckMobileContext131);
                                    
                                        checkMobileValue134.setValue(zeroDBS01AddInfo_Layout1CheckMobileValue132);        
                                        
                                    
                                    JAXBElement<TelephoneNumber10DigitString> checkMobileElement135 = instancObjectFactory.createCheckMobile(checkMobileValue134);
                                    bodyElements.add(checkMobileElement135);
                                
                            }
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout1 if any typeMembers then List or Single
                //DBS01FS_Layout1 dBS01FS_Layout1 = mainReportData.getDBS01FS_Layout1();
                
                    private String dBS01FS_Layout1Method(DBS01FS_Layout1 dBS01FS_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    DBS01FS_Layout1 field = dBS01FS_Layout1;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR136 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR136 == null){
                                    INR136 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR136.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR136.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR136);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap138 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap138.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap138);
                            
                                if(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139 != null && !"".equals(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext137 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap138 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext137.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext137);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext137.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141.setContextRef(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext137);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141.setValue(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement140 = instancObjectFactory.createInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement140);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap143 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap143.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap143);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext142 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap143 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext142.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext142);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext142.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext142);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement145 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement145);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap148 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap148.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue149 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap148);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue149 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue149)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext147 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap148 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext147.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext147);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext147.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType151 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType151.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext147);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType151.setValue(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue149);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement150 = instancObjectFactory.createRemarkForInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType151);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement150);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR152 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR152 == null){
                                    INR152 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR152.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR152.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR152);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap154 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap154.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap154);
                            
                                if(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155 != null && !"".equals(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext153 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap154 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext153.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext153);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext153.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157.setContextRef(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext153);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157.setValue(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement156 = instancObjectFactory.createGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement156);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap159 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap159.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap159);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext158 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap159 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext158.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext158);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext158.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext158);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement161 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement161);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap164 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap164.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue165 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap164);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue165 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue165)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext163 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap164 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext163.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext163);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext163.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType167 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType167.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext163);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType167.setValue(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue165);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement166 = instancObjectFactory.createRemarkForGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType167);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement166);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR168 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR168 == null){
                                    INR168 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR168.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR168.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR168);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap170 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap170.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap170);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext169 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap170 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext169.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext169);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext169.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext169);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement172 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement172);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR174 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR174 == null){
                                    INR174 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR174.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR174.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR174);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap176 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap176.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue177 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap176);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue177 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue177)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext175 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap176 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext175.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext175);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext175.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType179 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType179.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext175);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType179.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue177);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement178 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType179);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement178);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap181 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap181.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap181);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext180 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap181 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext180.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext180);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext180.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184.setContextRef(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext180);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184.setValue(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement183 = instancObjectFactory.createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement183);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR185 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR185 == null){
                                    INR185 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR185.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR185.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR185);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap187 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap187.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap187);
                            
                                if(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188 != null && !"".equals(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext186 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap187 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext186.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext186);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext186.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190.setContextRef(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext186);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190.setValue(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement189 = instancObjectFactory.createInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement189);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap192 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap192.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap192);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext191 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap192 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext191.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext191);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext191.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext191);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement194 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement194);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap197 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap197.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue198 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap197);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue198 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue198)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext196 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap197 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext196.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext196);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext196.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType200 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType200.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext196);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType200.setValue(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue198);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement199 = instancObjectFactory.createRemarkForInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType200);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement199);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR201 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR201 == null){
                                    INR201 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR201.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR201.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR201);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap203 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap203.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue204 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap203);
                            
                                if(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue204 != null && !"".equals(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue204)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext202 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap203 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext202.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext202);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext202.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType206 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType206.setContextRef(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext202);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType206.setValue(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue204);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement205 = instancObjectFactory.createNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType206);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement205);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap208 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap208.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue209 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap208);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue209 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue209)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext207 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap208 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext207.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext207);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext207.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType211 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType211.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext207);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType211.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue209);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement210 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType211);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement210);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap213 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap213.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue214 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap213);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue214 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue214)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext212 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap213 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext212.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext212);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext212.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType216 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType216.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext212);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType216.setValue(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue214);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement215 = instancObjectFactory.createRemarkForNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType216);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement215);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR217 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR217 == null){
                                    INR217 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR217.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR217.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR217);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap219 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap219.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue220 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap219);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue220 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue220)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext218 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap219 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext218.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext218);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext218.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType222 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType222.setContextRef(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext218);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType222.setValue(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue220);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement221 = instancObjectFactory.createNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType222);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement221);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap224 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap224.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue225 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap224);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue225 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue225)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext223 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap224 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext223.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext223);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext223.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType227 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType227.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext223);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType227.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue225);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement226 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType227);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement226);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap229 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap229.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue230 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap229);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue230 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue230)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext228 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap229 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext228.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext228);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext228.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType232 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType232.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext228);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType232.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue230);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement231 = instancObjectFactory.createRemarkForNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType232);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement231);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR233 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR233 == null){
                                    INR233 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR233.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR233.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR233);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap235 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap235.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue236 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap235);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue236 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue236)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext234 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap235 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext234.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext234);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext234.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType238 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType238.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext234);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType238.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue236);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement237 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType238);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement237);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR239 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR239 == null){
                                    INR239 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR239.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR239.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR239);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap241 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap241.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue242 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap241);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue242 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue242)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext240 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap241 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext240.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext240);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext240.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType244 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType244.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext240);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType244.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue242);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement243 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType244);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement243);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap246 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap246.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue247 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap246);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue247 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue247)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext245 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap246 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext245.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext245);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext245.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType249 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType249.setContextRef(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext245);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType249.setValue(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue247);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement248 = instancObjectFactory.createRemarkForFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType249);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement248);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR250 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR250 == null){
                                    INR250 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR250.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR250.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR250);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap252 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap252.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue253 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap252);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue253 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue253)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext251 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap252 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext251.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext251);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext251.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType255 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType255.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext251);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType255.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue253);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement254 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType255);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement254);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR256 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR256 == null){
                                    INR256 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR256.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR256.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR256);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap258 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap258.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue259 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap258);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue259 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue259)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext257 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap258 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext257.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext257);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext257.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType261 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType261.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext257);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType261.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue259);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement260 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType261);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement260);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap263 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap263.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue264 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap263);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue264 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue264)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext262 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap263 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext262.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext262);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext262.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType266 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType266.setContextRef(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext262);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType266.setValue(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue264);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement265 = instancObjectFactory.createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType266);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement265);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR267 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR267 == null){
                                    INR267 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR267.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR267.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR267);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap269 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap269.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue270 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap269);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue270 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue270)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext268 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap269 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext268.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext268);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext268.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType272 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType272.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext268);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType272.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue270);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement271 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType272);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement271);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR273 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR273 == null){
                                    INR273 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR273.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR273.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR273);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap275 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap275.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap275);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext274 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap275 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext274.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext274);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext274.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext274);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement277 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement277);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap280 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap280.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue281 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap280);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue281 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue281)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext279 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap280 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext279.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext279);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext279.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType283 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType283.setContextRef(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext279);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType283.setValue(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue281);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement282 = instancObjectFactory.createRemarkForProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType283);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement282);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR284 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR284 == null){
                                    INR284 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR284.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR284.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR284);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap286 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap286.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap286);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext285 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap286 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext285.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext285);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext285.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext285);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement288 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement288);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR290 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR290 == null){
                                    INR290 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR290.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR290.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR290);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap292 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap292.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue293 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap292);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue293 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue293)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext291 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap292 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext291.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext291);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext291.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType295 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType295.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext291);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType295.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue293);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement294 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType295);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement294);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap297 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap297.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap297);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext296 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap297 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext296.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext296);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext296.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext296);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300.setValue(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement299 = instancObjectFactory.createRemarkForOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement299);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR301 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR301 == null){
                                    INR301 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR301.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR301.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR301);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap303 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap303.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap303);
                            
                                if(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304 != null && !"".equals(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext302 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap303 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext302.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext302);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext302.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306.setContextRef(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext302);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306.setValue(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement305 = instancObjectFactory.createGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement305);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap308 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap308.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap308);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext307 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap308 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext307.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext307);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext307.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext307);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement310 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement310);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap313 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap313.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue314 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap313);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue314 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue314)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext312 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap313 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext312.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext312);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext312.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType316 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType316.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext312);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType316.setValue(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue314);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement315 = instancObjectFactory.createRemarkForGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType316);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement315);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR317 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR317 == null){
                                    INR317 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR317.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR317.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR317);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap319 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap319.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap319);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext318 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap319 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext318.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext318);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext318.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322.setContextRef(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext318);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322.setValue(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement321 = instancObjectFactory.createNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement321);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap324 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap324.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap324);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext323 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap324 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext323.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext323);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext323.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext323);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement326 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement326);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap329 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap329.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue330 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap329);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue330 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue330)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext328 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap329 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext328.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext328);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext328.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType332 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType332.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext328);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType332.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue330);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement331 = instancObjectFactory.createRemarkForNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType332);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement331);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR333 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR333 == null){
                                    INR333 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR333.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR333.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR333);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - StaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap335 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap335.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue336 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap335);
                            
                                if(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue336 != null && !"".equals(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue336)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext334 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap335 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext334.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext334);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext334.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType338 = new StringItemType();
                                    explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType338.setContextRef(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext334);
                                    
                                    
                                        explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType338.setValue(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue336);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement337 = instancObjectFactory.createStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType338);
                                    bodyElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement337);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap340 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap340.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue341 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap340);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue341 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue341)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext339 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap340 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext339.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext339);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext339.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType343 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType343.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext339);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType343.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue341);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement342 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType343);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement342);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForStaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap345 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap345.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue346 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap345);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue346 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue346)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext344 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap345 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext344.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext344);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext344.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType348 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType348.setContextRef(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext344);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType348.setValue(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue346);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement347 = instancObjectFactory.createRemarkForStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType348);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement347);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR349 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR349 == null){
                                    INR349 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR349.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR349.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR349);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap351 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap351.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue352 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap351);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue352 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue352)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext350 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap351 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext350.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext350);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext350.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType354 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType354.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext350);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType354.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue352);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement353 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType354);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement353);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR355 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR355 == null){
                                    INR355 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR355.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR355.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR355);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap357 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap357.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue358 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap357);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue358 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue358)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext356 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap357 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext356.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext356);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext356.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType360 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType360.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext356);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType360.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue358);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement359 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType360);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement359);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap362 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap362.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue363 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap362);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue363 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue363)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext361 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap362 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext361.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext361);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext361.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType365 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType365.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext361);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType365.setValue(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue363);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement364 = instancObjectFactory.createRemarkForOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType365);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement364);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR366 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR366 == null){
                                    INR366 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR366.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR366.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR366);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap368 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap368.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue369 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap368);
                            
                                if(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue369 != null && !"".equals(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue369)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext367 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap368 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext367.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext367);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext367.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType371 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType371.setContextRef(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext367);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType371.setValue(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue369);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement370 = instancObjectFactory.createNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType371);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement370);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap373 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap373.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue374 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap373);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue374 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue374)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext372 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap373 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext372.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext372);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext372.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType376 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType376.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext372);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType376.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue374);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement375 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType376);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement375);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap378 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap378.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue379 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap378);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue379 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue379)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext377 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap378 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext377.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext377);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext377.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType381 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType381.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext377);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType381.setValue(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue379);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement380 = instancObjectFactory.createRemarkForNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType381);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement380);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR382 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR382 == null){
                                    INR382 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR382.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR382.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR382);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap384 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap384.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue385 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap384);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue385 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue385)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext383 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap384 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext383.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext383);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext383.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType387 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType387.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext383);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType387.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue385);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement386 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType387);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement386);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR388 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR388 == null){
                                    INR388 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR388.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR388.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR388);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap390 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap390.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap390);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext389 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap390 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext389.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext389);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext389.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext389);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement392 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement392);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap395 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap395.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue396 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap395);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue396 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue396)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext394 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap395 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext394.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext394);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext394.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType398 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType398.setContextRef(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext394);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType398.setValue(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue396);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement397 = instancObjectFactory.createRemarkForLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType398);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement397);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR399 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR399 == null){
                                    INR399 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR399.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR399.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR399);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap401 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap401.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap401);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext400 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap401 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext400.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext400);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext400.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext400);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement403 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement403);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR405 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR405 == null){
                                    INR405 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR405.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR405.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR405);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap407 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap407.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue408 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap407);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue408 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue408)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext406 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap407 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext406.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext406);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext406.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType410 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType410.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext406);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType410.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue408);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement409 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType410);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement409);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap412 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap412.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap412);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext411 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap412 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext411.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext411);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext411.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext411);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415.setValue(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement414 = instancObjectFactory.createRemarkForOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement414);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR416 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR416 == null){
                                    INR416 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR416.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR416.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR416);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap418 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap418.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue419 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap418);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue419 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue419)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext417 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap418 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext417.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext417);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext417.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType421 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType421.setContextRef(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext417);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType421.setValue(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue419);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement420 = instancObjectFactory.createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType421);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement420);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap423 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap423.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue424 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap423);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue424 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue424)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext422 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap423 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext422.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext422);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext422.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType426 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType426.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext422);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType426.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue424);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement425 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType426);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement425);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap428 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap428.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap428);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext427 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap428 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext427.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext427);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext427.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext427);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement430 = instancObjectFactory.createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement430);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR432 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR432 == null){
                                    INR432 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR432.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR432.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR432);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap434 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap434.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap434);
                            
                                if(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435 != null && !"".equals(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext433 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap434 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext433.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext433);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext433.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437.setContextRef(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext433);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437.setValue(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement436 = instancObjectFactory.createExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement436);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap439 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap439.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap439);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext438 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap439 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext438.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext438);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext438.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext438);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement441 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement441);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap444 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap444.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue445 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap444);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue445 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue445)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext443 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap444 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext443.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext443);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext443.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType447 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType447.setContextRef(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext443);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType447.setValue(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue445);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement446 = instancObjectFactory.createRemarkForExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType447);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement446);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR448 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR448 == null){
                                    INR448 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR448.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR448.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR448);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - IncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap450 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap450.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap450);
                            
                                if(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451 != null && !"".equals(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext449 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap450 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext449.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext449);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext449.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453 = new StringItemType();
                                    explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453.setContextRef(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext449);
                                    
                                    
                                        explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453.setValue(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement452 = instancObjectFactory.createIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453);
                                    bodyElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement452);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap455 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap455.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap455);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext454 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap455 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext454.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext454);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext454.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext454);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement457 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement457);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForIncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap460 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap460.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap460);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext459 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap460 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext459.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext459);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext459.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463.setContextRef(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext459);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463.setValue(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement462 = instancObjectFactory.createRemarkForIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement462);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR464 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR464 == null){
                                    INR464 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR464.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR464.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR464);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap466 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap466.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue467 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap466);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue467 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue467)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext465 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap466 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext465.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext465);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext465.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType469 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType469.setContextRef(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext465);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType469.setValue(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue467);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement468 = instancObjectFactory.createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType469);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement468);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap471 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap471.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue472 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap471);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue472 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue472)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext470 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap471 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext470.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext470);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext470.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType474 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType474.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext470);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType474.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue472);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement473 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType474);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement473);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap476 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap476.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap476);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext475 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap476 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext475.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext475);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext475.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext475);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement478 = instancObjectFactory.createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement478);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR480 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR480 == null){
                                    INR480 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR480.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR480.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR480);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap482 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap482.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue483 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap482);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue483 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue483)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext481 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap482 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext481.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext481);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext481.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType485 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType485.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext481);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType485.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue483);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement484 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType485);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement484);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR486 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR486 == null){
                                    INR486 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR486.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR486.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR486);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap488 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap488.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue489 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap488);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue489 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue489)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext487 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap488 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext487.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext487);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext487.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType491 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType491.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext487);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType491.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue489);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement490 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType491);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement490);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap493 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap493.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue494 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap493);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue494 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue494)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext492 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap493 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext492.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext492);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext492.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType496 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType496.setContextRef(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext492);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType496.setValue(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue494);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement495 = instancObjectFactory.createRemarkForDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType496);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement495);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR497 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR497 == null){
                                    INR497 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR497.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR497.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR497);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap499 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap499.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue500 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap499);
                            
                                if(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue500 != null && !"".equals(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue500)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext498 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap499 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext498.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext498);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext498.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType502 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType502.setContextRef(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext498);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType502.setValue(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue500);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement501 = instancObjectFactory.createRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType502);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement501);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap504 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap504.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue505 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap504);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue505 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue505)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext503 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap504 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext503.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext503);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext503.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType507 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType507.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext503);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType507.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue505);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement506 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType507);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement506);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForRetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap509 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap509.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue510 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap509);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue510 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue510)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext508 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap509 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext508.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext508);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext508.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType512 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType512.setContextRef(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext508);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType512.setValue(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue510);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement511 = instancObjectFactory.createRemarkForRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType512);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement511);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap514 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap514.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap514);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext513 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap514 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext513.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext513);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext513.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext513);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement516 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement516);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap519 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap519.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap519);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext518 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap519 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext518.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext518);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext518.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext518);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement521 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement521);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap524 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap524.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue525 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap524);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue525 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue525)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext523 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap524 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext523.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext523);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext523.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType527 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType527.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext523);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType527.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue525);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement526 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType527);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement526);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR528 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR528 == null){
                                    INR528 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR528.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR528.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR528);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap530 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap530.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap530);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext529 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap530 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext529.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext529);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext529.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext529);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement532 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement532);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap535 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap535.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap535);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext534 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap535 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext534.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext534);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext534.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext534);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement537 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement537);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap540 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap540.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue541 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap540);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue541 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue541)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext539 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap540 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext539.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext539);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext539.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType543 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType543.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext539);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType543.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue541);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement542 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType543);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement542);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR544 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR544 == null){
                                    INR544 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR544.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR544.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR544);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap546 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap546.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap546);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext545 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap546 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext545.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext545);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext545.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext545);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement548 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement548);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap551 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap551.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap551);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext550 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap551 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext550.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext550);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext550.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext550);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement553 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement553);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap556 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap556.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue557 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap556);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue557 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue557)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext555 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap556 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext555.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext555);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext555.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType559 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType559.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext555);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType559.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue557);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement558 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType559);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement558);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR560 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR560 == null){
                                    INR560 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR560.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR560.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR560);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap562 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap562.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue563 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap562);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue563 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue563)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext561 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap562 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext561.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext561);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext561.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType565 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType565.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext561);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType565.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue563);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement564 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType565);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement564);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR566 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR566 == null){
                                    INR566 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR566.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR566.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR566);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement570 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement570);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap573 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap573.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue574 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap573);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue574 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue574)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext572 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap573 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext572.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext572);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext572.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType576 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType576.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext572);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType576.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue574);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement575 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType576);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement575);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR577 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR577 == null){
                                    INR577 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR577.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR577.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR577);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap579 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap579.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue580 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap579);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue580 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue580)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext578 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap579 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext578.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext578);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext578.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType582 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType582.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext578);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType582.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue580);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement581 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType582);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement581);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap584 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap584.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue585 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap584);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue585 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue585)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext583 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap584 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext583.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext583);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext583.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType587 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType587.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext583);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType587.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue585);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement586 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType587);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement586);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap589 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap589.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue590 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap589);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue590 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue590)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext588 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap589 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext588.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext588);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext588.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType592 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType592.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext588);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType592.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue590);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement591 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType592);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement591);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR593 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR593 == null){
                                    INR593 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR593.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR593.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR593);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap595 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap595.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue596 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap595);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue596 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue596)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext594 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap595 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext594.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext594);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext594.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType598 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType598.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext594);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType598.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue596);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement597 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType598);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement597);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap600 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap600.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue601 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap600);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue601 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue601)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext599 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap600 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext599.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext599);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext599.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType603 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType603.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext599);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType603.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue601);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement602 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType603);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement602);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap605 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap605.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue606 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap605);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue606 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue606)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext604 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap605 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext604.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext604);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext604.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType608 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType608.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext604);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType608.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue606);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement607 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType608);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement607);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR609 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR609 == null){
                                    INR609 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR609.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR609.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR609);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap611 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap611.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue612 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap611);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue612 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue612)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext610 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap611 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext610.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext610);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext610.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType614 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType614.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext610);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType614.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue612);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement613 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType614);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement613);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR615 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR615 == null){
                                    INR615 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR615.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR615.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR615);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap617 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap617.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue618 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap617);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue618 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue618)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext616 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap617 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext616.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext616);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext616.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType620 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType620.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext616);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType620.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue618);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement619 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType620);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement619);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap622 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap622.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue623 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap622);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue623 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue623)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext621 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap622 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext621.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext621);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext621.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType625 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType625.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext621);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType625.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue623);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement624 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType625);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement624);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR626 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR626 == null){
                                    INR626 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR626.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR626.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR626);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap628 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap628.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue629 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap628);
                            
                                if(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue629 != null && !"".equals(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue629)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext627 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap628 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext627.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext627);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext627.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType631 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType631.setContextRef(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext627);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType631.setValue(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue629);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement630 = instancObjectFactory.createInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType631);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement630);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap633 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap633.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue634 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap633);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue634 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue634)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext632 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap633 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext632.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext632);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext632.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType636 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType636.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext632);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType636.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue634);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement635 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType636);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement635);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap638 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap638.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue639 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap638);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue639 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue639)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext637 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap638 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext637.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext637);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext637.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType641 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType641.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext637);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType641.setValue(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue639);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement640 = instancObjectFactory.createRemarkForInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType641);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement640);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR642 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR642 == null){
                                    INR642 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR642.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR642.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR642);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap644 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap644.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue645 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap644);
                            
                                if(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue645 != null && !"".equals(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue645)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext643 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap644 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext643.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext643);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext643.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType647 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType647.setContextRef(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext643);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType647.setValue(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue645);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement646 = instancObjectFactory.createGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType647);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement646);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap649 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap649.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue650 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap649);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue650 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue650)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext648 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap649 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext648.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext648);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext648.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType652 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType652.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext648);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType652.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue650);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement651 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType652);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement651);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap654 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap654.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue655 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap654);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue655 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue655)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext653 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap654 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext653.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext653);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext653.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType657 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType657.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext653);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType657.setValue(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue655);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement656 = instancObjectFactory.createRemarkForGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType657);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement656);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR658 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR658 == null){
                                    INR658 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR658.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR658.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR658);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap660 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap660.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue661 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap660);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue661 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue661)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext659 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap660 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext659.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext659);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext659.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType663 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType663.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext659);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType663.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue661);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement662 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType663);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement662);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR664 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR664 == null){
                                    INR664 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR664.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR664.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR664);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap666 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap666.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue667 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap666);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue667 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue667)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext665 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap666 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext665.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext665);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext665.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType669 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType669.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext665);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType669.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue667);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement668 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType669);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement668);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap671 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap671.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap671);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext670 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap671 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext670.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext670);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext670.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674.setContextRef(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext670);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674.setValue(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement673 = instancObjectFactory.createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement673);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR675 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR675 == null){
                                    INR675 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR675.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR675.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR675);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap677 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap677.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap677);
                            
                                if(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678 != null && !"".equals(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext676 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap677 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext676.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext676);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext676.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680.setContextRef(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext676);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680.setValue(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement679 = instancObjectFactory.createInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement679);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap682 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap682.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue683 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap682);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue683 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue683)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext681 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap682 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext681.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext681);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext681.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType685 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType685.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext681);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType685.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue683);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement684 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType685);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement684);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap687 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap687.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue688 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap687);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue688 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue688)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext686 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap687 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext686.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext686);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext686.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType690 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType690.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext686);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType690.setValue(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue688);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement689 = instancObjectFactory.createRemarkForInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType690);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement689);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR691 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR691 == null){
                                    INR691 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR691.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR691.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR691);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap693 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap693.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue694 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap693);
                            
                                if(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue694 != null && !"".equals(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue694)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext692 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap693 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext692.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext692);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext692.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType696 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType696.setContextRef(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext692);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType696.setValue(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue694);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement695 = instancObjectFactory.createNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType696);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement695);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap698 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap698.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue699 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap698);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue699 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue699)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext697 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap698 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext697.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext697);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext697.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType701 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType701.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext697);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType701.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue699);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement700 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType701);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement700);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap703 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap703.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue704 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap703);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue704 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue704)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext702 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap703 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext702.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext702);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext702.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType706 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType706.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext702);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType706.setValue(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue704);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement705 = instancObjectFactory.createRemarkForNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType706);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement705);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR707 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR707 == null){
                                    INR707 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR707.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR707.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR707);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap709 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap709.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue710 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap709);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue710 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue710)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext708 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap709 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext708.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext708);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext708.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType712 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType712.setContextRef(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext708);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType712.setValue(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue710);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement711 = instancObjectFactory.createNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType712);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement711);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap714 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap714.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue715 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap714);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue715 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue715)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext713 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap714 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext713.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext713);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext713.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType717 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType717.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext713);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType717.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue715);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement716 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType717);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement716);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap719 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap719.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue720 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap719);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue720 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue720)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext718 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap719 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext718.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext718);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext718.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType722 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType722.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext718);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType722.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue720);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement721 = instancObjectFactory.createRemarkForNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType722);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement721);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR723 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR723 == null){
                                    INR723 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR723.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR723.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR723);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap725 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap725.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue726 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap725);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue726 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue726)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext724 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap725 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext724.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext724);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext724.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType728 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType728.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext724);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType728.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue726);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement727 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType728);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement727);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR729 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR729 == null){
                                    INR729 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR729.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR729.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR729);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap731 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap731.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue732 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap731);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue732 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue732)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext730 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap731 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext730.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext730);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext730.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType734 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType734.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext730);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType734.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue732);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement733 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType734);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement733);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap736 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap736.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue737 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap736);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue737 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue737)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext735 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap736 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext735.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext735);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext735.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType739 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType739.setContextRef(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext735);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType739.setValue(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue737);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement738 = instancObjectFactory.createRemarkForFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType739);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement738);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR740 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR740 == null){
                                    INR740 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR740.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR740.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR740);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap742 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap742.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue743 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap742);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue743 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue743)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext741 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap742 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext741.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext741);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext741.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType745 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType745.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext741);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType745.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue743);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement744 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType745);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement744);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR746 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR746 == null){
                                    INR746 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR746.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR746.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR746);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap748 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap748.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue749 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap748);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue749 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue749)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext747 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap748 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext747.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext747);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext747.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType751 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType751.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext747);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType751.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue749);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement750 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType751);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement750);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap753 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap753.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue754 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap753);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue754 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue754)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext752 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap753 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext752.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext752);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext752.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType756 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType756.setContextRef(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext752);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType756.setValue(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue754);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement755 = instancObjectFactory.createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType756);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement755);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR757 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR757 == null){
                                    INR757 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR757.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR757.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR757);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap759 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap759.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue760 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap759);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue760 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue760)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext758 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap759 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext758.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext758);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext758.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType762 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType762.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext758);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType762.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue760);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement761 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType762);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement761);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR763 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR763 == null){
                                    INR763 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR763.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR763.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR763);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap765 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap765.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap765);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext764 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap765 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext764.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext764);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext764.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext764);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement767 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement767);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap770 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap770.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue771 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap770);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue771 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue771)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext769 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap770 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext769.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext769);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext769.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType773 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType773.setContextRef(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext769);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType773.setValue(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue771);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement772 = instancObjectFactory.createRemarkForProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType773);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement772);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR774 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR774 == null){
                                    INR774 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR774.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR774.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR774);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap776 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap776.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue777 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap776);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue777 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue777)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext775 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap776 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext775.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext775);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext775.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType779 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType779.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext775);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType779.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue777);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement778 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType779);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement778);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR780 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR780 == null){
                                    INR780 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR780.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR780.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR780);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap782 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap782.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue783 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap782);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue783 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue783)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext781 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap782 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext781.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext781);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext781.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType785 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType785.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext781);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType785.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue783);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement784 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType785);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement784);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap787 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap787.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap787);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext786 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap787 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext786.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext786);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext786.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext786);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790.setValue(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement789 = instancObjectFactory.createRemarkForOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement789);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR791 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR791 == null){
                                    INR791 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR791.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR791.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR791);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap793 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap793.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap793);
                            
                                if(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794 != null && !"".equals(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext792 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap793 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext792.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext792);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext792.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796.setContextRef(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext792);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796.setValue(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement795 = instancObjectFactory.createGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement795);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap798 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap798.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue799 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap798);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue799 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue799)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext797 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap798 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext797.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext797);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext797.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType801 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType801.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext797);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType801.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue799);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement800 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType801);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement800);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap803 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap803.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue804 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap803);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue804 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue804)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext802 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap803 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext802.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext802);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext802.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType806 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType806.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext802);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType806.setValue(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue804);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement805 = instancObjectFactory.createRemarkForGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType806);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement805);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR807 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR807 == null){
                                    INR807 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR807.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR807.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR807);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap809 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap809.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue810 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap809);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue810 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue810)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext808 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap809 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext808.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext808);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext808.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType812 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType812.setContextRef(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext808);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType812.setValue(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue810);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement811 = instancObjectFactory.createNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType812);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement811);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap814 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap814.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue815 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap814);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue815 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue815)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext813 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap814 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext813.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext813);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext813.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType817 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType817.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext813);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType817.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue815);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement816 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType817);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement816);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap819 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap819.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue820 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap819);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue820 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue820)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext818 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap819 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext818.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext818);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext818.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType822 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType822.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext818);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType822.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue820);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement821 = instancObjectFactory.createRemarkForNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType822);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement821);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR823 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR823 == null){
                                    INR823 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR823.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR823.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR823);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - StaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap825 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap825.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue826 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap825);
                            
                                if(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue826 != null && !"".equals(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue826)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext824 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap825 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext824.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext824);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext824.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType828 = new StringItemType();
                                    explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType828.setContextRef(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext824);
                                    
                                    
                                        explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType828.setValue(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue826);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement827 = instancObjectFactory.createStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType828);
                                    bodyElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement827);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap830 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap830.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue831 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap830);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue831 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue831)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext829 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap830 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext829.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext829);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext829.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType833 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType833.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext829);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType833.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue831);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement832 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType833);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement832);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForStaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap835 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap835.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue836 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap835);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue836 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue836)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext834 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap835 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext834.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext834);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext834.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType838 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType838.setContextRef(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext834);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType838.setValue(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue836);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement837 = instancObjectFactory.createRemarkForStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType838);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement837);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR839 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR839 == null){
                                    INR839 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR839.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR839.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR839);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap841 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap841.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue842 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap841);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue842 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue842)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext840 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap841 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext840.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext840);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext840.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType844 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType844.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext840);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType844.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue842);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement843 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType844);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement843);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR845 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR845 == null){
                                    INR845 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR845.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR845.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR845);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap847 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap847.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue848 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap847);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue848 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue848)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext846 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap847 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext846.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext846);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext846.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType850 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType850.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext846);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType850.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue848);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement849 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType850);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement849);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap852 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap852.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue853 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap852);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue853 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue853)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext851 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap852 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext851.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext851);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext851.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType855 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType855.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext851);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType855.setValue(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue853);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement854 = instancObjectFactory.createRemarkForOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType855);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement854);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR856 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR856 == null){
                                    INR856 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR856.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR856.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR856);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap858 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap858.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue859 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap858);
                            
                                if(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue859 != null && !"".equals(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue859)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext857 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap858 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext857.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext857);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext857.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType861 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType861.setContextRef(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext857);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType861.setValue(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue859);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement860 = instancObjectFactory.createNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType861);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement860);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap863 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap863.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue864 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap863);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue864 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue864)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext862 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap863 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext862.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext862);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext862.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType866 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType866.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext862);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType866.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue864);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement865 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType866);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement865);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap868 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap868.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue869 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap868);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue869 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue869)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext867 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap868 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext867.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext867);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext867.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType871 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType871.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext867);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType871.setValue(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue869);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement870 = instancObjectFactory.createRemarkForNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType871);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement870);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR872 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR872 == null){
                                    INR872 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR872.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR872.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR872);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap874 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap874.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue875 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap874);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue875 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue875)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext873 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap874 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext873.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext873);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext873.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType877 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType877.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext873);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType877.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue875);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement876 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType877);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement876);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR878 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR878 == null){
                                    INR878 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR878.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR878.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR878);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap880 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap880.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap880);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext879 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap880 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext879.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext879);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext879.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext879);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement882 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement882);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap885 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap885.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue886 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap885);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue886 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue886)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext884 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap885 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext884.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext884);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext884.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType888 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType888.setContextRef(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext884);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType888.setValue(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue886);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement887 = instancObjectFactory.createRemarkForLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType888);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement887);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR889 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR889 == null){
                                    INR889 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR889.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR889.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR889);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap891 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap891.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue892 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap891);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue892 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue892)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext890 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap891 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext890.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext890);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext890.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType894 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType894.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext890);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType894.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue892);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement893 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType894);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement893);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR895 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR895 == null){
                                    INR895 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR895.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR895.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR895);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap897 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap897.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue898 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap897);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue898 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue898)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext896 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap897 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext896.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext896);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext896.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType900 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType900.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext896);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType900.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue898);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement899 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType900);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement899);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap902 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap902.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap902);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext901 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap902 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext901.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext901);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext901.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext901);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905.setValue(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement904 = instancObjectFactory.createRemarkForOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement904);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR906 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR906 == null){
                                    INR906 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR906.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR906.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR906);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap908 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap908.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue909 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap908);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue909 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue909)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext907 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap908 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext907.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext907);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext907.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType911 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType911.setContextRef(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext907);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType911.setValue(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue909);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement910 = instancObjectFactory.createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType911);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement910);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap913 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap913.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue914 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap913);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue914 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue914)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext912 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap913 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext912.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext912);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext912.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType916 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType916.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext912);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType916.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue914);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement915 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType916);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement915);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap918 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap918.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap918);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext917 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap918 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext917.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext917);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext917.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext917);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement920 = instancObjectFactory.createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement920);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR922 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR922 == null){
                                    INR922 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR922.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR922.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR922);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap924 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap924.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap924);
                            
                                if(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925 != null && !"".equals(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext923 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap924 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext923.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext923);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext923.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927.setContextRef(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext923);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927.setValue(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement926 = instancObjectFactory.createExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement926);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap929 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap929.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue930 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap929);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue930 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue930)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext928 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap929 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext928.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext928);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext928.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType932 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType932.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext928);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType932.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue930);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement931 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType932);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement931);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap934 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap934.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue935 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap934);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue935 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue935)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext933 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap934 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext933.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext933);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext933.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType937 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType937.setContextRef(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext933);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType937.setValue(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue935);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement936 = instancObjectFactory.createRemarkForExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType937);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement936);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR938 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR938 == null){
                                    INR938 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR938.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR938.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR938);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - IncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap940 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap940.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue941 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap940);
                            
                                if(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue941 != null && !"".equals(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue941)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext939 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap940 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext939.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext939);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext939.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType943 = new StringItemType();
                                    explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType943.setContextRef(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext939);
                                    
                                    
                                        explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType943.setValue(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue941);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement942 = instancObjectFactory.createIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType943);
                                    bodyElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement942);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap945 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap945.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue946 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap945);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue946 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue946)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext944 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap945 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext944.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext944);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext944.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType948 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType948.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext944);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType948.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue946);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement947 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType948);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement947);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForIncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap950 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap950.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue951 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap950);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue951 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue951)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext949 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap950 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext949.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext949);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext949.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType953 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType953.setContextRef(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext949);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType953.setValue(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue951);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement952 = instancObjectFactory.createRemarkForIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType953);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement952);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR954 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR954 == null){
                                    INR954 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR954.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR954.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR954);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap956 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap956.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue957 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap956);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue957 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue957)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext955 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap956 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext955.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext955);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext955.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType959 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType959.setContextRef(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext955);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType959.setValue(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue957);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement958 = instancObjectFactory.createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType959);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement958);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap961 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap961.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue962 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap961);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue962 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue962)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext960 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap961 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext960.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext960);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext960.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType964 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType964.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext960);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType964.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue962);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement963 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType964);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap966 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap966.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap966);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext965 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap966 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext965.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext965);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext965.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext965);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement968 = instancObjectFactory.createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement968);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR970 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR970 == null){
                                    INR970 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR970.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR970.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR970);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap972 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap972.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue973 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap972);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue973 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue973)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext971 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap972 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext971.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext971);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext971.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType975 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType975.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext971);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType975.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue973);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement974 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType975);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement974);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR976 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR976 == null){
                                    INR976 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR976.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR976.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR976);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap978 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap978.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue979 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap978);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue979 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue979)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext977 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap978 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext977.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext977);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext977.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType981 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType981.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext977);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType981.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue979);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement980 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType981);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement980);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap983 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap983.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue984 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap983);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue984 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue984)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext982 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap983 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext982.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext982);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext982.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType986 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType986.setContextRef(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext982);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType986.setValue(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue984);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement985 = instancObjectFactory.createRemarkForDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType986);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement985);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR987 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR987 == null){
                                    INR987 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR987.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR987.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR987);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap989 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap989.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue990 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap989);
                            
                                if(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue990 != null && !"".equals(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue990)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext988 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap989 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext988.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext988);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext988.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType992 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType992.setContextRef(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext988);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType992.setValue(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue990);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement991 = instancObjectFactory.createRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType992);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement991);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap994 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap994.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue995 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap994);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue995 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue995)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext993 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap994 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext993.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext993);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext993.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType997 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType997.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext993);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType997.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue995);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement996 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType997);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement996);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForRetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap999 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap999.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1000 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap999);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1000 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1000)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext998 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap999 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext998.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext998);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext998.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1002 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1002.setContextRef(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext998);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1002.setValue(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1000);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1001 = instancObjectFactory.createRemarkForRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1002);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1001);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1004 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1004.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1005 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1004);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1005 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1005)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1003 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1004 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1003.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1003);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1003.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1007 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1007.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1003);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1007.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1005);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1006 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1007);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1006);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1009 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1009.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1010 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1009);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1010 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1010)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1008 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1009 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1008.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1008);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1012 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1012.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1008);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1012.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1011 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1012);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1014 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1014.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1015 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1014);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1015 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1015)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1013 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1014 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1013.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1013);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1013.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1017 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1017.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1013);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1017.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1015);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1016 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1017);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1016);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1018 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1018 == null){
                                    INR1018 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1018.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1018.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1018);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1020 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1020.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1021 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1020);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1021 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1021)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1019 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1020 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1019.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1019);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1019.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1023 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1023.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1019);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1023.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1021);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1022 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1023);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1022);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1025 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1025.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1026 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1025);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1026 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1026)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1024 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1025 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1024.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1024);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1024.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1028 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1028.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1024);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1028.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1026);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1027 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1028);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1027);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1030 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1030.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1031 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1030);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1031 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1031)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1029 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1030 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1029.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1029);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1029.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1033 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1033.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1029);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1033.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1031);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1032 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1033);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1032);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1034 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1034 == null){
                                    INR1034 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1034.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1034.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1034);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1036 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1036.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1037 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1036);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1037 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1037)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1035 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1036 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1035.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1035);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1035.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1039 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1039.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1035);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1039.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1037);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1038 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1039);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1038);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1041 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1041.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1042 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1041);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1042 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1042)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1040 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1041 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1040.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1040);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1040.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1044 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1044.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1040);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1044.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1042);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1043 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1044);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1043);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1046 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1046.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1047 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1046);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1047 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1047)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1045 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1046 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1045.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1045);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1045.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1049 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1049.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1045);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1049.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1047);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1048 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1049);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1048);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1050 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1050 == null){
                                    INR1050 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1050.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1050.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1050);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1052 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1052.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1053 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1052);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1053 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1053)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1051 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1052 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1051.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1051);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1051.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1055 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1055.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1051);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1055.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1053);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1054 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1055);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1054);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1056 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1056 == null){
                                    INR1056 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1056.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1056.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1056);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1060 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1060);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1063 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1063.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1064 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1063);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1064 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1064)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1062 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1063 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1062.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1062);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1062.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1066 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1066.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1062);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1066.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1064);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1065 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1066);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1065);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1067 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1067 == null){
                                    INR1067 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1067.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1067.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1067);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1069 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1069.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1070 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1069);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1070 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1070)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1068 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1069 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1068.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1068);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1068.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1072 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1072.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1068);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1072.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1070);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1071 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1072);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1071);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1074 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1074.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1075 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1074);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1075 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1075)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1073 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1074 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1073.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1073);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1073.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1077 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1077.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1073);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1077.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1075);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1076 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1077);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1076);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1079 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1079.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1080 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1079);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1080 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1080)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1078 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1079 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1078.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1078);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1078.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1082 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1082.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1078);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1082.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1080);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1081 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1082);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1081);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1083 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1083 == null){
                                    INR1083 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1083.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1083.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1083);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1085 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1085.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1086 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1085);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1086 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1086)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1084 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1085 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1084.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1084);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1084.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1088 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1088.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1084);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1088.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1086);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1087 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1088);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1087);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1090 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1090.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1091 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1090);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1091 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1091)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1089 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1090 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1089.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1089);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1089.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1093 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1093.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1089);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1093.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1091);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1092 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1093);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1092);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1095 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1095.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1096 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1095);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1096 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1096)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1094 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1095 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1094.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1094);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1094.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1098 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1098.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1094);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1098.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1096);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1097 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1098);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1097);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1099 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1099 == null){
                                    INR1099 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1099.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1099.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1099);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1101 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1101.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1102 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1101);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1102 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1102)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1100 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1101 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1100.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1100);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1100.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1104 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1104.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1100);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1104.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1102);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1103 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1104);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1103);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1105 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1105 == null){
                                    INR1105 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1105.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1105.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1105);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1107 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1107.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1108 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1107);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1108 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1108)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1106 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1107 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1106.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1106);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1106.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1110 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1110.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1106);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1110.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1108);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1109 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1110);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1109);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1112 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1112.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1113 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1112);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1113 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1113)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1111 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1112 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1111.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1111);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1111.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1115 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1115.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1111);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1115.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1113);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1114 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1115);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1114);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR1116 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1116 == null){
                                    INR1116 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1116.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1116.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1116);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1118 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1118.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1119 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1118);
                            
                                if(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1119 != null && !"".equals(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1119)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1117 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1118 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1117.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1117);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1117.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1121 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1121.setContextRef(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1117);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1121.setValue(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1119);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberElement1120 = instancObjectFactory.createInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1121);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberElement1120);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1123 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1123.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1124 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1123);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1124 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1124)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1122 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1123 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1122.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1122);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1122.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1126 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1126.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1122);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1126.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1124);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1125 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1126);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1125);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1128 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1128.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1129 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1128);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1129 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1129)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1127 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1128 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1127.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1127);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1127.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1131 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1131.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1127);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1131.setValue(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1129);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberElement1130 = instancObjectFactory.createRemarkForInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1131);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberElement1130);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1132 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1132 == null){
                                    INR1132 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1132.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1132.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1132);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1134 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1134.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1135 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1134);
                            
                                if(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1135 != null && !"".equals(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1135)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1133 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1134 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1133.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1133);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1133.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1137 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1137.setContextRef(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1133);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1137.setValue(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1135);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1136 = instancObjectFactory.createGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1137);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1139 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1139.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1140 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1139);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1140 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1140)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1138 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1139 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1138.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1138);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1138.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1142 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1142.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1138);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1142.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1140);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1141 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1142);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1141);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1144 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1144.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1145 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1144);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1145 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1145)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1143 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1144 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1143.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1143);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1143.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1147 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1147.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1143);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1147.setValue(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1145);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1146 = instancObjectFactory.createRemarkForGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1147);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1146);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1148 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1148 == null){
                                    INR1148 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1148.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1148.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1148);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1150 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1150.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1151 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1150);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1151 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1151)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1149 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1150 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1149.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1149);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1149.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1153 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1153.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1149);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1153.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1151);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1152 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1153);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1154 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1154 == null){
                                    INR1154 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1154.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1154.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1154);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1156 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1156.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1157 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1156);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1157 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1157)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1155 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1156 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1155.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1155);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1155.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1159 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1159.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1155);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1159.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1157);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1158 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1159);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1158);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1161 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1161.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1162 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1161);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1162 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1162)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1160 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1161 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1160.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1160);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1160.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1164 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1164.setContextRef(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1160);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1164.setValue(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1162);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1163 = instancObjectFactory.createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1164);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1163);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1165 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1165 == null){
                                    INR1165 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1165.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1165.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1165);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1167 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1167.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1168 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1167);
                            
                                if(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1168 != null && !"".equals(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1168)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1166 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1167 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1166.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1166);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1166.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1170 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1170.setContextRef(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1166);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1170.setValue(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1168);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberElement1169 = instancObjectFactory.createInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1170);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberElement1169);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1172 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1172.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1173 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1172);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1173 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1173)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1171 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1172 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1171.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1171);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1171.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1175 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1175.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1171);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1175.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1173);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1174 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1175);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1174);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1177 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1177.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1178 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1177);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1178 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1178)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1176 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1177 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1176.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1176);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1176.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1180 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1180.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1176);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1180.setValue(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1178);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberElement1179 = instancObjectFactory.createRemarkForInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1180);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberElement1179);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1181 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1181 == null){
                                    INR1181 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1181.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1181.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1181);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1183 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1183.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1184 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1183);
                            
                                if(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1184 != null && !"".equals(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1184)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1182 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1183 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1182.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1182);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1182.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1186 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1186.setContextRef(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1182);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1186.setValue(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1184);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberElement1185 = instancObjectFactory.createNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1186);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberElement1185);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1188 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1188.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1189 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1188);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1189 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1189)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1187 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1188 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1187.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1187);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1187.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1191 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1191.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1187);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1191.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1189);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1190 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1191);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1190);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1193 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1193.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1194 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1193);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1194 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1194)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1192 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1193 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1192.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1192);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1192.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1196 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1196.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1192);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1196.setValue(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1194);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberElement1195 = instancObjectFactory.createRemarkForNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1196);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberElement1195);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1197 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1197 == null){
                                    INR1197 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1197.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1197.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1197);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1199 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1199.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1200 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1199);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1200 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1200)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1198 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1199 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1198.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1198);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1198.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1202 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1202.setContextRef(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1198);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1202.setValue(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1200);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberElement1201 = instancObjectFactory.createNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1202);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberElement1201);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1204 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1204.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1205 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1204);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1205 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1205)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1203 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1204 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1203.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1203);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1203.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1207 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1207.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1203);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1207.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1205);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1206 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1207);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1206);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1209 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1209.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1210 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1209);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1210 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1210)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1208 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1209 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1208.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1208);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1208.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1212 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1212.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1208);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1212.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1210);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberElement1211 = instancObjectFactory.createRemarkForNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1212);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberElement1211);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1213 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1213 == null){
                                    INR1213 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1213.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1213.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1213);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1215 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1215.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1216 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1215);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1216 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1216)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1214 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1215 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1214.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1214);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1214.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1218 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1218.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1214);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1218.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1216);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1217 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1218);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1217);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1219 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1219 == null){
                                    INR1219 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1219.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1219.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1219);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1221 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1221.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1222 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1221);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1222 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1222)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1220 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1221 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1220.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1220);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1220.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1224 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1224.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1220);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1224.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1222);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1223 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1224);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1223);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1226 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1226.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1227 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1226);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1227 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1227)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1225 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1226 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1225.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1225);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1225.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1229 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1229.setContextRef(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1225);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1229.setValue(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1227);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1228 = instancObjectFactory.createRemarkForFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1229);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1228);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1230 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1230 == null){
                                    INR1230 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1230.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1230.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1230);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1232 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1232.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1233 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1232);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1233 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1233)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1231 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1232 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1231.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1231);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1231.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1235 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1235.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1231);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1235.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1233);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1234 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1235);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1234);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1236 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1236 == null){
                                    INR1236 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1236.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1236.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1236);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1238 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1238.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1239 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1238);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1239 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1239)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1237 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1238 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1237.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1237);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1237.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1241 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1241.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1237);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1241.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1239);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1240 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1241);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1240);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1243 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1243.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1244 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1243);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1244 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1244)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1242 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1243 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1242.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1242);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1242.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1246 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1246.setContextRef(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1242);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1246.setValue(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1244);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1245 = instancObjectFactory.createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1246);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1245);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1247 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1247 == null){
                                    INR1247 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1247.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1247.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1247);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1249 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1249.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1250 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1249);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1250 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1250)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1248 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1249 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1248.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1248);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1248.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1252 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1252.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1248);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1252.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1250);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1251 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1252);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1251);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1253 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1253 == null){
                                    INR1253 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1253.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1253.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1253);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1255 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1255.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1256 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1255);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1256 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1256)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1254 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1255 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1254.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1254);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1254.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1258 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1258.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1254);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1258.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1256);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1257 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1258);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1257);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1260 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1260.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1261 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1260);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1261 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1261)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1259 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1260 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1259.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1259);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1259.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1263 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1263.setContextRef(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1259);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1263.setValue(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1261);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberElement1262 = instancObjectFactory.createRemarkForProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1263);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberElement1262);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1264 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1264 == null){
                                    INR1264 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1264.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1264.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1264);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1266 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1266.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1267 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1266);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1267 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1267)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1265 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1266 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1265.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1265);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1265.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1269 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1269.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1265);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1269.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1267);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1268 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1269);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1268);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1270 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1270 == null){
                                    INR1270 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1270.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1270.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1270);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1272 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1272.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1273 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1272);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1273 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1273)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1271 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1272 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1271.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1271);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1271.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1275 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1275.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1271);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1275.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1273);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1274 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1275);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1274);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1277 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1277.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1278 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1277);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1278 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1278)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1276 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1277 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1276.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1276);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1276.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1280 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1280.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1276);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1280.setValue(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1278);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberElement1279 = instancObjectFactory.createRemarkForOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1280);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberElement1279);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1281 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1281 == null){
                                    INR1281 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1281.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1281.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1281);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1283 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1283.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1284 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1283);
                            
                                if(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1284 != null && !"".equals(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1284)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1282 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1283 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1282.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1282);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1282.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1286 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1286.setContextRef(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1282);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1286.setValue(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1284);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberElement1285 = instancObjectFactory.createGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1286);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberElement1285);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1288 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1288.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1289 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1288);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1289 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1289)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1287 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1288 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1287.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1287);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1287.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1291 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1291.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1287);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1291.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1289);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1290 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1291);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1290);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1293 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1293.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1294 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1293);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1294 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1294)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1292 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1293 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1292.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1292);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1292.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1296 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1296.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1292);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1296.setValue(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1294);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberElement1295 = instancObjectFactory.createRemarkForGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1296);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberElement1295);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1297 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1297 == null){
                                    INR1297 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1297.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1297.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1297);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1299 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1299.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1300 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1299);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1300 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1300)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1298 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1299 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1298.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1298);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1298.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1302 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1302.setContextRef(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1298);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1302.setValue(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1300);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberElement1301 = instancObjectFactory.createNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1302);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberElement1301);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1304 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1304.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1305 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1304);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1305 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1305)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1303 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1304 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1303.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1303);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1303.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1307 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1307.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1303);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1307.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1305);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1306 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1307);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1306);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1309 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1309.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1310 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1309);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1310 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1310)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1308 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1309 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1308.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1308);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1308.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1312 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1312.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1308);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1312.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1310);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberElement1311 = instancObjectFactory.createRemarkForNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1312);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberElement1311);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1313 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1313 == null){
                                    INR1313 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1313.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1313.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1313);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - StaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1315 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1315.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1316 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1315);
                            
                                if(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1316 != null && !"".equals(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1316)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1314 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1315 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1314.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1314);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1314.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1318 = new StringItemType();
                                    explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1318.setContextRef(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1314);
                                    
                                    
                                        explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1318.setValue(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1316);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberElement1317 = instancObjectFactory.createStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1318);
                                    bodyElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberElement1317);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1320 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1320.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1321 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1320);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1321 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1321)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1319 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1320 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1319.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1319);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1319.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1323 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1323.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1319);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1323.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1321);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1322 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1323);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1322);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForStaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1325 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1325.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1326 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1325);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1326 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1326)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1324 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1325 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1324.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1324);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1324.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1328 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1328.setContextRef(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1324);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1328.setValue(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1326);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberElement1327 = instancObjectFactory.createRemarkForStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1328);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberElement1327);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1329 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1329 == null){
                                    INR1329 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1329.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1329.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1329);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1331 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1331.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1332 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1331);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1332 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1332)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1330 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1331 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1330.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1330);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1330.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1334 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1334.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1330);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1334.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1332);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1333 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1334);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1333);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1335 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1335 == null){
                                    INR1335 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1335.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1335.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1335);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1337 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1337.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1338 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1337);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1338 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1338)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1336 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1337 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1336.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1336);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1336.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1340 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1340.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1336);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1340.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1338);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1339 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1340);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1339);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1342 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1342.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1343 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1342);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1343 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1343)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1341 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1342 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1341.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1341);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1341.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1345 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1345.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1341);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1345.setValue(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1343);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberElement1344 = instancObjectFactory.createRemarkForOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1345);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberElement1344);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1346 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1346 == null){
                                    INR1346 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1346.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1346.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1346);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1348 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1348.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1349 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1348);
                            
                                if(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1349 != null && !"".equals(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1349)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1347 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1348 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1347.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1347);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1347.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1351 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1351.setContextRef(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1347);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1351.setValue(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1349);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberElement1350 = instancObjectFactory.createNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1351);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberElement1350);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1353 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1353.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1354 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1353);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1354 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1354)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1352 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1353 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1352.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1352);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1352.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1356 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1356.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1352);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1356.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1354);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1355 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1356);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1355);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1358 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1358.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1359 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1358);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1359 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1359)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1357 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1358 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1357.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1357);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1357.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1361 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1361.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1357);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1361.setValue(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1359);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberElement1360 = instancObjectFactory.createRemarkForNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1361);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberElement1360);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1362 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1362 == null){
                                    INR1362 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1362.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1362.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1362);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1364 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1364.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1365 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1364);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1365 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1365)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1363 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1364 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1363.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1363);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1363.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1367 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1367.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1363);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1367.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1365);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1366 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1367);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1366);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1368 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1368 == null){
                                    INR1368 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1368.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1368.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1368);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1370 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1370.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1371 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1370);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1371 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1371)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1369 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1370 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1369.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1369);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1369.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1373 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1373.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1369);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1373.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1371);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1372 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1373);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1372);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1375 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1375.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1376 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1375);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1376 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1376)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1374 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1375 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1374.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1374);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1374.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1378 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1378.setContextRef(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1374);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1378.setValue(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1376);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1377 = instancObjectFactory.createRemarkForLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1378);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1377);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1379 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1379 == null){
                                    INR1379 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1379.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1379.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1379);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1381 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1381.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1382 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1381);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1382 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1382)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1380 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1381 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1380.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1380);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1380.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1384 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1384.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1380);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1384.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1382);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1383 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1384);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1383);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1385 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1385 == null){
                                    INR1385 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1385.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1385.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1385);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1387 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1387.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1388 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1387);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1388 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1388)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1386 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1387 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1386.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1386);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1386.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1390 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1390.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1386);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1390.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1388);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1389 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1390);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1389);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1392 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1392.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1393 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1392);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1393 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1393)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1391 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1392 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1391.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1391);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1391.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1395 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1395.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1391);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1395.setValue(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1393);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1394 = instancObjectFactory.createRemarkForOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1395);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1394);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1396 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1396 == null){
                                    INR1396 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1396.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1396.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1396);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1398 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1398.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1399 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1398);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1399 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1399)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1397 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1398 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1397.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1397);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1397.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1401 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1401.setContextRef(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1397);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1401.setValue(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1399);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1400 = instancObjectFactory.createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1401);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1400);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1403 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1403.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1404 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1403);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1404 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1404)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1402 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1403 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1402.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1402);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1402.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1406 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1406.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1402);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1406.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1404);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1405 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1406);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1405);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1408 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1408.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1409 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1408);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1409 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1409)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1407 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1408 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1407.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1407);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1407.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1411 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1411.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1407);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1411.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1409);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1410 = instancObjectFactory.createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1411);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1410);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1412 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1412 == null){
                                    INR1412 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1412.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1412.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1412);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1414 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1414.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1415 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1414);
                            
                                if(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1415 != null && !"".equals(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1415)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1413 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1414 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1413.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1413);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1413.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1417 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1417.setContextRef(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1413);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1417.setValue(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1415);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1416 = instancObjectFactory.createExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1417);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1416);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1419 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1419.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1420 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1419);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1420 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1420)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1418 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1419 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1418.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1418);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1418.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1422 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1422.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1418);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1422.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1420);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1421 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1422);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1421);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1424 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1424.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1425 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1424);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1425 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1425)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1423 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1424 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1423.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1423);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1423.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1427 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1427.setContextRef(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1423);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1427.setValue(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1425);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1426 = instancObjectFactory.createRemarkForExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1427);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1426);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1428 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1428 == null){
                                    INR1428 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1428.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1428.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1428);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - IncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1430 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1430.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1431 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1430);
                            
                                if(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1431 != null && !"".equals(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1431)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1429 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1430 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1429.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1429);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1429.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1433 = new StringItemType();
                                    explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1433.setContextRef(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1429);
                                    
                                    
                                        explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1433.setValue(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1431);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberElement1432 = instancObjectFactory.createIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1433);
                                    bodyElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberElement1432);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1435 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1435.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1436 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1435);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1436 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1436)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1434 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1435 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1434.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1434);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1434.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1438 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1438.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1434);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1438.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1436);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1437 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1438);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1437);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForIncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1440 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1440.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1441 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1440);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1441 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1441)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1439 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1440 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1439.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1439);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1439.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1443 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1443.setContextRef(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1439);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1443.setValue(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1441);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberElement1442 = instancObjectFactory.createRemarkForIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1443);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberElement1442);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1444 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1444 == null){
                                    INR1444 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1444.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1444.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1444);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1446 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1446.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1447 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1446);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1447 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1447)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1445 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1446 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1445.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1445);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1445.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1449 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1449.setContextRef(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1445);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1449.setValue(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1447);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1448 = instancObjectFactory.createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1449);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1448);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1451 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1451.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1452 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1451);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1452 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1452)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1450 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1451 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1450.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1450);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1450.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1454 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1454.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1450);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1454.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1452);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1453 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1454);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1453);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1456 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1456.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1457 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1456);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1457 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1457)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1455 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1456 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1455.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1455);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1455.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1459 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1459.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1455);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1459.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1457);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1458 = instancObjectFactory.createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1459);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1458);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1460 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1460 == null){
                                    INR1460 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1460.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1460.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1460);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1462 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1462.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1463 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1462);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1463 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1463)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1461 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1462 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1461.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1461);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1461.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1465 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1465.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1461);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1465.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1463);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1464 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1465);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1464);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1466 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1466 == null){
                                    INR1466 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1466.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1466.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1466);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1468 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1468.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1469 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1468);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1469 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1469)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1467 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1468 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1467.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1467);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1467.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1471 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1471.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1467);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1471.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1469);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1470 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1471);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1470);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1473 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1473.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1474 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1473);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1474 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1474)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1472 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1473 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1472.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1472);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1472.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1476 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1476.setContextRef(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1472);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1476.setValue(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1474);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberElement1475 = instancObjectFactory.createRemarkForDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1476);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberElement1475);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1477 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1477 == null){
                                    INR1477 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1477.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1477.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1477);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1479 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1479.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1480 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1479);
                            
                                if(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1480 != null && !"".equals(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1480)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1478 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1479 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1478.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1478);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1478.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1482 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1482.setContextRef(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1478);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1482.setValue(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1480);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberElement1481 = instancObjectFactory.createRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1482);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberElement1481);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1484 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1484.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1485 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1484);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1485 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1485)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1483 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1484 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1483.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1483);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1483.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1487 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1487.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1483);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1487.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1485);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1486 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1487);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1486);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForRetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1489 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1489.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1490 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1489);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1490 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1490)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1488 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1489 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1488.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1488);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1488.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1492 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1492.setContextRef(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1488);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1492.setValue(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1490);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberElement1491 = instancObjectFactory.createRemarkForRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1492);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberElement1491);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1494 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1494.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1495 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1494);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1495 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1495)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1493 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1494 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1493.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1493);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1493.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1497 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1497.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1493);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1497.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1495);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1496 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1497);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1496);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1499 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1499.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1500 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1499);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1500 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1500)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1498 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1499 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1498.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1498);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1498.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1502 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1502.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1498);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1502.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1500);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1501 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1502);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1501);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1504 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1504.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1505 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1504);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1505 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1505)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1503 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1504 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1503.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1503);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1503.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1507 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1507.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1503);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1507.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1505);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1506 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1507);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1506);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1508 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1508 == null){
                                    INR1508 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1508.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1508.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1508);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1510 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1510.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1511 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1510);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1511 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1511)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1509 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1510 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1509.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1509);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1509.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1513 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1513.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1509);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1513.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1511);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1512 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1513);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1512);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1515 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1515.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1516 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1515);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1516 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1516)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1514 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1515 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1514.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1514);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1514.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1518 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1518.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1514);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1518.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1516);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1517 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1518);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1517);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1520 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1520.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1521 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1520);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1521 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1521)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1519 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1520 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1519.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1519);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1519.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1523 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1523.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1519);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1523.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1521);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1522 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1523);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1522);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1524 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1524 == null){
                                    INR1524 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1524.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1524.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1524);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1526 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1526.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1527 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1526);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1527 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1527)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1525 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1526 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1525.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1525);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1525.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1529 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1529.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1525);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1529.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1527);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1528 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1529);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1528);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1531 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1531.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1532 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1531);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1532 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1532)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1530 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1531 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1530.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1530);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1530.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1534 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1534.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1530);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1534.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1532);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1533 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1534);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1533);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1536 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1536.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1537 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1536);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1537 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1537)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1535 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1536 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1535.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1535);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1535.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1539 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1539.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1535);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1539.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1537);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1538 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1539);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1538);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1540 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1540 == null){
                                    INR1540 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1540.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1540.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1540);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1542 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1542.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1543 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1542);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1543 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1543)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1541 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1542 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1541.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1541);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1541.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1545 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1545.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1541);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1545.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1543);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1544 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1545);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1544);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1546 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1546 == null){
                                    INR1546 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1546.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1546.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1546);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1550 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1550);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1553 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1553.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1554 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1553);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1554 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1554)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1552 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1553 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1552.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1552);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1552.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1556 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1556.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1552);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1556.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1554);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1555 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1556);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1555);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1557 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1557 == null){
                                    INR1557 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1557.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1557.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1557);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1559 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1559.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1560 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1559);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1560 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1560)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1558 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1559 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1558.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1558);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1558.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1562 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1562.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1558);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1562.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1560);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1561 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1562);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1561);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1564 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1564.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1565 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1564);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1565 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1565)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1563 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1564 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1563.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1563);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1563.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1567 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1567.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1563);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1567.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1565);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1566 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1567);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1566);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1569 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1569.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1570 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1569);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1570 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1570)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1568 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1569 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1568.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1568);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1568.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1572 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1572.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1568);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1572.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1570);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1571 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1572);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1571);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1573 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1573 == null){
                                    INR1573 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1573.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1573.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1573);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1575 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1575.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1576 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1575);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1576 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1576)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1574 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1575 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1574.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1574);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1574.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1578 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1578.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1574);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1578.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1576);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1577 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1578);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1577);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1580 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1580.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1581 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1580);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1581 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1581)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1579 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1580 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1579.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1579);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1579.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1583 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1583.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1579);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1583.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1581);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1582 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1583);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1582);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1585 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1585.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1586 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1585);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1586 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1586)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1584 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1585 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1584.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1584);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1584.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1588 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1588.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1584);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1588.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1586);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1587 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1588);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1587);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1589 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1589 == null){
                                    INR1589 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1589.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1589.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1589);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1591 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1591.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1592 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1591);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1592 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1592)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1590 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1591 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1590.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1590);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1590.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1594 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1594.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1590);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1594.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1592);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1593 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1594);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1593);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1595 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1595 == null){
                                    INR1595 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1595.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1595.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1595);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1597 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1597.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1598 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1597);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1598 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1598)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1596 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1597 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1596.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1596);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1596.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1600 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1600.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1596);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1600.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1598);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1599 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1600);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1599);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1602 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1602.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1603 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1602);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1603 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1603)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1601 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1602 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1601.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1601);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1601.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1605 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1605.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1601);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1605.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1603);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1604 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1605);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1604);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout2 if any typeMembers then List or Single
                //DBS01FS_Layout2 dBS01FS_Layout2 = mainReportData.getDBS01FS_Layout2();
                
                    private String dBS01FS_Layout2Method(DBS01FS_Layout2 dBS01FS_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    DBS01FS_Layout2 field = dBS01FS_Layout2;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR1606 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1606 == null){
                                    INR1606 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1606.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1606.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1606);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - TotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1608 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1608.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1608);
                            
                                if(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609 != null && !"".equals(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1607 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1608 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1607.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1607);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1607.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611 = new StringItemType();
                                    explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611.setContextRef(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1607);
                                    
                                    
                                        explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611.setValue(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1610 = instancObjectFactory.createTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611);
                                    bodyElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1610);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1613 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1613.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1613);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1612 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1613 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1612.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1612);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1612.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1612);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1615 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1615);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForTotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1618 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1618.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1619 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1618);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1619 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1619)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1617 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1618 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1617.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1617);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1617.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1621 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1621.setContextRef(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1617);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1621.setValue(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1619);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1620 = instancObjectFactory.createRemarkForTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1621);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1620);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1622 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1622 == null){
                                    INR1622 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1622.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1622.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1622);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1624 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1624.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1624);
                            
                                if(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625 != null && !"".equals(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1623 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1624 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1623.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1623);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1623.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627.setContextRef(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1623);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627.setValue(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1626 = instancObjectFactory.createNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1626);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1629 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1629.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1629);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1628 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1629 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1628.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1628);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1628.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1628);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1631 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1631);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1634 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1634.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1635 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1634);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1635 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1635)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1633 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1634 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1633.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1633);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1633.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1637 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1637.setContextRef(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1633);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1637.setValue(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1635);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1636 = instancObjectFactory.createRemarkForNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1637);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1636);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1638 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1638 == null){
                                    INR1638 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1638.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1638.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1638);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1640 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1640.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1641 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1640);
                            
                                if(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1641 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1641)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1639 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1640 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1639.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1639);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1639.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1643 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1643.setContextRef(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1639);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1643.setValue(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1641);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1642 = instancObjectFactory.createFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1643);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1642);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1645 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1645.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1646 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1645);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1646 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1646)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1644 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1645 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1644.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1644);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1644.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1648 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1648.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1644);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1648.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1646);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1647 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1648);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1647);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1650 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1650.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1651 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1650);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1651 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1651)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1649 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1650 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1649.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1649);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1649.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1653 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1653.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1649);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1653.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1651);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1652 = instancObjectFactory.createRemarkForFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1653);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1652);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1654 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1654 == null){
                                    INR1654 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1654.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1654.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1654);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1656 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1656.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1657 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1656);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1657 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1657)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1655 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1656 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1655.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1655);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1655.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1659 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1659.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1655);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1659.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1657);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1658 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1659);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1658);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1660 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1660 == null){
                                    INR1660 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1660.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1660.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1660);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1662 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1662.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1662);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1661 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1662 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1661.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1661);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1661.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1661);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1664 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1664);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1667 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1667.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1668 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1667);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1668 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1668)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1666 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1667 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1666.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1666);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1666.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1670 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1670.setContextRef(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1666);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1670.setValue(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1668);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1669 = instancObjectFactory.createRemarkForCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1670);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1669);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1671 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1671 == null){
                                    INR1671 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1671.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1671.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1671);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1673 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1673.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1673);
                            
                                if(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674 != null && !"".equals(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1672 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1673 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1672.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1672);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1672.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676.setContextRef(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1672);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676.setValue(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1675 = instancObjectFactory.createLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1675);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1678 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1678.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1678);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1677 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1678 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1677.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1677);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1677.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1677);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1680 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1680);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1683 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1683.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1684 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1683);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1684 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1684)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1682 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1683 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1682.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1682);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1682.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1686 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1686.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1682);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1686.setValue(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1684);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1685 = instancObjectFactory.createRemarkForLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1686);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1685);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1687 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1687 == null){
                                    INR1687 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1687.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1687.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1687);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1689 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1689.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1689);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1688 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1689 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1688.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1688);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1688.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1688);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1691 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1691);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1693 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1693 == null){
                                    INR1693 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1693.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1693.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1693);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1695 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1695.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1696 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1695);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1696 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1696)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1694 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1695 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1694.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1694);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1694.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1698 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1698.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1694);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1698.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1696);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1697 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1698);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1697);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1700 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1700.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1700);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1699 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1700 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1699.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1699);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1699.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1699);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1702 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1702);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1704 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1704 == null){
                                    INR1704 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1704.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1704.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1704);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1706 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1706.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1707 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1706);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1707 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1707)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1705 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1706 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1705.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1705);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1705.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1709 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1709.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1705);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1709.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1707);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1708 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1709);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1708);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1711 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1711.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1712 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1711);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1712 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1712)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1710 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1711 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1710.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1710);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1710.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1714 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1714.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1710);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1714.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1712);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1713 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1714);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1713);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1716 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1716.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1716);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1715 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1716 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1715.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1715);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1715.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1715);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1718 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1718);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1720 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1720 == null){
                                    INR1720 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1720.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1720.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1720);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1722 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1722.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1723 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1722);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1723 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1723)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1721 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1722 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1721.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1721);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1721.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1725 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1725.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1721);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1725.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1723);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1724 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1725);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1727 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1727.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1728 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1727);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1728 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1728)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1726 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1727 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1726.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1726);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1726.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1730 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1730.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1726);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1730.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1728);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1729 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1730);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1729);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1732 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1732.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1732);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1731 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1732 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1731.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1731);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1731.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1731);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1734 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1734);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1736 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1736 == null){
                                    INR1736 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1736.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1736.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1736);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1738 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1738.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1739 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1738);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1739 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1739)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1737 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1738 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1737.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1737);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1737.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1741 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1741.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1737);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1741.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1739);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1740 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1741);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1740);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1743 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1743.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1744 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1743);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1744 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1744)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1742 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1743 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1742.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1742);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1742.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1746 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1746.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1742);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1746.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1744);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1745 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1746);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1745);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1748 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1748.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1748);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1747 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1748 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1747.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1747);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1747.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1747);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1750 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1750);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1752 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1752 == null){
                                    INR1752 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1752.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1752.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1752);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1754 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1754.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1755 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1754);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1755 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1755)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1753 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1754 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1753.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1753);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1753.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1757 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1757.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1753);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1757.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1755);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1756 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1757);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1756);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1759 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1759.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1760 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1759);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1760 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1760)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1758 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1759 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1758.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1758);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1758.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1762 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1762.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1758);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1762.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1760);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1761 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1762);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1761);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1764 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1764.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1764);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1763 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1764 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1763.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1763);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1763.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1763);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1766 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1766);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1768 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1768 == null){
                                    INR1768 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1768.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1768.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1768);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1770 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1770.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1771 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1770);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1771 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1771)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1769 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1770 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1769.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1769);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1769.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1773 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1773.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1769);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1773.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1771);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1772 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1773);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1772);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1775 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1775.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1776 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1775);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1776 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1776)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1774 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1775 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1774.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1774);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1774.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1778 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1778.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1774);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1778.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1776);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1777 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1778);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1777);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1780 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1780.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1780);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1779 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1780 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1779.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1779);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1779.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1779);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1782 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1782);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1784 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1784 == null){
                                    INR1784 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1784.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1784.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1784);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1786 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1786.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1787 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1786);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1787 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1787)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1785 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1786 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1785.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1785);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1785.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1789 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1789.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1785);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1789.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1787);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1788 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1789);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1788);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1791 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1791.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1792 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1791);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1792 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1792)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1790 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1791 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1790.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1790);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1790.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1794 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1794.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1790);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1794.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1792);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1793 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1794);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1793);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1796 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1796.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1796);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1795 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1796 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1795.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1795);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1795.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1795);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1798 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1798);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1800 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1800 == null){
                                    INR1800 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1800.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1800.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1800);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1802 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1802.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1803 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1802);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1803 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1803)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1801 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1802 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1801.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1801);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1801.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1805 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1805.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1801);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1805.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1803);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1804 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1805);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1804);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1807 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1807.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1808 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1807);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1808 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1808)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1806 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1807 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1806.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1806);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1806.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1810 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1810.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1806);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1810.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1808);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1809 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1810);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1809);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1812 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1812.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1812);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1811 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1812 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1811.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1811);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1811.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1811);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1814 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1814);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1816 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1816 == null){
                                    INR1816 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1816.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1816.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1816);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1818 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1818.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1819 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1818);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1819 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1819)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1817 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1818 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1817.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1817);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1817.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1821 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1821.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1817);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1821.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1819);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1820 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1821);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1820);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1823 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1823.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1824 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1823);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1824 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1824)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1822 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1823 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1822.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1822);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1822.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1826 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1826.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1822);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1826.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1824);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1825 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1826);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1825);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1828 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1828.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1828);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1827 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1828 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1827.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1827);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1827.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1827);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1830 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1830);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1832 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1832 == null){
                                    INR1832 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1832.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1832.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1832);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1834 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1834.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1834);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1833 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1834 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1833.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1833);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1833.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1833);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1836 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1836);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1839 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1839.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1839);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1838 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1839 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1838.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1838);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1838.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1838);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1841 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1841);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1844 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1844.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1845 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1844);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1845 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1845)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1843 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1844 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1843.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1843);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1843.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1847 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1847.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1843);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1847.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1845);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1846 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1847);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1846);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1848 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1848 == null){
                                    INR1848 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1848.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1848.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1848);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1850 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1850.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1851 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1850);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1851 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1851)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1849 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1850 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1849.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1849);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1849.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1853 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1853.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1849);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1853.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1851);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1852 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1853);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1852);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1855 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1855.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1856 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1855);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1856 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1856)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1854 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1855 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1854.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1854);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1854.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1858 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1858.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1854);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1858.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1856);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1857 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1858);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1857);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1860 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1860.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1861 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1860);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1861 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1861)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1859 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1860 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1859.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1859);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1859.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1863 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1863.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1859);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1863.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1861);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1862 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1863);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1862);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1864 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1864 == null){
                                    INR1864 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1864.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1864.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1864);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1866 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1866.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1867 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1866);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1867 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1867)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1865 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1866 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1865.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1865);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1865.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1869 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1869.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1865);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1869.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1867);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1868 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1869);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1868);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1871 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1871.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1872 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1871);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1872 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1872)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1870 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1871 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1870.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1870);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1870.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1874 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1874.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1870);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1874.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1872);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1873 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1874);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1873);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1876 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1876.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1877 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1876);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1877 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1877)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1875 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1876 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1875.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1875);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1875.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1879 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1879.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1875);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1879.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1877);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1878 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1879);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1878);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1880 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1880 == null){
                                    INR1880 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1880.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1880.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1880);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1882 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1882.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1883 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1882);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1883 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1883)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1881 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1882 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1881.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1881);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1881.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1885 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1885.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1881);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1885.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1883);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1884 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1885);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1884);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1886 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1886 == null){
                                    INR1886 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1886.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1886.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1886);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1888 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1888.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1889 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1888);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1889 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1889)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1887 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1888 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1887.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1887);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1887.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1891 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1891.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1887);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1891.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1889);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1890 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1891);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1890);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1893 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1893.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1894 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1893);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1894 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1894)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1892 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1893 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1892.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1892);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1892.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1896 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1896.setContextRef(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1892);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1896.setValue(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1894);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1895 = instancObjectFactory.createRemarkForSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1896);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1895);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1897 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1897 == null){
                                    INR1897 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1897.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1897.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1897);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1899 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1899.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1900 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1899);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1900 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1900)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1898 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1899 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1898.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1898);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1898.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1902 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1902.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1898);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1902.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1900);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1901 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1902);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1901);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1903 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1903 == null){
                                    INR1903 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1903.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1903.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1903);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1905 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1905.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1906 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1905);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1906 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1906)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1904 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1905 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1904.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1904);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1904.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1908 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1908.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1904);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1908.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1906);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1907 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1908);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1907);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1910 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1910.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1911 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1910);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1911 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1911)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1909 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1910 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1909.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1909);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1909.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1913 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1913.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1909);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1913.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1911);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1912 = instancObjectFactory.createRemarkForDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1913);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1912);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1914 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1914 == null){
                                    INR1914 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1914.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1914.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1914);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1916 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1916.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1917 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1916);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1917 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1917)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1915 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1916 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1915.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1915);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1915.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1919 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1919.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1915);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1919.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1917);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1918 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1919);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1918);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1920 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1920 == null){
                                    INR1920 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1920.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1920.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1920);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1922 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1922.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1923 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1922);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1923 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1923)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1921 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1922 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1921.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1921);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1921.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1925 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1925.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1921);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1925.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1923);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1924 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1925);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1924);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1927 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1927.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1928 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1927);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1928 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1928)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1926 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1927 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1926.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1926);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1926.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1930 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1930.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1926);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1930.setValue(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1928);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1929 = instancObjectFactory.createRemarkForSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1930);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1929);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1931 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1931 == null){
                                    INR1931 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1931.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1931.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1931);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1933 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1933.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1934 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1933);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1934 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1934)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1932 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1933 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1932.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1932);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1932.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1936 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1936.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1932);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1936.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1934);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1935 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1936);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1935);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1937 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1937 == null){
                                    INR1937 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1937.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1937.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1937);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1939 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1939.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1939);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1938 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1939 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1938.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1938);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1938.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1938);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1941 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1941);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1944 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1944.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1945 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1944);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1945 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1945)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1943 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1944 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1943.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1943);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1943.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1947 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1947.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1943);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1947.setValue(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1945);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1946 = instancObjectFactory.createRemarkForOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1947);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1946);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1948 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1948 == null){
                                    INR1948 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1948.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1948.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1948);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1950 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1950.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1950);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1949 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1950 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1949.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1949);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1949.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1949);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1952 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1952);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1954 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1954 == null){
                                    INR1954 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1954.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1954.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1954);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1956 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1956.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1957 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1956);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1957 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1957)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1955 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1956 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1955.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1955);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1955.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1959 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1959.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1955);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1959.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1957);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1958 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1959);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1958);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1961 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1961.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1961);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1960 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1961 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1960.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1960);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1960.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964.setContextRef(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1960);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964.setValue(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1963 = instancObjectFactory.createRemarkForLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1965 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1965 == null){
                                    INR1965 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1965.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1965.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1965);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1967 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1967.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1968 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1967);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1968 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1968)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1966 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1967 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1966.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1966);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1966.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1970 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1970.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1966);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1970.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1968);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1969 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1970);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1969);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1972 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1972.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1973 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1972);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1973 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1973)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1971 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1972 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1971.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1971);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1971.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1975 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1975.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1971);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1975.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1973);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1974 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1975);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1974);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1977 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1977.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1977);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1976 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1977 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1976.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1976);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1976.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1976);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1979 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1979);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1981 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1981 == null){
                                    INR1981 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1981.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1981.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1981);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1983 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1983.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1984 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1983);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1984 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1984)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1982 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1983 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1982.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1982);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1982.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1986 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1986.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1982);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1986.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1984);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1985 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1986);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1985);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1988 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1988.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1989 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1988);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1989 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1989)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1987 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1988 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1987.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1987);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1987.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1991 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1991.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1987);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1991.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1989);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1990 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1991);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1990);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1993 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1993.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1993);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1992 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1993 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1992.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1992);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1992.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1992);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1995 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1995);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1997 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1997 == null){
                                    INR1997 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1997.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1997.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1997);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1999 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1999.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2000 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1999);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2000 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2000)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1998 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1999 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1998.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1998);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1998.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2002 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2002.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1998);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2002.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2000);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2001 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2002);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2001);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2004 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2004.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2005 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2004);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2005 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2005)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2003 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2004 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2003.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2003);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2003.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2007 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2007.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2003);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2007.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2005);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2006 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2007);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2006);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2009 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2009.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2009);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2008 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2009 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2008.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2008);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2008);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2011 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2013 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2013 == null){
                                    INR2013 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2013.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2013.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2013);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2015 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2015.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2016 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2015);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2016 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2016)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2014 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2015 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2014.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2014);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2014.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2018 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2018.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2014);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2018.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2016);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2017 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2018);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2017);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2020 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2020.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2021 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2020);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2021 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2021)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2019 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2020 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2019.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2019);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2019.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2023 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2023.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2019);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2023.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2021);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2022 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2023);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2022);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2025 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2025.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2025);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2024 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2025 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2024.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2024);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2024.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2024);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2027 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2027);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2029 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2029 == null){
                                    INR2029 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2029.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2029.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2029);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2031 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2031.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2032 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2031);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2032 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2032)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2030 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2031 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2030.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2030);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2030.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2034 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2034.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2030);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2034.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2032);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2033 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2034);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2033);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2036 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2036.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2037 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2036);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2037 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2037)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2035 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2036 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2035.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2035);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2035.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2039 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2039.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2035);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2039.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2037);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2038 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2039);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2038);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2041 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2041.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2041);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2040 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2041 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2040.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2040);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2040.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2040);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2043 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2043);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2045 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2045 == null){
                                    INR2045 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2045.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2045.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2045);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2047 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2047.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2048 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2047);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2048 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2048)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2046 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2047 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2046.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2046);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2046.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2050 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2050.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2046);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2050.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2048);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2049 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2050);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2049);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2052 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2052.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2053 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2052);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2053 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2053)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2051 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2052 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2051.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2051);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2051.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2055 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2055.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2051);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2055.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2053);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2054 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2055);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2054);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2057 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2057.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2057);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2056 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2057 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2056.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2056);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2056.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2056);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2059 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2059);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2061 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2061 == null){
                                    INR2061 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2061.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2061.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2061);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2063 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2063.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2064 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2063);
                            
                                if(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2064 != null && !"".equals(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2064)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2062 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2063 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2062.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2062);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2062.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2066 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2066.setContextRef(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2062);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2066.setValue(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2064);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2065 = instancObjectFactory.createBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2066);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2065);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2068 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2068.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2069 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2068);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2069 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2069)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2067 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2068 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2067.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2067);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2067.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2071 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2071.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2067);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2071.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2069);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2070 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2071);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2070);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2073 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2073.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2073);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2072 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2073 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2072.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2072);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2072.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076.setContextRef(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2072);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076.setValue(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2075 = instancObjectFactory.createRemarkForBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2075);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2077 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2077 == null){
                                    INR2077 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2077.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2077.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2077);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2079 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2079.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2080 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2079);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2080 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2080)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2078 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2079 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2078.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2078);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2078.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2082 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2082.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2078);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2082.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2080);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2081 = instancObjectFactory.createDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2082);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2081);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2084 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2084.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2085 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2084);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2085 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2085)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2083 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2084 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2083.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2083);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2083.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2087 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2087.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2083);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2087.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2085);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2086 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2087);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2086);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2089 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2089.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2089);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2088 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2089 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2088.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2088);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2088.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2088);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2091 = instancObjectFactory.createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2091);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2093 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2093 == null){
                                    INR2093 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2093.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2093.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2093);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2095 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2095.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2096 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2095);
                            
                                if(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2096 != null && !"".equals(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2096)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2094 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2095 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2094.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2094);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2094.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2098 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2098.setContextRef(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2094);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2098.setValue(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2096);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2097 = instancObjectFactory.createOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2098);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2097);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2100 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2100.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2101 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2100);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2101 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2101)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2099 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2100 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2099.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2099);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2099.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2103 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2103.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2099);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2103.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2101);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2102 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2103);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2102);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2105 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2105.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2106 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2105);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2106 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2106)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2104 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2105 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2104.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2104);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2104.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2108 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2108.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2104);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2108.setValue(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2106);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2107 = instancObjectFactory.createRemarkForOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2108);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2107);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2109 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2109 == null){
                                    INR2109 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2109.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2109.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2109);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2111 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2111.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2112 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2111);
                            
                                if(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2112 != null && !"".equals(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2112)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2110 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2111 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2110.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2110);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2110.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2114 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2114.setContextRef(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2110);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2114.setValue(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2112);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2113 = instancObjectFactory.createCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2114);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2113);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2116 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2116.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2117 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2116);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2117 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2117)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2115 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2116 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2115.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2115);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2115.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2119 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2119.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2115);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2119.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2117);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2118 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2119);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2118);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2121 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2121.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2122 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2121);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2122 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2122)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2120 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2121 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2120.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2120);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2120.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2124 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2124.setContextRef(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2120);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2124.setValue(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2122);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2123 = instancObjectFactory.createRemarkForCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2124);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2123);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2125 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2125 == null){
                                    INR2125 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2125.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2125.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2125);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2127 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2127.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2128 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2127);
                            
                                if(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2128 != null && !"".equals(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2128)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2126 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2127 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2126.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2126);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2126.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2130 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2130.setContextRef(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2126);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2130.setValue(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2128);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2129 = instancObjectFactory.createNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2130);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2129);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2132 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2132.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2133 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2132);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2133 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2133)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2131 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2132 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2131.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2131);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2131.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2135 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2135.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2131);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2135.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2133);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2134 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2135);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2134);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2137 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2137.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2137);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2136 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2137 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2136.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2136);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2136.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140.setContextRef(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2136);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140.setValue(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2139 = instancObjectFactory.createRemarkForNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2139);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2141 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2141 == null){
                                    INR2141 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2141.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2141.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2141);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2143 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2143.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2143);
                            
                                if(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144 != null && !"".equals(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2142 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2143 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2142.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2142);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2142.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146.setContextRef(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2142);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146.setValue(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2145 = instancObjectFactory.createBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2145);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2148 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2148.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2148);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2147 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2148 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2147.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2147);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2147.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2147);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2150 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2150);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2153 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2153.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2154 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2153);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2154 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2154)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2152 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2153 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2152.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2152);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2152.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2156 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2156.setContextRef(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2152);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2156.setValue(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2154);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2155 = instancObjectFactory.createRemarkForBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2156);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2155);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2158 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2158.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2159 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2158);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2159 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2159)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2157 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2158 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2157.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2157);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2157.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2161 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2161.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2157);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2161.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2159);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2160 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2161);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2160);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2163 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2163.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2164 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2163);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2164 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2164)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2162 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2163 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2162.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2162);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2162.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2166 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2166.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2162);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2166.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2164);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2165 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2166);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2165);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2168 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2168.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2169 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2168);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2169 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2169)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2167 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2168 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2167.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2167);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2167.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2171 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2171.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2167);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2171.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2169);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2170 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2171);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2170);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2172 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2172 == null){
                                    INR2172 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2172.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2172.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2172);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2174 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2174.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2175 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2174);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2175 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2175)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2173 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2174 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2173.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2173);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2173.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2177 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2177.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2173);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2177.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2175);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2176 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2177);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2176);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2178 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2178 == null){
                                    INR2178 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2178.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2178.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2178);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2180 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2180.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2181 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2180);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2181 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2181)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2179 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2180 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2179.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2179);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2179.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2183 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2183.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2179);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2183.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2181);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2182 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2183);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2182);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2185 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2185.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2186 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2185);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2186 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2186)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2184 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2185 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2184.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2184);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2184.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2188 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2188.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2184);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2188.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2186);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2187 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2188);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2187);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2189 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2189 == null){
                                    INR2189 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2189.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2189.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2189);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2191 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2191.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2192 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2191);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2192 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2192)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2190 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2191 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2190.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2190);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2190.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2194 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2194.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2190);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2194.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2192);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2193 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2194);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2193);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2195 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2195 == null){
                                    INR2195 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2195.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2195.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2195);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2197 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2197.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2198 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2197);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2198 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2198)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2196 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2197 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2196.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2196);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2196.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2200 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2200.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2196);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2200.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2198);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2199 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2200);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2199);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2202 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2202.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2203 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2202);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2203 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2203)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2201 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2202 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2201.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2201);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2201.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2205 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2205.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2201);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2205.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2203);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2204 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2205);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2204);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2206 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2206 == null){
                                    INR2206 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2206.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2206.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2206);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2208 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2208.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2209 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2208);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2209 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2209)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2207 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2208 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2207.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2207);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2207.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2211 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2211.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2207);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2211.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2209);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2210 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2211);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2210);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2212 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2212 == null){
                                    INR2212 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2212.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2212.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2212);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2214 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2214.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2215 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2214);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2215 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2215)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2213 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2214 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2213.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2213);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2213.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2217 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2217.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2213);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2217.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2215);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2216 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2217);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2216);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2219 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2219.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2220 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2219);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2220 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2220)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2218 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2219 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2218.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2218);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2218.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2222 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2222.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2218);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2222.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2220);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2221 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2222);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2221);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2223 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2223 == null){
                                    INR2223 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2223.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2223.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2223);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2225 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2225.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2226 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2225);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2226 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2226)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2224 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2225 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2224.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2224);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2224.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2228 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2228.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2224);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2228.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2226);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2227 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2228);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2227);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2229 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2229 == null){
                                    INR2229 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2229.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2229.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2229);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2231 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2231.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2232 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2231);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2232 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2232)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2230 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2231 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2230.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2230);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2230.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2234 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2234.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2230);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2234.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2232);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2233 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2234);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2233);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2236 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2236.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2237 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2236);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2237 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2237)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2235 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2236 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2235.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2235);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2235.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2239 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2239.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2235);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2239.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2237);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2238 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2239);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2238);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2240 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2240 == null){
                                    INR2240 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2240.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2240.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2240);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2242 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2242.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2243 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2242);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2243 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2243)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2241 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2242 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2241.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2241);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2241.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2245 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2245.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2241);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2245.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2243);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2244 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2245);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2244);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2246 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2246 == null){
                                    INR2246 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2246.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2246.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2246);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2248 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2248.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2249 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2248);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2249 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2249)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2247 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2248 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2247.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2247);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2247.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2251 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2251.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2247);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2251.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2249);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2250 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2251);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2250);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2253 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2253.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2254 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2253);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2254 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2254)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2252 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2253 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2252.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2252);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2252.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2256 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2256.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2252);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2256.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2254);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2255 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2256);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2255);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2257 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2257 == null){
                                    INR2257 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2257.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2257.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2257);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2259 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2259.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2260 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2259);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2260 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2260)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2258 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2259 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2258.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2258);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2258.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2262 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2262.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2258);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2262.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2260);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2261 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2262);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2261);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2263 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2263 == null){
                                    INR2263 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2263.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2263.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2263);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2265 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2265.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2266 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2265);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2266 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2266)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2264 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2265 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2264.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2264);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2264.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2268 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2268.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2264);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2268.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2266);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2267 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2268);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2267);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2270 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2270.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2271 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2270);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2271 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2271)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2269 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2270 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2269.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2269);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2269.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2273 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2273.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2269);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2273.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2271);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2272 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2273);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2272);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2274 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2274 == null){
                                    INR2274 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2274.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2274.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2274);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2276 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2276.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2277 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2276);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2277 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2277)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2275 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2276 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2275.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2275);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2275.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2279 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2279.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2275);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2279.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2277);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2278 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2279);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2278);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2280 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2280 == null){
                                    INR2280 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2280.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2280.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2280);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2282 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2282.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2283 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2282);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2283 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2283)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2281 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2282 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2281.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2281);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2281.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2285 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2285.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2281);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2285.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2283);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2284 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2285);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2284);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2287 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2287.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2288 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2287);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2288 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2288)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2286 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2287 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2286.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2286);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2286.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2290 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2290.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2286);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2290.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2288);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2289 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2290);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2289);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2291 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2291 == null){
                                    INR2291 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2291.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2291.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2291);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2293 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2293.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2294 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2293);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2294 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2294)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2292 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2293 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2292.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2292);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2292.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2296 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2296.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2292);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2296.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2294);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2295 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2296);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2295);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2297 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2297 == null){
                                    INR2297 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2297.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2297.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2297);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2299 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2299.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2300 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2299);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2300 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2300)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2298 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2299 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2298.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2298);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2298.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2302 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2302.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2298);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2302.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2300);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2301 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2302);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2301);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2304 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2304.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2305 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2304);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2305 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2305)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2303 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2304 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2303.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2303);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2303.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2307 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2307.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2303);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2307.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2305);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2306 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2307);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2306);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2308 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2308 == null){
                                    INR2308 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2308.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2308.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2308);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2310 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2310.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2311 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2310);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2311 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2311)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2309 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2310 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2309.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2309);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2309.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2313 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2313.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2309);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2313.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2311);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2312 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2313);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2312);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2314 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2314 == null){
                                    INR2314 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2314.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2314.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2314);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2316 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2316.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2317 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2316);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2317 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2317)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2315 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2316 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2315.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2315);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2315.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2319 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2319.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2315);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2319.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2317);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2318 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2319);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2318);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2321 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2321.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2322 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2321);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2322 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2322)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2320 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2321 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2320.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2320);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2320.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2324 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2324.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2320);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2324.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2322);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2323 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2324);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2323);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2325 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2325 == null){
                                    INR2325 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2325.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2325.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2325);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2327 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2327.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2328 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2327);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2328 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2328)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2326 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2327 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2326.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2326);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2326.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2330 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2330.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2326);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2330.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2328);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2329 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2330);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2329);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2331 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2331 == null){
                                    INR2331 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2331.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2331.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2331);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2333 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2333.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2334 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2333);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2334 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2334)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2332 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2333 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2332.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2332);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2332.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2336 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2336.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2332);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2336.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2334);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2335 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2336);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2335);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2338 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2338.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2339 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2338);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2339 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2339)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2337 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2338 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2337.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2337);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2337.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2341 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2341.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2337);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2341.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2339);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2340 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2341);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2342 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2342 == null){
                                    INR2342 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2342.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2342.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2342);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - TotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2344 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2344.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2344);
                            
                                if(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345 != null && !"".equals(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2343 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2344 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2343.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2343);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2343.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347 = new StringItemType();
                                    explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347.setContextRef(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2343);
                                    
                                    
                                        explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347.setValue(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2346 = instancObjectFactory.createTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347);
                                    bodyElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2346);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2349 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2349.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2350 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2349);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2350 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2350)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2348 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2349 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2348.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2348);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2348.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2352 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2352.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2348);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2352.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2350);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2351 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2352);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2351);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForTotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2354 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2354.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2355 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2354);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2355 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2355)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2353 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2354 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2353.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2353);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2353.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2357 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2357.setContextRef(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2353);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2357.setValue(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2355);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2356 = instancObjectFactory.createRemarkForTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2357);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2356);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2358 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2358 == null){
                                    INR2358 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2358.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2358.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2358);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2360 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2360.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2361 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2360);
                            
                                if(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2361 != null && !"".equals(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2361)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2359 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2360 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2359.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2359);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2359.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2363 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2363.setContextRef(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2359);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2363.setValue(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2361);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2362 = instancObjectFactory.createNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2363);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2362);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2365 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2365.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2366 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2365);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2366 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2366)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2364 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2365 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2364.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2364);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2364.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2368 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2368.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2364);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2368.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2366);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2367 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2368);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2367);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2370 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2370.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2371 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2370);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2371 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2371)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2369 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2370 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2369.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2369);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2369.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2373 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2373.setContextRef(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2369);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2373.setValue(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2371);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2372 = instancObjectFactory.createRemarkForNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2373);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2372);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2374 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2374 == null){
                                    INR2374 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2374.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2374.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2374);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2376 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2376.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2377 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2376);
                            
                                if(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2377 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2377)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2375 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2376 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2375.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2375);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2375.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2379 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2379.setContextRef(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2375);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2379.setValue(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2377);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2378 = instancObjectFactory.createFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2379);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2378);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2381 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2381.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2382 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2381);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2382 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2382)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2380 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2381 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2380.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2380);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2380.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2384 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2384.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2380);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2384.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2382);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2383 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2384);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2383);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2386 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2386.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2387 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2386);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2387 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2387)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2385 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2386 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2385.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2385);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2385.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2389 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2389.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2385);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2389.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2387);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2388 = instancObjectFactory.createRemarkForFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2389);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2388);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2390 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2390 == null){
                                    INR2390 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2390.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2390.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2390);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2392 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2392.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2393 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2392);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2393 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2393)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2391 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2392 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2391.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2391);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2391.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2395 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2395.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2391);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2395.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2393);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2394 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2395);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2394);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2396 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2396 == null){
                                    INR2396 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2396.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2396.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2396);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2398 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2398.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2398);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2397 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2398 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2397.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2397);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2397.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2397);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2400 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2400);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2403 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2403.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2404 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2403);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2404 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2404)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2402 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2403 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2402.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2402);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2402.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2406 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2406.setContextRef(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2402);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2406.setValue(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2404);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2405 = instancObjectFactory.createRemarkForCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2406);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2405);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2407 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2407 == null){
                                    INR2407 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2407.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2407.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2407);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2409 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2409.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2410 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2409);
                            
                                if(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2410 != null && !"".equals(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2410)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2408 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2409 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2408.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2408);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2408.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2412 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2412.setContextRef(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2408);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2412.setValue(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2410);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2411 = instancObjectFactory.createLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2412);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2411);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2414 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2414.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2415 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2414);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2415 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2415)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2413 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2414 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2413.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2413);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2413.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2417 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2417.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2413);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2417.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2415);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2416 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2417);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2416);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2419 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2419.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2420 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2419);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2420 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2420)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2418 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2419 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2418.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2418);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2418.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2422 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2422.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2418);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2422.setValue(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2420);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2421 = instancObjectFactory.createRemarkForLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2422);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2421);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2423 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2423 == null){
                                    INR2423 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2423.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2423.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2423);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2425 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2425.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2426 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2425);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2426 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2426)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2424 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2425 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2424.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2424);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2424.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2428 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2428.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2424);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2428.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2426);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2427 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2428);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2427);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2429 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2429 == null){
                                    INR2429 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2429.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2429.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2429);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2431 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2431.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2432 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2431);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2432 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2432)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2430 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2431 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2430.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2430);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2430.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2434 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2434.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2430);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2434.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2432);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2433 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2434);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2433);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2436 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2436.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2436);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2435 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2436 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2435.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2435);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2435.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2435);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2438 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2438);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2440 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2440 == null){
                                    INR2440 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2440.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2440.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2440);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2442 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2442.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2443 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2442);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2443 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2443)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2441 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2442 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2441.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2441);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2441.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2445 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2445.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2441);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2445.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2443);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2444 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2445);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2444);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2447 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2447.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2448 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2447);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2448 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2448)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2446 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2447 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2446.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2446);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2446.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2450 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2450.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2446);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2450.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2448);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2449 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2450);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2449);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2452 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2452.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2452);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2451 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2452 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2451.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2451);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2451.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2451);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2454 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2454);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2456 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2456 == null){
                                    INR2456 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2456.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2456.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2456);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2458 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2458.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2459 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2458);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2459 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2459)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2457 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2458 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2457.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2457);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2457.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2461 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2461.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2457);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2461.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2459);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2460 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2461);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2460);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2463 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2463.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2464 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2463);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2464 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2464)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2462 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2463 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2462.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2462);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2462.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2466 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2466.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2462);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2466.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2464);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2465 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2466);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2465);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2468 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2468.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2468);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2467 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2468 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2467.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2467);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2467.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2467);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2470 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2470);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2472 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2472 == null){
                                    INR2472 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2472.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2472.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2472);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2474 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2474.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2475 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2474);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2475 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2475)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2473 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2474 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2473.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2473);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2473.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2477 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2477.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2473);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2477.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2475);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2476 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2477);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2476);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2479 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2479.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2480 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2479);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2480 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2480)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2478 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2479 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2478.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2478);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2478.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2482 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2482.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2478);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2482.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2480);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2481 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2482);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2481);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2484 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2484.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2484);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2483 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2484 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2483.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2483);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2483.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2483);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2486 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2486);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2488 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2488 == null){
                                    INR2488 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2488.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2488.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2488);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2490 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2490.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2491 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2490);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2491 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2491)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2489 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2490 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2489.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2489);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2489.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2493 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2493.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2489);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2493.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2491);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2492 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2493);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2492);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2495 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2495.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2496 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2495);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2496 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2496)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2494 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2495 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2494.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2494);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2494.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2498 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2498.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2494);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2498.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2496);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2497 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2498);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2497);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2500 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2500.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2500);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2499 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2500 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2499.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2499);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2499.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2499);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2502 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2502);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2504 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2504 == null){
                                    INR2504 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2504.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2504.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2504);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2506 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2506.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2507 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2506);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2507 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2507)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2505 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2506 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2505.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2505);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2505.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2509 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2509.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2505);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2509.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2507);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2508 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2509);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2508);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2511 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2511.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2512 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2511);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2512 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2512)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2510 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2511 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2510.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2510);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2510.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2514 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2514.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2510);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2514.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2512);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2513 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2514);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2513);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2516 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2516.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2516);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2515 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2516 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2515.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2515);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2515.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2515);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2518 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2518);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2520 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2520 == null){
                                    INR2520 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2520.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2520.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2520);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2522 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2522.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2523 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2522);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2523 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2523)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2521 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2522 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2521.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2521);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2521.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2525 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2525.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2521);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2525.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2523);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2524 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2525);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2524);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2527 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2527.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2528 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2527);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2528 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2528)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2526 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2527 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2526.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2526);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2526.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2530 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2530.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2526);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2530.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2528);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2529 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2530);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2529);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2532 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2532.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2532);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2531 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2532 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2531.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2531);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2531.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2531);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2534 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2534);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2536 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2536 == null){
                                    INR2536 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2536.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2536.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2536);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2538 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2538.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2539 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2538);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2539 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2539)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2537 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2538 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2537.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2537);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2537.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2541 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2541.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2537);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2541.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2539);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2540 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2541);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2540);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2543 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2543.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2544 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2543);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2544 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2544)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2542 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2543 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2542.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2542);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2542.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2546 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2546.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2542);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2546.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2544);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2545 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2546);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2545);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2548 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2548.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2548);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2547 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2548 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2547.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2547);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2547.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2547);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2550 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2550);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2552 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2552 == null){
                                    INR2552 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2552.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2552.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2552);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2554 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2554.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2555 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2554);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2555 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2555)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2553 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2554 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2553.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2553);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2553.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2557 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2557.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2553);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2557.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2555);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2556 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2557);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2556);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2559 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2559.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2560 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2559);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2560 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2560)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2558 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2559 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2558.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2558);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2558.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2562 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2562.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2558);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2562.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2560);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2561 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2562);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2561);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2564 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2564.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2564);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2563 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2564 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2563.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2563);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2563.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2563);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2566 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2566);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2568 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2568 == null){
                                    INR2568 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2568.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2568.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2568);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2570 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2570.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2570);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2569 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2570 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2569.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2569);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2569.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2569);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2572 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2572);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2575 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2575.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2576 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2575);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2576 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2576)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2574 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2575 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2574.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2574);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2574.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2578 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2578.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2574);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2578.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2576);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2577 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2578);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2577);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2580 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2580.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2581 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2580);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2581 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2581)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2579 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2580 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2579.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2579);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2579.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2583 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2583.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2579);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2583.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2581);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2582 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2583);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2582);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2584 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2584 == null){
                                    INR2584 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2584.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2584.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2584);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2586 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2586.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2587 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2586);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2587 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2587)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2585 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2586 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2585.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2585);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2585.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2589 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2589.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2585);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2589.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2587);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2588 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2589);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2588);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2591 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2591.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2592 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2591);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2592 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2592)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2590 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2591 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2590.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2590);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2590.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2594 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2594.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2590);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2594.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2592);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2593 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2594);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2593);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2596 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2596.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2597 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2596);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2597 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2597)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2595 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2596 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2595.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2595);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2595.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2599 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2599.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2595);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2599.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2597);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2598 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2599);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2598);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2600 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2600 == null){
                                    INR2600 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2600.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2600.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2600);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2602 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2602.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2603 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2602);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2603 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2603)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2601 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2602 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2601.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2601);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2601.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2605 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2605.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2601);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2605.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2603);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2604 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2605);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2604);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2607 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2607.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2608 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2607);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2608 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2608)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2606 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2607 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2606.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2606);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2606.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2610 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2610.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2606);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2610.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2608);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2609 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2610);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2609);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2612 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2612.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2613 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2612);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2613 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2613)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2611 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2612 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2611.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2611);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2611.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2615 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2615.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2611);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2615.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2613);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2614 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2615);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2614);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2616 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2616 == null){
                                    INR2616 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2616.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2616.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2616);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2618 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2618.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2619 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2618);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2619 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2619)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2617 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2618 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2617.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2617);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2617.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2621 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2621.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2617);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2621.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2619);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2620 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2621);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2620);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2622 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2622 == null){
                                    INR2622 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2622.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2622.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2622);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2624 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2624.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2625 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2624);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2625 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2625)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2623 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2624 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2623.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2623);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2623.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2627 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2627.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2623);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2627.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2625);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2626 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2627);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2626);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2629 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2629.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2630 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2629);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2630 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2630)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2628 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2629 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2628.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2628);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2628.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2632 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2632.setContextRef(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2628);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2632.setValue(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2630);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2631 = instancObjectFactory.createRemarkForSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2632);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2631);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2633 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2633 == null){
                                    INR2633 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2633.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2633.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2633);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2635 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2635.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2636 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2635);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2636 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2636)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2634 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2635 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2634.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2634);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2634.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2638 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2638.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2634);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2638.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2636);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2637 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2638);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2637);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2639 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2639 == null){
                                    INR2639 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2639.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2639.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2639);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2641 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2641.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2642 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2641);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2642 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2642)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2640 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2641 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2640.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2640);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2640.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2644 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2644.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2640);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2644.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2642);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2643 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2644);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2643);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2646 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2646.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2647 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2646);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2647 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2647)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2645 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2646 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2645.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2645);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2645.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2649 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2649.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2645);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2649.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2647);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2648 = instancObjectFactory.createRemarkForDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2649);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2648);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2650 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2650 == null){
                                    INR2650 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2650.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2650.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2650);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2652 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2652.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2653 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2652);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2653 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2653)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2651 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2652 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2651.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2651);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2651.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2655 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2655.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2651);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2655.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2653);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2654 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2655);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2654);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2656 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2656 == null){
                                    INR2656 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2656.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2656.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2656);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2658 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2658.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2659 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2658);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2659 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2659)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2657 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2658 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2657.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2657);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2657.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2661 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2661.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2657);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2661.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2659);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2660 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2661);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2660);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2663 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2663.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2664 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2663);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2664 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2664)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2662 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2663 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2662.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2662);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2662.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2666 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2666.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2662);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2666.setValue(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2664);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2665 = instancObjectFactory.createRemarkForSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2666);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2665);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2667 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2667 == null){
                                    INR2667 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2667.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2667.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2667);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2669 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2669.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2670 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2669);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2670 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2670)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2668 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2669 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2668.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2668);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2668.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2672 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2672.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2668);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2672.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2670);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2671 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2672);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2671);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2673 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2673 == null){
                                    INR2673 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2673.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2673.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2673);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2675 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2675.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2675);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2674 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2675 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2674.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2674);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2674.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2674);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2677 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2677);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2680 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2680.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2681 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2680);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2681 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2681)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2679 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2680 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2679.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2679);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2679.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2683 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2683.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2679);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2683.setValue(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2681);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2682 = instancObjectFactory.createRemarkForOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2683);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2682);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2684 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2684 == null){
                                    INR2684 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2684.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2684.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2684);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2686 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2686.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2687 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2686);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2687 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2687)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2685 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2686 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2685.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2685);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2685.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2689 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2689.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2685);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2689.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2687);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2688 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2689);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2688);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2690 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2690 == null){
                                    INR2690 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2690.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2690.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2690);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2692 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2692.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2693 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2692);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2693 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2693)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2691 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2692 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2691.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2691);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2691.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2695 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2695.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2691);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2695.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2693);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2694 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2695);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2694);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2697 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2697.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2697);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2696 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2697 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2696.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2696);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2696.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700.setContextRef(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2696);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700.setValue(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2699 = instancObjectFactory.createRemarkForLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2699);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2701 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2701 == null){
                                    INR2701 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2701.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2701.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2701);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2703 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2703.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2704 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2703);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2704 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2704)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2702 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2703 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2702.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2702);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2702.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2706 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2706.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2702);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2706.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2704);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2705 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2706);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2705);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2708 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2708.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2709 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2708);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2709 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2709)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2707 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2708 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2707.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2707);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2707.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2711 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2711.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2707);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2711.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2709);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2710 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2711);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2710);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2713 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2713.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2713);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2712 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2713 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2712.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2712);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2712.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2712);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2715 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2715);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2717 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2717 == null){
                                    INR2717 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2717.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2717.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2717);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2719 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2719.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2720 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2719);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2720 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2720)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2718 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2719 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2718.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2718);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2718.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2722 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2722.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2718);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2722.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2720);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2721 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2722);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2721);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2724 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2724.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2725 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2724);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2725 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2725)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2723 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2724 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2723.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2723);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2723.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2727 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2727.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2723);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2727.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2725);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2726 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2727);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2726);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2729 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2729.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2729);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2728 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2729 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2728.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2728);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2728.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2728);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2731 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2731);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2733 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2733 == null){
                                    INR2733 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2733.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2733.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2733);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2735 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2735.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2736 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2735);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2736 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2736)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2734 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2735 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2734.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2734);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2734.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2738 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2738.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2734);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2738.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2736);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2737 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2738);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2737);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2740 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2740.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2741 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2740);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2741 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2741)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2739 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2740 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2739.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2739);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2739.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2743 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2743.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2739);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2743.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2741);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2742 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2743);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2742);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2745 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2745.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2745);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2744 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2745 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2744.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2744);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2744.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2744);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2747 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2747);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2749 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2749 == null){
                                    INR2749 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2749.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2749.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2749);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2751 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2751.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2752 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2751);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2752 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2752)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2750 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2751 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2750.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2750);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2750.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2754 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2754.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2750);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2754.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2752);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2753 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2754);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2753);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2756 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2756.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2757 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2756);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2757 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2757)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2755 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2756 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2755.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2755);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2755.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2759 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2759.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2755);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2759.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2757);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2758 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2759);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2758);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2761 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2761.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2761);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2760 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2761 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2760.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2760);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2760.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2760);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2763 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2763);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2765 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2765 == null){
                                    INR2765 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2765.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2765.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2765);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2767 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2767.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2768 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2767);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2768 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2768)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2766 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2767 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2766.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2766);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2766.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2770 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2770.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2766);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2770.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2768);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2769 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2770);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2769);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2772 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2772.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2773 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2772);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2773 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2773)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2771 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2772 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2771.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2771);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2771.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2775 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2775.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2771);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2775.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2773);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2774 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2775);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2774);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2777 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2777.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2777);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2776 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2777 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2776.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2776);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2776.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2776);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2779 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2779);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2781 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2781 == null){
                                    INR2781 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2781.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2781.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2781);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2783 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2783.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2784 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2783);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2784 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2784)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2782 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2783 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2782.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2782);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2782.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2786 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2786.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2782);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2786.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2784);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2785 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2786);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2785);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2788 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2788.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2789 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2788);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2789 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2789)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2787 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2788 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2787.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2787);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2787.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2791 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2791.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2787);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2791.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2789);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2790 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2791);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2790);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2793 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2793.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2793);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2792 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2793 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2792.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2792);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2792.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2792);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2795 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2795);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2797 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2797 == null){
                                    INR2797 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2797.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2797.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2797);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2799 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2799.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2800 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2799);
                            
                                if(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2800 != null && !"".equals(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2800)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2798 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2799 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2798.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2798);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2798.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2802 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2802.setContextRef(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2798);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2802.setValue(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2800);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2801 = instancObjectFactory.createBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2802);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2801);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2804 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2804.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2805 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2804);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2805 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2805)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2803 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2804 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2803.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2803);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2803.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2807 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2807.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2803);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2807.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2805);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2806 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2807);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2806);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2809 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2809.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2809);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2808 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2809 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2808.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2808);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2808.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812.setContextRef(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2808);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812.setValue(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2811 = instancObjectFactory.createRemarkForBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2811);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2813 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2813 == null){
                                    INR2813 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2813.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2813.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2813);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2815 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2815.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2816 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2815);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2816 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2816)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2814 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2815 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2814.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2814);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2814.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2818 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2818.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2814);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2818.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2816);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2817 = instancObjectFactory.createDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2818);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2817);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2820 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2820.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2821 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2820);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2821 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2821)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2819 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2820 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2819.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2819);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2819.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2823 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2823.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2819);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2823.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2821);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2822 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2823);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2822);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2825 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2825.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2825);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2824 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2825 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2824.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2824);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2824.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2824);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2827 = instancObjectFactory.createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2827);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2829 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2829 == null){
                                    INR2829 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2829.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2829.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2829);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2831 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2831.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2832 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2831);
                            
                                if(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2832 != null && !"".equals(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2832)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2830 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2831 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2830.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2830);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2830.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2834 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2834.setContextRef(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2830);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2834.setValue(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2832);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2833 = instancObjectFactory.createOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2834);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2833);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2836 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2836.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2837 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2836);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2837 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2837)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2835 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2836 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2835.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2835);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2835.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2839 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2839.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2835);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2839.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2837);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2838 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2839);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2838);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2841 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2841.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2842 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2841);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2842 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2842)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2840 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2841 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2840.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2840);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2840.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2844 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2844.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2840);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2844.setValue(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2842);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2843 = instancObjectFactory.createRemarkForOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2844);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2843);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2845 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2845 == null){
                                    INR2845 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2845.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2845.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2845);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2847 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2847.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2848 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2847);
                            
                                if(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2848 != null && !"".equals(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2848)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2846 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2847 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2846.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2846);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2846.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2850 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2850.setContextRef(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2846);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2850.setValue(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2848);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2849 = instancObjectFactory.createCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2850);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2849);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2852 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2852.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2853 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2852);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2853 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2853)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2851 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2852 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2851.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2851);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2851.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2855 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2855.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2851);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2855.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2853);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2854 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2855);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2854);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2857 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2857.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2858 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2857);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2858 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2858)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2856 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2857 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2856.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2856);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2856.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2860 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2860.setContextRef(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2856);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2860.setValue(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2858);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2859 = instancObjectFactory.createRemarkForCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2860);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2859);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2861 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2861 == null){
                                    INR2861 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2861.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2861.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2861);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2863 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2863.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2864 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2863);
                            
                                if(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2864 != null && !"".equals(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2864)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2862 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2863 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2862.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2862);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2862.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2866 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2866.setContextRef(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2862);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2866.setValue(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2864);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2865 = instancObjectFactory.createNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2866);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2865);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2868 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2868.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2869 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2868);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2869 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2869)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2867 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2868 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2867.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2867);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2867.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2871 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2871.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2867);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2871.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2869);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2870 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2871);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2870);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2873 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2873.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2873);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2872 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2873 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2872.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2872);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2872.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876.setContextRef(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2872);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876.setValue(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2875 = instancObjectFactory.createRemarkForNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2875);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2877 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2877 == null){
                                    INR2877 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2877.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2877.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2877);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2879 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2879.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2879);
                            
                                if(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880 != null && !"".equals(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2878 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2879 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2878.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2878);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2878.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882.setContextRef(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2878);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882.setValue(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2881 = instancObjectFactory.createBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2881);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2884 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2884.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2885 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2884);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2885 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2885)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2883 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2884 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2883.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2883);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2883.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2887 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2887.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2883);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2887.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2885);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2886 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2887);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2886);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2889 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2889.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2890 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2889);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2890 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2890)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2888 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2889 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2888.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2888);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2888.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2892 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2892.setContextRef(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2888);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2892.setValue(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2890);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2891 = instancObjectFactory.createRemarkForBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2892);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2891);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2894 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2894.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2895 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2894);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2895 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2895)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2893 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2894 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2893.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2893);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2893.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2897 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2897.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2893);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2897.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2895);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2896 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2897);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2896);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2899 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2899.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2900 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2899);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2900 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2900)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2898 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2899 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2898.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2898);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2898.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2902 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2902.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2898);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2902.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2900);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2901 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2902);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2901);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2904 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2904.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2905 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2904);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2905 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2905)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2903 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2904 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2903.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2903);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2903.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2907 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2907.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2903);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2907.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2905);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2906 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2907);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2906);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2908 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2908 == null){
                                    INR2908 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2908.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2908.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2908);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2910 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2910.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2911 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2910);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2911 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2911)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2909 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2910 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2909.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2909);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2909.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2913 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2913.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2909);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2913.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2911);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2912 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2913);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2912);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2914 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2914 == null){
                                    INR2914 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2914.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2914.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2914);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2916 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2916.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2917 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2916);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2917 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2917)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2915 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2916 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2915.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2915);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2915.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2919 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2919.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2915);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2919.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2917);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2918 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2919);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2918);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2921 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2921.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2922 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2921);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2922 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2922)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2920 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2921 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2920.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2920);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2920.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2924 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2924.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2920);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2924.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2922);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2923 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2924);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2923);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2925 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2925 == null){
                                    INR2925 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2925.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2925.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2925);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2927 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2927.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2928 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2927);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2928 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2928)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2926 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2927 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2926.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2926);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2926.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2930 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2930.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2926);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2930.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2928);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2929 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2930);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2929);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2931 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2931 == null){
                                    INR2931 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2931.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2931.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2931);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2933 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2933.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2934 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2933);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2934 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2934)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2932 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2933 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2932.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2932);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2932.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2936 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2936.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2932);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2936.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2934);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2935 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2936);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2935);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2938 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2938.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2939 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2938);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2939 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2939)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2937 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2938 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2937.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2937);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2937.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2941 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2941.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2937);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2941.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2939);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2940 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2941);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2940);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2942 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2942 == null){
                                    INR2942 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2942.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2942.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2942);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2944 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2944.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2945 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2944);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2945 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2945)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2943 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2944 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2943.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2943);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2943.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2947 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2947.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2943);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2947.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2945);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2946 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2947);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2946);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2948 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2948 == null){
                                    INR2948 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2948.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2948.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2948);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2950 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2950.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2951 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2950);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2951 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2951)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2949 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2950 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2949.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2949);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2949.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2953 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2953.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2949);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2953.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2951);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2952 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2953);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2952);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2955 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2955.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2956 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2955);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2956 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2956)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2954 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2955 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2954.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2954);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2954.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2958 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2958.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2954);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2958.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2956);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2957 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2958);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2957);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2959 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2959 == null){
                                    INR2959 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2959.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2959.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2959);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2961 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2961.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2962 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2961);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2962 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2962)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2960 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2961 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2960.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2960);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2960.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2964 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2964.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2960);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2964.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2962);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2963 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2964);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2965 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2965 == null){
                                    INR2965 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2965.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2965.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2965);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2967 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2967.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2968 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2967);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2968 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2968)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2966 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2967 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2966.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2966);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2966.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2970 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2970.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2966);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2970.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2968);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2969 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2970);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2969);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2972 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2972.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2973 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2972);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2973 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2973)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2971 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2972 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2971.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2971);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2971.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2975 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2975.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2971);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2975.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2973);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2974 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2975);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2974);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2976 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2976 == null){
                                    INR2976 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2976.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2976.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2976);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2978 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2978.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2979 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2978);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2979 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2979)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2977 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2978 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2977.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2977);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2977.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2981 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2981.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2977);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2981.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2979);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2980 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2981);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2980);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2982 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2982 == null){
                                    INR2982 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2982.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2982.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2982);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2984 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2984.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2985 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2984);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2985 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2985)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2983 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2984 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2983.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2983);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2983.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2987 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2987.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2983);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2987.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2985);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2986 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2987);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2986);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2989 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2989.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2990 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2989);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2990 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2990)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2988 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2989 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2988.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2988);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2988.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2992 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2992.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2988);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2992.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2990);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2991 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2992);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2991);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2993 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2993 == null){
                                    INR2993 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2993.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2993.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2993);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2995 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2995.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2996 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2995);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2996 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2996)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2994 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2995 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2994.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2994);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2994.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2998 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2998.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2994);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2998.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2996);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2997 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2998);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2997);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2999 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2999 == null){
                                    INR2999 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2999.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2999.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2999);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3001 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3001.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3002 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3001);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3002 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3002)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3000 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3001 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3000.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3000);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3000.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3004 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3004.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3000);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3004.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3002);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3003 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3004);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3003);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3006 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3006.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3007 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3006);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3007 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3007)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3005 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3006 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3005.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3005);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3005.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3009 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3009.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3005);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3009.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3007);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3008 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3009);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3008);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3010 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3010 == null){
                                    INR3010 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3010.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3010.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3010);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3012 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3012.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3013 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3012);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3013 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3013)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3011 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3012 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3011.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3011);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3011.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3015 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3015.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3011);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3015.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3013);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3014 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3015);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3014);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3016 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3016 == null){
                                    INR3016 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3016.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3016.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3016);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3018 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3018.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3019 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3018);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3019 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3019)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3017 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3018 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3017.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3017);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3017.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3021 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3021.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3017);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3021.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3019);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3020 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3021);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3020);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3023 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3023.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3024 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3023);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3024 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3024)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3022 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3023 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3022.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3022);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3022.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3026 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3026.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3022);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3026.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3024);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3025 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3026);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3025);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3027 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3027 == null){
                                    INR3027 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3027.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3027.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3027);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3029 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3029.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3030 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3029);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3030 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3030)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3028 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3029 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3028.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3028);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3028.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3032 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3032.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3028);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3032.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3030);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3031 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3032);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3031);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3033 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3033 == null){
                                    INR3033 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3033.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3033.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3033);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3035 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3035.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3036 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3035);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3036 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3036)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3034 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3035 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3034.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3034);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3034.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3038 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3038.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3034);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3038.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3036);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3037 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3038);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3037);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3040 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3040.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3041 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3040);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3041 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3041)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3039 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3040 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3039.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3039);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3039.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3043 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3043.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3039);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3043.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3041);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3042 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3043);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3042);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3044 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3044 == null){
                                    INR3044 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3044.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3044.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3044);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3046 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3046.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3047 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3046);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3047 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3047)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3045 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3046 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3045.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3045);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3045.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3049 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3049.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3045);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3049.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3047);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3048 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3049);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3048);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3050 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3050 == null){
                                    INR3050 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3050.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3050.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3050);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3052 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3052.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3053 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3052);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3053 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3053)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3051 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3052 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3051.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3051);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3051.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3055 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3055.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3051);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3055.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3053);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3054 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3055);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3054);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3057 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3057.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3058 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3057);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3058 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3058)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3056 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3057 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3056.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3056);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3056.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3060 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3060.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3056);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3060.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3058);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3059 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3060);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3059);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3061 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3061 == null){
                                    INR3061 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3061.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3061.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3061);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3063 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3063.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3064 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3063);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3064 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3064)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3062 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3063 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3062.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3062);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3062.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3066 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3066.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3062);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3066.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3064);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3065 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3066);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3065);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3067 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3067 == null){
                                    INR3067 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3067.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3067.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3067);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3069 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3069.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3070 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3069);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3070 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3070)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3068 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3069 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3068.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3068);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3068.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3072 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3072.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3068);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3072.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3070);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3071 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3072);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3071);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3074 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3074.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3075 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3074);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3075 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3075)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3073 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3074 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3073.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3073);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3073.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3077 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3077.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3073);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3077.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3075);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3076 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3077);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3076);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR3078 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3078 == null){
                                    INR3078 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3078.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3078.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3078);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - TotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3080 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3080.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3081 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3080);
                            
                                if(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3081 != null && !"".equals(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3081)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3079 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3080 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3079.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3079);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3079.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3083 = new StringItemType();
                                    explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3083.setContextRef(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3079);
                                    
                                    
                                        explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3083.setValue(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3081);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberElement3082 = instancObjectFactory.createTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3083);
                                    bodyElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberElement3082);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3085 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3085.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3086 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3085);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3086 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3086)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3084 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3085 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3084.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3084);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3084.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3088 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3088.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3084);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3088.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3086);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3087 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3088);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3087);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForTotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3090 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3090.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3091 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3090);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3091 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3091)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3089 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3090 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3089.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3089);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3089.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3093 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3093.setContextRef(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3089);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3093.setValue(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3091);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberElement3092 = instancObjectFactory.createRemarkForTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3093);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberElement3092);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3094 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3094 == null){
                                    INR3094 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3094.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3094.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3094);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3096 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3096.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3097 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3096);
                            
                                if(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3097 != null && !"".equals(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3097)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3095 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3096 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3095.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3095);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3095.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3099 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3099.setContextRef(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3095);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3099.setValue(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3097);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3098 = instancObjectFactory.createNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3099);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3098);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3101 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3101.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3102 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3101);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3102 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3102)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3100 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3101 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3100.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3100);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3100.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3104 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3104.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3100);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3104.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3102);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3103 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3104);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3103);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3106 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3106.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3107 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3106);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3107 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3107)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3105 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3106 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3105.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3105);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3105.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3109 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3109.setContextRef(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3105);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3109.setValue(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3107);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3108 = instancObjectFactory.createRemarkForNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3109);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3108);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3110 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3110 == null){
                                    INR3110 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3110.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3110.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3110);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3112 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3112.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3113 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3112);
                            
                                if(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3113 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3113)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3111 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3112 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3111.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3111);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3111.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3115 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3115.setContextRef(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3111);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3115.setValue(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3113);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberElement3114 = instancObjectFactory.createFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3115);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberElement3114);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3117 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3117.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3118 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3117);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3118 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3118)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3116 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3117 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3116.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3116);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3116.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3120 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3120.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3116);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3120.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3118);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3119 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3120);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3119);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3122 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3122.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3123 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3122);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3123 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3123)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3121 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3122 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3121.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3121);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3121.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3125 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3125.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3121);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3125.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3123);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberElement3124 = instancObjectFactory.createRemarkForFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3125);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberElement3124);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3126 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3126 == null){
                                    INR3126 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3126.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3126.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3126);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3128 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3128.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3129 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3128);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3129 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3129)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3127 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3128 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3127.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3127);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3127.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3131 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3131.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3127);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3131.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3129);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3130 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3131);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3130);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3132 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3132 == null){
                                    INR3132 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3132.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3132.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3132);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3134 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3134.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3135 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3134);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3135 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3135)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3133 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3134 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3133.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3133);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3133.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3137 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3137.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3133);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3137.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3135);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3136 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3137);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3139 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3139.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3140 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3139);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3140 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3140)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3138 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3139 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3138.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3138);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3138.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3142 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3142.setContextRef(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3138);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3142.setValue(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3140);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3141 = instancObjectFactory.createRemarkForCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3142);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3141);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3143 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3143 == null){
                                    INR3143 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3143.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3143.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3143);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3145 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3145.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3146 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3145);
                            
                                if(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3146 != null && !"".equals(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3146)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3144 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3145 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3144.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3144);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3144.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3148 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3148.setContextRef(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3144);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3148.setValue(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3146);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3147 = instancObjectFactory.createLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3148);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3147);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3150 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3150.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3151 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3150);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3151 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3151)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3149 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3150 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3149.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3149);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3149.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3153 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3153.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3149);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3153.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3151);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3152 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3153);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3155 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3155.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3156 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3155);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3156 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3156)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3154 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3155 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3154.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3154);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3154.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3158 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3158.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3154);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3158.setValue(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3156);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3157 = instancObjectFactory.createRemarkForLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3158);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3157);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3159 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3159 == null){
                                    INR3159 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3159.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3159.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3159);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3161 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3161.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3162 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3161);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3162 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3162)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3160 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3161 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3160.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3160);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3160.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3164 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3164.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3160);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3164.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3162);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3163 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3164);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3163);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3165 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3165 == null){
                                    INR3165 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3165.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3165.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3165);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3167 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3167.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3168 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3167);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3168 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3168)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3166 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3167 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3166.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3166);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3166.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3170 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3170.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3166);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3170.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3168);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3169 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3170);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3169);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3172 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3172.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3173 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3172);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3173 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3173)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3171 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3172 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3171.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3171);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3171.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3175 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3175.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3171);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3175.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3173);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3174 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3175);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3174);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3176 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3176 == null){
                                    INR3176 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3176.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3176.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3176);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3178 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3178.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3179 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3178);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3179 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3179)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3177 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3178 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3177.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3177);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3177.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3181 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3181.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3177);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3181.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3179);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3180 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3181);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3180);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3183 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3183.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3184 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3183);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3184 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3184)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3182 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3183 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3182.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3182);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3182.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3186 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3186.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3182);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3186.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3184);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3185 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3186);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3185);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3188 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3188.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3189 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3188);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3189 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3189)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3187 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3188 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3187.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3187);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3187.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3191 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3191.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3187);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3191.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3189);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3190 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3191);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3190);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3192 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3192 == null){
                                    INR3192 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3192.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3192.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3192);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3194 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3194.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3195 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3194);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3195 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3195)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3193 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3194 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3193.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3193);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3193.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3197 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3197.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3193);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3197.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3195);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3196 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3197);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3196);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3199 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3199.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3200 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3199);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3200 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3200)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3198 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3199 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3198.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3198);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3198.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3202 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3202.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3198);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3202.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3200);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3201 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3202);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3201);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3204 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3204.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3205 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3204);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3205 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3205)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3203 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3204 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3203.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3203);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3203.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3207 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3207.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3203);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3207.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3205);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3206 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3207);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3206);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3208 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3208 == null){
                                    INR3208 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3208.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3208.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3208);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3210 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3210.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3211 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3210);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3211 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3211)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3209 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3210 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3209.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3209);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3209.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3213 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3213.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3209);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3213.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3211);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3212 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3213);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3212);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3215 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3215.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3216 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3215);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3216 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3216)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3214 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3215 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3214.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3214);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3214.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3218 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3218.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3214);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3218.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3216);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3217 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3218);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3217);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3220 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3220.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3221 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3220);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3221 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3221)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3219 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3220 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3219.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3219);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3219.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3223 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3223.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3219);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3223.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3221);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3222 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3223);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3222);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3224 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3224 == null){
                                    INR3224 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3224.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3224.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3224);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3226 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3226.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3227 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3226);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3227 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3227)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3225 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3226 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3225.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3225);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3225.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3229 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3229.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3225);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3229.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3227);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3228 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3229);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3228);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3231 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3231.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3232 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3231);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3232 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3232)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3230 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3231 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3230.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3230);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3230.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3234 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3234.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3230);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3234.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3232);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3233 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3234);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3233);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3236 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3236.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3237 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3236);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3237 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3237)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3235 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3236 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3235.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3235);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3235.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3239 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3239.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3235);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3239.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3237);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3238 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3239);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3238);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3240 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3240 == null){
                                    INR3240 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3240.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3240.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3240);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3242 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3242.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3243 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3242);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3243 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3243)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3241 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3242 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3241.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3241);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3241.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3245 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3245.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3241);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3245.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3243);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3244 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3245);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3244);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3247 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3247.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3248 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3247);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3248 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3248)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3246 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3247 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3246.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3246);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3246.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3250 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3250.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3246);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3250.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3248);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3249 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3250);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3249);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3252 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3252.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3253 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3252);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3253 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3253)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3251 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3252 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3251.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3251);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3251.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3255 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3255.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3251);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3255.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3253);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3254 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3255);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3254);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3256 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3256 == null){
                                    INR3256 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3256.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3256.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3256);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3258 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3258.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3259 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3258);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3259 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3259)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3257 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3258 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3257.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3257);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3257.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3261 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3261.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3257);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3261.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3259);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3260 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3261);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3260);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3263 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3263.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3264 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3263);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3264 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3264)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3262 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3263 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3262.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3262);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3262.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3266 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3266.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3262);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3266.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3264);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3265 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3266);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3265);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3268 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3268.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3269 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3268);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3269 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3269)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3267 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3268 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3267.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3267);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3267.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3271 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3271.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3267);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3271.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3269);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3270 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3271);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3270);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3272 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3272 == null){
                                    INR3272 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3272.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3272.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3272);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3274 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3274.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3275 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3274);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3275 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3275)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3273 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3274 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3273.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3273);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3273.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3277 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3277.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3273);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3277.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3275);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3276 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3277);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3276);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3279 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3279.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3280 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3279);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3280 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3280)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3278 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3279 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3278.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3278);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3278.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3282 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3282.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3278);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3282.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3280);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3281 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3282);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3281);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3284 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3284.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3285 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3284);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3285 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3285)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3283 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3284 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3283.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3283);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3283.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3287 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3287.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3283);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3287.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3285);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3286 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3287);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3286);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3288 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3288 == null){
                                    INR3288 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3288.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3288.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3288);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3290 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3290.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3291 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3290);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3291 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3291)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3289 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3290 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3289.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3289);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3289.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3293 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3293.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3289);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3293.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3291);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3292 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3293);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3292);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3295 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3295.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3296 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3295);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3296 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3296)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3294 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3295 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3294.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3294);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3294.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3298 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3298.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3294);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3298.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3296);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3297 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3298);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3297);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3300 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3300.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3301 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3300);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3301 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3301)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3299 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3300 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3299.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3299);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3299.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3303 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3303.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3299);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3303.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3301);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3302 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3303);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3302);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3304 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3304 == null){
                                    INR3304 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3304.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3304.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3304);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3306 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3306.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3307 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3306);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3307 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3307)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3305 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3306 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3305.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3305);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3305.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3309 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3309.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3305);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3309.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3307);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3308 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3309);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3308);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3311 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3311.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3312 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3311);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3312 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3312)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3310 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3311 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3310.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3310);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3310.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3314 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3314.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3310);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3314.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3312);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3313 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3314);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3313);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3316 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3316.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3317 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3316);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3317 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3317)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3315 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3316 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3315.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3315);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3315.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3319 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3319.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3315);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3319.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3317);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3318 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3319);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3318);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3320 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3320 == null){
                                    INR3320 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3320.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3320.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3320);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3322 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3322.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3323 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3322);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3323 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3323)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3321 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3322 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3321.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3321);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3321.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3325 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3325.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3321);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3325.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3323);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3324 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3325);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3324);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3327 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3327.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3328 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3327);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3328 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3328)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3326 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3327 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3326.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3326);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3326.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3330 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3330.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3326);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3330.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3328);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3329 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3330);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3329);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3332 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3332.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3333 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3332);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3333 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3333)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3331 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3332 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3331.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3331);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3331.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3335 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3335.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3331);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3335.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3333);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3334 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3335);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3334);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3336 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3336 == null){
                                    INR3336 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3336.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3336.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3336);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3338 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3338.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3339 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3338);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3339 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3339)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3337 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3338 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3337.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3337);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3337.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3341 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3341.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3337);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3341.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3339);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3340 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3341);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3343 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3343.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3344 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3343);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3344 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3344)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3342 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3343 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3342.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3342);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3342.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3346 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3346.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3342);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3346.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3344);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3345 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3346);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3345);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3348 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3348.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3349 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3348);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3349 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3349)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3347 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3348 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3347.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3347);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3347.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3351 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3351.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3347);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3351.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3349);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3350 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3351);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3350);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3352 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3352 == null){
                                    INR3352 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3352.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3352.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3352);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3354 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3354.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3355 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3354);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3355 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3355)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3353 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3354 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3353.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3353);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3353.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3357 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3357.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3353);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3357.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3355);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3356 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3357);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3356);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3358 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3358 == null){
                                    INR3358 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3358.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3358.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3358);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3360 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3360.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3361 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3360);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3361 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3361)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3359 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3360 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3359.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3359);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3359.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3363 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3363.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3359);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3363.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3361);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3362 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3363);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3362);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3365 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3365.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3366 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3365);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3366 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3366)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3364 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3365 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3364.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3364);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3364.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3368 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3368.setContextRef(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3364);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3368.setValue(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3366);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3367 = instancObjectFactory.createRemarkForSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3368);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3367);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3369 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3369 == null){
                                    INR3369 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3369.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3369.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3369);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3371 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3371.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3372 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3371);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3372 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3372)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3370 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3371 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3370.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3370);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3370.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3374 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3374.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3370);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3374.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3372);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3373 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3374);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3373);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3375 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3375 == null){
                                    INR3375 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3375.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3375.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3375);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3377 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3377.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3378 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3377);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3378 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3378)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3376 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3377 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3376.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3376);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3376.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3380 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3380.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3376);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3380.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3378);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3379 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3380);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3379);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3382 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3382.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3383 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3382);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3383 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3383)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3381 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3382 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3381.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3381);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3381.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3385 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3385.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3381);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3385.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3383);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberElement3384 = instancObjectFactory.createRemarkForDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3385);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberElement3384);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3386 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3386 == null){
                                    INR3386 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3386.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3386.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3386);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3388 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3388.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3389 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3388);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3389 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3389)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3387 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3388 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3387.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3387);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3387.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3391 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3391.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3387);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3391.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3389);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3390 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3391);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3390);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3392 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3392 == null){
                                    INR3392 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3392.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3392.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3392);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3394 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3394.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3395 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3394);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3395 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3395)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3393 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3394 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3393.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3393);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3393.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3397 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3397.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3393);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3397.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3395);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3396 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3397);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3396);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3399 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3399.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3400 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3399);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3400 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3400)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3398 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3399 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3398.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3398);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3398.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3402 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3402.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3398);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3402.setValue(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3400);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3401 = instancObjectFactory.createRemarkForSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3402);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3401);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3403 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3403 == null){
                                    INR3403 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3403.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3403.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3403);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3405 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3405.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3406 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3405);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3406 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3406)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3404 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3405 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3404.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3404);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3404.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3408 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3408.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3404);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3408.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3406);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3407 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3408);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3407);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3409 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3409 == null){
                                    INR3409 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3409.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3409.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3409);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3411 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3411.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3412 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3411);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3412 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3412)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3410 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3411 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3410.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3410);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3410.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3414 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3414.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3410);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3414.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3412);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3413 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3414);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3413);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3416 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3416.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3417 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3416);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3417 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3417)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3415 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3416 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3415.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3415);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3415.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3419 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3419.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3415);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3419.setValue(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3417);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberElement3418 = instancObjectFactory.createRemarkForOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3419);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberElement3418);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3420 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3420 == null){
                                    INR3420 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3420.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3420.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3420);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3422 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3422.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3423 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3422);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3423 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3423)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3421 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3422 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3421.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3421);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3421.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3425 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3425.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3421);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3425.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3423);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3424 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3425);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3424);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3426 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3426 == null){
                                    INR3426 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3426.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3426.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3426);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3428 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3428.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3429 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3428);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3429 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3429)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3427 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3428 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3427.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3427);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3427.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3431 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3431.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3427);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3431.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3429);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3430 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3431);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3430);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3433 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3433.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3434 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3433);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3434 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3434)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3432 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3433 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3432.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3432);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3432.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3436 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3436.setContextRef(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3432);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3436.setValue(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3434);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberElement3435 = instancObjectFactory.createRemarkForLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3436);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberElement3435);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3437 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3437 == null){
                                    INR3437 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3437.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3437.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3437);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3439 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3439.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3440 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3439);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3440 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3440)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3438 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3439 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3438.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3438);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3438.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3442 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3442.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3438);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3442.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3440);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3441 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3442);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3441);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3444 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3444.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3445 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3444);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3445 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3445)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3443 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3444 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3443.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3443);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3443.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3447 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3447.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3443);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3447.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3445);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3446 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3447);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3446);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3449 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3449.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3450 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3449);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3450 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3450)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3448 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3449 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3448.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3448);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3448.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3452 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3452.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3448);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3452.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3450);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3451 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3452);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3451);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3453 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3453 == null){
                                    INR3453 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3453.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3453.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3453);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3455 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3455.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3456 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3455);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3456 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3456)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3454 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3455 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3454.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3454);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3454.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3458 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3458.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3454);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3458.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3456);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3457 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3458);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3457);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3460 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3460.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3461 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3460);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3461 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3461)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3459 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3460 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3459.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3459);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3459.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3463 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3463.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3459);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3463.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3461);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3462 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3463);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3462);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3465 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3465.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3466 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3465);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3466 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3466)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3464 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3465 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3464.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3464);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3464.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3468 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3468.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3464);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3468.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3466);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3467 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3468);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3467);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3469 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3469 == null){
                                    INR3469 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3469.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3469.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3469);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3471 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3471.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3472 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3471);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3472 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3472)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3470 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3471 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3470.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3470);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3470.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3474 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3474.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3470);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3474.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3472);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3473 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3474);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3473);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3476 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3476.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3477 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3476);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3477 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3477)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3475 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3476 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3475.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3475);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3475.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3479 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3479.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3475);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3479.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3477);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3478 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3479);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3478);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3481 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3481.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3482 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3481);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3482 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3482)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3480 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3481 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3480.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3480);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3480.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3484 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3484.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3480);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3484.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3482);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3483 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3484);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3483);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3485 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3485 == null){
                                    INR3485 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3485.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3485.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3485);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3487 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3487.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3488 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3487);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3488 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3488)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3486 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3487 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3486.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3486);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3486.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3490 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3490.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3486);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3490.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3488);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3489 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3490);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3489);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3492 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3492.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3493 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3492);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3493 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3493)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3491 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3492 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3491.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3491);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3491.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3495 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3495.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3491);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3495.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3493);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3494 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3495);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3494);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3497 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3497.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3498 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3497);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3498 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3498)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3496 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3497 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3496.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3496);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3496.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3500 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3500.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3496);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3500.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3498);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3499 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3500);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3499);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3501 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3501 == null){
                                    INR3501 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3501.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3501.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3501);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3503 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3503.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3504 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3503);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3504 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3504)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3502 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3503 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3502.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3502);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3502.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3506 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3506.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3502);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3506.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3504);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3505 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3506);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3505);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3508 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3508.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3509 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3508);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3509 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3509)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3507 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3508 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3507.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3507);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3507.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3511 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3511.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3507);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3511.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3509);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3510 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3511);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3510);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3513 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3513.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3514 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3513);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3514 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3514)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3512 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3513 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3512.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3512);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3512.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3516 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3516.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3512);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3516.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3514);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3515 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3516);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3515);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3517 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3517 == null){
                                    INR3517 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3517.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3517.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3517);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3519 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3519.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3520 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3519);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3520 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3520)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3518 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3519 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3518.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3518);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3518.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3522 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3522.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3518);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3522.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3520);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3521 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3522);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3521);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3524 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3524.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3525 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3524);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3525 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3525)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3523 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3524 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3523.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3523);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3523.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3527 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3527.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3523);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3527.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3525);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3526 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3527);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3526);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3529 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3529.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3530 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3529);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3530 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3530)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3528 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3529 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3528.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3528);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3528.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3532 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3532.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3528);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3532.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3530);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3531 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3532);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3531);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3533 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3533 == null){
                                    INR3533 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3533.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3533.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3533);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3535 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3535.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3536 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3535);
                            
                                if(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3536 != null && !"".equals(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3536)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3534 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3535 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3534.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3534);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3534.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3538 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3538.setContextRef(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3534);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3538.setValue(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3536);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberElement3537 = instancObjectFactory.createBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3538);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberElement3537);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3540 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3540.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3541 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3540);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3541 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3541)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3539 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3540 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3539.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3539);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3539.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3543 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3543.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3539);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3543.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3541);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3542 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3543);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3542);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3545 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3545.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3546 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3545);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3546 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3546)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3544 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3545 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3544.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3544);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3544.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3548 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3548.setContextRef(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3544);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3548.setValue(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3546);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberElement3547 = instancObjectFactory.createRemarkForBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3548);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberElement3547);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3549 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3549 == null){
                                    INR3549 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3549.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3549.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3549);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3551 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3551.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3552 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3551);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3552 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3552)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3550 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3551 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3550.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3550);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3550.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3554 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3554.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3550);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3554.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3552);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3553 = instancObjectFactory.createDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3554);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3553);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3556 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3556.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3557 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3556);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3557 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3557)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3555 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3556 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3555.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3555);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3555.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3559 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3559.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3555);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3559.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3557);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3558 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3559);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3558);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3561 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3561.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3562 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3561);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3562 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3562)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3560 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3561 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3560.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3560);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3560.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3564 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3564.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3560);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3564.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3562);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3563 = instancObjectFactory.createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3564);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3563);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3565 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3565 == null){
                                    INR3565 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3565.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3565.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3565);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3567 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3567.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3568 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3567);
                            
                                if(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3568 != null && !"".equals(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3568)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3566 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3567 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3566.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3566);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3566.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3570 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3570.setContextRef(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3566);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3570.setValue(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3568);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3569 = instancObjectFactory.createOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3570);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3569);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3572 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3572.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3573 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3572);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3573 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3573)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3571 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3572 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3571.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3571);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3571.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3575 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3575.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3571);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3575.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3573);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3574 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3575);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3574);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3577 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3577.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3578 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3577);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3578 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3578)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3576 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3577 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3576.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3576);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3576.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3580 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3580.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3576);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3580.setValue(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3578);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3579 = instancObjectFactory.createRemarkForOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3580);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3579);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3581 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3581 == null){
                                    INR3581 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3581.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3581.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3581);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3583 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3583.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3584 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3583);
                            
                                if(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3584 != null && !"".equals(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3584)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3582 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3583 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3582.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3582);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3582.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3586 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3586.setContextRef(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3582);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3586.setValue(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3584);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberElement3585 = instancObjectFactory.createCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3586);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberElement3585);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3588 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3588.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3589 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3588);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3589 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3589)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3587 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3588 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3587.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3587);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3587.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3591 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3591.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3587);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3591.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3589);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3590 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3591);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3590);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3593 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3593.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3594 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3593);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3594 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3594)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3592 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3593 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3592.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3592);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3592.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3596 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3596.setContextRef(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3592);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3596.setValue(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3594);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3595 = instancObjectFactory.createRemarkForCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3596);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3595);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3597 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3597 == null){
                                    INR3597 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3597.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3597.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3597);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3599 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3599.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3600 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3599);
                            
                                if(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3600 != null && !"".equals(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3600)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3598 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3599 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3598.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3598);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3598.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3602 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3602.setContextRef(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3598);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3602.setValue(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3600);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3601 = instancObjectFactory.createNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3602);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3601);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3604 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3604.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3605 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3604);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3605 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3605)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3603 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3604 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3603.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3603);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3603.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3607 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3607.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3603);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3607.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3605);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3606 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3607);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3606);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3609 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3609.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3610 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3609);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3610 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3610)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3608 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3609 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3608.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3608);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3608.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3612 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3612.setContextRef(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3608);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3612.setValue(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3610);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3611 = instancObjectFactory.createRemarkForNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3612);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3611);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3613 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3613 == null){
                                    INR3613 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3613.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3613.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3613);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3615 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3615.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3616 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3615);
                            
                                if(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3616 != null && !"".equals(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3616)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3614 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3615 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3614.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3614);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3614.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3618 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3618.setContextRef(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3614);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3618.setValue(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3616);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3617 = instancObjectFactory.createBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3618);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3617);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3620 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3620.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3621 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3620);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3621 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3621)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3619 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3620 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3619.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3619);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3619.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3623 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3623.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3619);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3623.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3621);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3622 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3623);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3622);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3625 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3625.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3626 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3625);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3626 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3626)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3624 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3625 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3624.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3624);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3624.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3628 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3628.setContextRef(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3624);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3628.setValue(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3626);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3627 = instancObjectFactory.createRemarkForBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3628);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3627);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3630 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3630.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3631 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3630);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3631 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3631)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3629 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3630 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3629.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3629);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3629.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3633 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3633.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3629);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3633.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3631);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3632 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3633);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3632);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3635 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3635.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3636 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3635);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3636 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3636)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3634 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3635 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3634.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3634);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3634.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3638 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3638.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3634);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3638.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3636);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3637 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3638);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3637);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3640 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3640.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3641 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3640);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3641 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3641)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3639 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3640 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3639.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3639);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3639.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3643 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3643.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3639);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3643.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3641);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3642 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3643);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3642);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3644 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3644 == null){
                                    INR3644 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3644.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3644.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3644);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3646 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3646.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3647 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3646);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3647 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3647)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3645 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3646 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3645.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3645);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3645.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3649 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3649.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3645);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3649.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3647);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3648 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3649);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3648);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3650 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3650 == null){
                                    INR3650 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3650.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3650.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3650);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3652 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3652.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3653 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3652);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3653 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3653)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3651 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3652 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3651.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3651);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3651.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3655 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3655.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3651);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3655.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3653);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3654 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3655);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3654);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3657 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3657.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3658 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3657);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3658 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3658)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3656 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3657 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3656.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3656);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3656.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3660 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3660.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3656);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3660.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3658);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3659 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3660);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3659);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3661 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3661 == null){
                                    INR3661 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3661.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3661.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3661);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3663 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3663.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3664 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3663);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3664 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3664)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3662 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3663 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3662.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3662);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3662.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3666 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3666.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3662);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3666.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3664);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3665 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3666);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3665);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3667 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3667 == null){
                                    INR3667 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3667.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3667.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3667);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3669 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3669.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3670 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3669);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3670 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3670)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3668 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3669 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3668.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3668);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3668.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3672 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3672.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3668);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3672.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3670);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3671 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3672);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3671);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3674 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3674.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3675 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3674);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3675 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3675)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3673 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3674 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3673.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3673);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3673.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3677 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3677.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3673);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3677.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3675);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3676 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3677);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3676);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3678 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3678 == null){
                                    INR3678 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3678.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3678.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3678);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3680 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3680.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3681 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3680);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3681 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3681)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3679 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3680 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3679.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3679);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3679.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3683 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3683.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3679);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3683.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3681);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3682 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3683);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3682);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3684 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3684 == null){
                                    INR3684 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3684.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3684.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3684);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3686 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3686.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3687 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3686);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3687 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3687)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3685 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3686 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3685.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3685);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3685.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3689 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3689.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3685);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3689.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3687);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3688 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3689);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3688);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3691 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3691.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3692 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3691);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3692 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3692)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3690 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3691 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3690.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3690);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3690.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3694 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3694.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3690);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3694.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3692);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3693 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3694);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3693);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3695 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3695 == null){
                                    INR3695 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3695.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3695.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3695);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3697 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3697.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3698 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3697);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3698 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3698)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3696 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3697 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3696.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3696);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3696.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3700 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3700.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3696);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3700.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3698);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3699 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3700);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3699);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3701 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3701 == null){
                                    INR3701 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3701.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3701.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3701);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3703 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3703.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3704 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3703);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3704 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3704)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3702 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3703 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3702.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3702);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3702.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3706 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3706.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3702);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3706.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3704);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3705 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3706);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3705);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3708 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3708.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3709 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3708);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3709 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3709)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3707 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3708 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3707.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3707);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3707.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3711 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3711.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3707);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3711.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3709);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3710 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3711);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3710);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3712 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3712 == null){
                                    INR3712 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3712.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3712.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3712);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3714 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3714.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3715 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3714);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3715 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3715)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3713 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3714 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3713.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3713);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3713.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3717 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3717.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3713);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3717.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3715);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3716 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3717);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3716);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3718 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3718 == null){
                                    INR3718 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3718.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3718.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3718);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3720 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3720.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3721 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3720);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3721 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3721)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3719 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3720 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3719.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3719);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3719.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3723 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3723.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3719);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3723.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3721);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3722 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3723);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3722);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3725 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3725.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3726 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3725);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3726 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3726)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3724 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3725 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3724.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3724);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3724.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3728 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3728.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3724);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3728.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3726);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3727 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3728);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3727);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3729 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3729 == null){
                                    INR3729 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3729.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3729.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3729);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3731 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3731.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3732 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3731);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3732 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3732)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3730 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3731 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3730.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3730);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3730.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3734 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3734.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3730);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3734.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3732);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3733 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3734);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3733);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3735 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3735 == null){
                                    INR3735 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3735.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3735.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3735);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3737 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3737.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3738 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3737);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3738 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3738)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3736 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3737 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3736.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3736);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3736.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3740 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3740.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3736);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3740.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3738);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3739 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3740);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3739);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3742 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3742.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3743 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3742);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3743 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3743)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3741 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3742 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3741.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3741);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3741.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3745 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3745.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3741);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3745.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3743);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3744 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3745);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3744);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3746 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3746 == null){
                                    INR3746 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3746.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3746.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3746);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3748 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3748.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3749 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3748);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3749 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3749)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3747 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3748 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3747.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3747);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3747.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3751 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3751.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3747);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3751.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3749);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3750 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3751);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3750);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3752 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3752 == null){
                                    INR3752 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3752.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3752.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3752);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3754 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3754.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3755 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3754);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3755 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3755)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3753 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3754 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3753.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3753);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3753.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3757 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3757.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3753);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3757.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3755);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3756 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3757);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3756);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3759 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3759.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3760 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3759);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3760 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3760)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3758 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3759 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3758.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3758);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3758.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3762 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3762.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3758);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3762.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3760);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3761 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3762);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3761);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3763 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3763 == null){
                                    INR3763 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3763.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3763.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3763);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3765 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3765.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3766 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3765);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3766 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3766)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3764 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3765 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3764.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3764);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3764.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3768 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3768.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3764);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3768.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3766);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3767 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3768);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3767);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3769 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3769 == null){
                                    INR3769 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3769.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3769.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3769);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3771 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3771.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3772 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3771);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3772 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3772)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3770 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3771 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3770.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3770);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3770.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3774 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3774.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3770);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3774.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3772);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3773 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3774);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3773);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3776 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3776.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3777 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3776);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3777 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3777)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3775 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3776 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3775.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3775);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3775.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3779 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3779.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3775);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3779.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3777);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3778 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3779);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3778);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3780 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3780 == null){
                                    INR3780 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3780.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3780.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3780);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3782 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3782.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3783 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3782);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3783 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3783)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3781 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3782 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3781.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3781);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3781.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3785 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3785.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3781);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3785.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3783);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3784 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3785);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3784);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3786 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3786 == null){
                                    INR3786 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3786.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3786.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3786);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3788 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3788.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3789 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3788);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3789 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3789)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3787 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3788 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3787.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3787);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3787.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3791 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3791.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3787);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3791.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3789);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3790 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3791);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3790);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3793 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3793.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3794 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3793);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3794 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3794)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3792 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3793 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3792.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3792);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3792.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3796 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3796.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3792);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3796.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3794);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3795 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3796);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3795);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3797 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3797 == null){
                                    INR3797 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3797.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3797.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3797);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3799 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3799.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3800 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3799);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3800 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3800)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3798 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3799 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3798.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3798);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3798.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3802 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3802.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3798);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3802.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3800);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3801 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3802);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3801);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3803 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3803 == null){
                                    INR3803 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3803.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3803.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3803);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3805 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3805.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3806 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3805);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3806 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3806)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3804 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3805 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3804.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3804);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3804.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3808 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3808.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3804);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3808.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3806);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3807 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3808);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3807);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3810 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3810.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3811 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3810);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3811 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3811)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3809 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3810 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3809.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3809);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3809.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3813 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3813.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3809);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3813.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3811);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3812 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3813);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3812);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout3 if any typeMembers then List or Single
                //DBS01FS_Layout3 dBS01FS_Layout3 = mainReportData.getDBS01FS_Layout3();
                
                    private String dBS01FS_Layout3Method(DBS01FS_Layout3 dBS01FS_Layout3, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    DBS01FS_Layout3 field = dBS01FS_Layout3;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01OFC_Layout1 if any typeMembers then List or Single
                //DBS01OFC_Layout1 dBS01OFC_Layout1 = mainReportData.getDBS01OFC_Layout1();
                
                    private String dBS01OFC_Layout1Method(DBS01OFC_Layout1 dBS01OFC_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDate, String endDate, String periodDate)
                
                    {
            
                    DBS01OFC_Layout1 field = dBS01OFC_Layout1;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
    }


