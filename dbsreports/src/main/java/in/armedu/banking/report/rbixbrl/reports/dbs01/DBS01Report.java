package in.armedu.banking.report.rbixbrl.reports.dbs01;



import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;

import org.xbrl._2003.instance.Context;
import org.xbrl._2003.instance.ContextEntityType;
import org.xbrl._2003.instance.ContextEntityType.Identifier;
import org.xbrl._2006.xbrldi.ExplicitMember;
import org.xbrl._2006.xbrldi.TypedMember;
import org.xbrl._2003.instance.ContextPeriodType;
import org.xbrl._2003.instance.ObjectFactory;
import org.xbrl._2003.instance.Unit;
import org.xbrl._2003.instance.Xbrl;
import org.xbrl._2003.xlink.SimpleType;

// generic import classes
import java.lang.Boolean;
import java.io.StringWriter;
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import in.armedu.banking.report.rbixbrl.util.DefaultNamespacePrefixMapper;
import lombok.Setter;

// import model class
import in.armedu.banking.report.rbixbrl.model.dbs01.*;
import in.armedu.banking.report.rbixbrl.model.FieldDataValue;
// add xbrl data type and inerface
import in.armedu.banking.report.rbixbrl.reports.XBRLReportIntf;
import in.armedu.banking.report.rbixbrl.util.CommonFns;
import in.armedu.banking.report.rbixbrl.model.ReportData;

// add data type 

                        import org.xbrl._2003.instance.StringItemType;
                        
                        import org.xbrl._2003.instance.DateItemType;
                        
                        import org.rbi.in.xbrl.rbi_type.ReportingScale;
                        
                        import org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ReportStatusItemType;
                        
                        import org.xbrl.dtr.type.non_numeric.TextBlockItemType;
                        
                        import org.rbi.in.xbrl.rbi_type.NatureOfFilingEntity;
                        
                        import org.rbi.in.xbrl.rbi_type.MailAddress;
                        
                        import org.rbi.in.xbrl.rbi_type.TelephoneNumber10DigitString;
                        
                        import org.xbrl._2003.instance.MonetaryItemType;
                        
                        import org.rbi.in.xbrl.rbi_type.RemarkForFSI;
                        
                        import org.xbrl._2003.instance.IntegerItemType;
                        

@Setter
public class DBS01Report implements XBRLReportIntf {
       
    
    // logic for main method
    @Override
    public StringWriter generateReport(ReportData reportData){
        JAXBContext jc;
        Marshaller m;
        // TODO should be generated dynamically
        DBS01ReportData mainReportData = (DBS01ReportData) reportData;

        try {
            jc = JAXBContext.newInstance(ObjectFactory.class,
            org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ObjectFactory.class,
            org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory.class,
            org.rbi.in.xbrl.rbi_core.ObjectFactory.class,
            org.rbi.in.xbrl.rbi_par.ObjectFactory.class,
            org.rbi.in_rbi_rep_par.ObjectFactory.class,
            org.xbrl._2003.xlink.ObjectFactory.class,
            org.xbrl._2003.instance.ObjectFactory.class,
            org.xbrl._2006.xbrldi.ObjectFactory.class,
            org.xbrl._2003.linkbase.ObjectFactory.class,
            org.xbrl._2005.xbrldt.ObjectFactory.class,
            org.xbrl.dtr.type.non_numeric.ObjectFactory.class,
            org.xbrl.dtr.type.numeric.ObjectFactory.class);

            m = jc.createMarshaller();
            StringWriter writer = new StringWriter();
            Xbrl xbrl = new org.xbrl._2003.instance.ObjectFactory().createXbrl();
            
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            m.setProperty("com.sun.xml.bind.namespacePrefixMapper", new DefaultNamespacePrefixMapper());
            org.xbrl._2003.xlink.ObjectFactory xlinkObjectFactory = new org.xbrl._2003.xlink.ObjectFactory();
            SimpleType simpleType = xlinkObjectFactory.createSimpleType();
            simpleType.setType("simple");
            // TODO should be changed to specific xsd related to report dbs01
            simpleType.setHref("in-rbi-dbs01.xsd");
            xbrl.getSchemaRef().add(simpleType);
            xbrl.getOtherAttributes().put(new QName("xml:lang"), "en");
           
            
            // context identifiers and body elements
            List<String> contextIdentifiers = new ArrayList<String>();
            List<Context> contextElements = new ArrayList<Context>();
            List<Object> bodyElements = new ArrayList<Object>();
            List<String> unitIdentifiers = new ArrayList<String>();
            List<Unit> unitElements = new ArrayList<Unit>();
           
            //Unit unitObj = null;
            //DBS01ReportData dBS01ReportData = new DBS01ReportData();
            // print values           
    

            // TODO : create proper context with loop and element
            // initiatilize data class and allow to be set 
            //private DBS01ReportData dBS01ReportData = new DBS01ReportData();
            // retrieve bankcode, startdate, enddate and perioddate
            String bankCode = mainReportData.getBankCode();
            String startDate = mainReportData.getStartDate();
            String endDate = mainReportData.getEndDate();
            String periodDate = mainReportData.getPeriodDate();

             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                // method calling
                
                    filingInfo_Layout1Method(filingInfo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                // method calling
                
                    filingInfo_Layout2Method(filingInfo_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01AddInfo_Layout1 if any typeMembers then List or Single
                DBS01AddInfo_Layout1 dBS01AddInfo_Layout1 = mainReportData.getDBS01AddInfo_Layout1();
                // method calling
                
                    dBS01AddInfo_Layout1Method(dBS01AddInfo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout1 if any typeMembers then List or Single
                DBS01FS_Layout1 dBS01FS_Layout1 = mainReportData.getDBS01FS_Layout1();
                // method calling
                
                    dBS01FS_Layout1Method(dBS01FS_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout2 if any typeMembers then List or Single
                DBS01FS_Layout2 dBS01FS_Layout2 = mainReportData.getDBS01FS_Layout2();
                // method calling
                
                    dBS01FS_Layout2Method(dBS01FS_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout3 if any typeMembers then List or Single
                DBS01FS_Layout3 dBS01FS_Layout3 = mainReportData.getDBS01FS_Layout3();
                // method calling
                
                    dBS01FS_Layout3Method(dBS01FS_Layout3, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01OFC_Layout1 if any typeMembers then List or Single
                DBS01OFC_Layout1 dBS01OFC_Layout1 = mainReportData.getDBS01OFC_Layout1();
                // method calling
                
                    dBS01OFC_Layout1Method(dBS01OFC_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
            // end contexts loop
            // add contexts to xbrl
            contextElements.forEach(ce->{
                xbrl.getItemOrTupleOrContext().add(ce);
            });
            unitElements.forEach(u->{
                xbrl.getItemOrTupleOrContext().add(u);
            });
            
            bodyElements.forEach(be->{
                xbrl.getItemOrTupleOrContext().add(be);
            });
            m.marshal(xbrl, writer);
            System.out.println("");
            System.out.println(writer.toString());
            System.out.println("");
            return writer;
        } catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }






    // logic to generate method
             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                //FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                
                    private String filingInfo_Layout1Method(FilingInfo_Layout1 filingInfo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    FilingInfo_Layout1 field = filingInfo_Layout1;
                    
                    
                        
                        
                            
                            Unit pure1 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1 = createUnitIfNotExist(pure1, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReturnName
                            
                                Map zeroFilingInfo_Layout1ReturnNameMap5 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReturnNameValue3 = DBS01ReportUtil.retrieveValueForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap5);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReturnNameFieldDataValue4 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap5, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReturnNameValue3 = zeroFilingInfo_Layout1ReturnNameFieldDataValue4 == null ? "" : zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReturnNameFieldDataValue4 != null ) {
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReturnNameContext2 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReturnNameValue3 != null && !"".equals(zeroFilingInfo_Layout1ReturnNameValue3)) {
                                    
                                    addContext(FilingInfo_Layout1ReturnNameContext2, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType returnNameValue6 = new StringItemType();
                                    returnNameValue6.setContextRef(FilingInfo_Layout1ReturnNameContext2);
                                    
                                    returnNameValue6.setValue(zeroFilingInfo_Layout1ReturnNameValue3);        
                                    
                                    
                                    JAXBElement<StringItemType> returnNameElement7 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReturnName(returnNameValue6);
                                    bodyElements.add(returnNameElement7);
                                
                            }
                        
                            
                            Unit pure8 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure8 = createUnitIfNotExist(pure8, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReturnCode
                            
                                Map zeroFilingInfo_Layout1ReturnCodeMap12 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReturnCodeValue10 = DBS01ReportUtil.retrieveValueForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap12);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReturnCodeFieldDataValue11 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap12, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReturnCodeValue10 = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11 == null ? "" : zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReturnCodeFieldDataValue11 != null ) {
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReturnCodeContext9 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReturnCodeValue10 != null && !"".equals(zeroFilingInfo_Layout1ReturnCodeValue10)) {
                                    
                                    addContext(FilingInfo_Layout1ReturnCodeContext9, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType returnCodeValue13 = new StringItemType();
                                    returnCodeValue13.setContextRef(FilingInfo_Layout1ReturnCodeContext9);
                                    
                                    returnCodeValue13.setValue(zeroFilingInfo_Layout1ReturnCodeValue10);        
                                    
                                    
                                    JAXBElement<StringItemType> returnCodeElement14 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReturnCode(returnCodeValue13);
                                    bodyElements.add(returnCodeElement14);
                                
                            }
                        
                            
                            Unit pure15 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure15 = createUnitIfNotExist(pure15, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NameOfReportingInstitution
                            
                                Map zeroFilingInfo_Layout1NameOfReportingInstitutionMap19 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1NameOfReportingInstitutionValue17 = DBS01ReportUtil.retrieveValueForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap19);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap19, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1NameOfReportingInstitutionValue17 = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18 == null ? "" : zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getValue();
                                    
                                    if(zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18 != null ) {
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue18.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1NameOfReportingInstitutionContext16 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1NameOfReportingInstitutionValue17 != null && !"".equals(zeroFilingInfo_Layout1NameOfReportingInstitutionValue17)) {
                                    
                                    addContext(FilingInfo_Layout1NameOfReportingInstitutionContext16, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType nameOfReportingInstitutionValue20 = new StringItemType();
                                    nameOfReportingInstitutionValue20.setContextRef(FilingInfo_Layout1NameOfReportingInstitutionContext16);
                                    
                                    nameOfReportingInstitutionValue20.setValue(zeroFilingInfo_Layout1NameOfReportingInstitutionValue17);        
                                    
                                    
                                    JAXBElement<StringItemType> nameOfReportingInstitutionElement21 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNameOfReportingInstitution(nameOfReportingInstitutionValue20);
                                    bodyElements.add(nameOfReportingInstitutionElement21);
                                
                            }
                        
                            
                            Unit pure22 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure22 = createUnitIfNotExist(pure22, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - BankCode
                            
                                Map zeroFilingInfo_Layout1BankCodeMap26 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1BankCodeValue24 = DBS01ReportUtil.retrieveValueForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap26);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1BankCodeFieldDataValue25 = DBS01ReportUtil.retrieveFieldDataForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap26, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1BankCodeValue24 = zeroFilingInfo_Layout1BankCodeFieldDataValue25 == null ? "" : zeroFilingInfo_Layout1BankCodeFieldDataValue25.getValue();
                                    
                                    if(zeroFilingInfo_Layout1BankCodeFieldDataValue25 != null ) {
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue25.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1BankCodeFieldDataValue25.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue25.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1BankCodeFieldDataValue25.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue25.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1BankCodeFieldDataValue25.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1BankCodeContext23 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1BankCodeValue24 != null && !"".equals(zeroFilingInfo_Layout1BankCodeValue24)) {
                                    
                                    addContext(FilingInfo_Layout1BankCodeContext23, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType bankCodeValue27 = new StringItemType();
                                    bankCodeValue27.setContextRef(FilingInfo_Layout1BankCodeContext23);
                                    
                                    bankCodeValue27.setValue(zeroFilingInfo_Layout1BankCodeValue24);        
                                    
                                    
                                    JAXBElement<StringItemType> bankCodeElement28 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createBankCode(bankCodeValue27);
                                    bodyElements.add(bankCodeElement28);
                                
                            }
                        
                            
                            Unit pure29 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure29 = createUnitIfNotExist(pure29, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - InstitutionType
                            
                                Map zeroFilingInfo_Layout1InstitutionTypeMap33 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1InstitutionTypeValue31 = DBS01ReportUtil.retrieveValueForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap33);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap33, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1InstitutionTypeValue31 = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32 == null ? "" : zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getValue();
                                    
                                    if(zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32 != null ) {
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1InstitutionTypeContext30 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1InstitutionTypeValue31 != null && !"".equals(zeroFilingInfo_Layout1InstitutionTypeValue31)) {
                                    
                                    addContext(FilingInfo_Layout1InstitutionTypeContext30, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType institutionTypeValue34 = new StringItemType();
                                    institutionTypeValue34.setContextRef(FilingInfo_Layout1InstitutionTypeContext30);
                                    
                                    institutionTypeValue34.setValue(zeroFilingInfo_Layout1InstitutionTypeValue31);        
                                    
                                    
                                    JAXBElement<StringItemType> institutionTypeElement35 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInstitutionType(institutionTypeValue34);
                                    bodyElements.add(institutionTypeElement35);
                                
                            }
                        
                            
                            Unit pure36 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure36 = createUnitIfNotExist(pure36, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingFrequency
                            
                                Map zeroFilingInfo_Layout1ReportingFrequencyMap40 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingFrequencyValue38 = DBS01ReportUtil.retrieveValueForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap40);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap40, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportingFrequencyValue38 = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39 == null ? "" : zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingFrequencyContext37 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingFrequencyValue38 != null && !"".equals(zeroFilingInfo_Layout1ReportingFrequencyValue38)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingFrequencyContext37, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType reportingFrequencyValue41 = new StringItemType();
                                    reportingFrequencyValue41.setContextRef(FilingInfo_Layout1ReportingFrequencyContext37);
                                    
                                    reportingFrequencyValue41.setValue(zeroFilingInfo_Layout1ReportingFrequencyValue38);        
                                    
                                    
                                    JAXBElement<StringItemType> reportingFrequencyElement42 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingFrequency(reportingFrequencyValue41);
                                    bodyElements.add(reportingFrequencyElement42);
                                
                            }
                        
                            
                            Unit pure43 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure43 = createUnitIfNotExist(pure43, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingPeriodStartDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodStartDateMap47 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingPeriodStartDateValue45 = DBS01ReportUtil.retrieveValueForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap47);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap47, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1ReportingPeriodStartDateValue45 = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46 == null ? "" : zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1ReportingPeriodStartDateContext44 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1ReportingPeriodStartDateValue45 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodStartDateValue45)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingPeriodStartDateContext44, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType reportingPeriodStartDateValue48 = new DateItemType();
                                    reportingPeriodStartDateValue48.setContextRef(FilingInfo_Layout1ReportingPeriodStartDateContext44);
                                    
                                    reportingPeriodStartDateValue48.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodStartDateValue45));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodStartDateElement49 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingPeriodStartDate(reportingPeriodStartDateValue48);
                                    bodyElements.add(reportingPeriodStartDateElement49);
                                
                            }
                        
                            
                            Unit pure50 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure50 = createUnitIfNotExist(pure50, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingPeriodEndDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodEndDateMap54 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingPeriodEndDateValue52 = DBS01ReportUtil.retrieveValueForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap54);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap54, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1ReportingPeriodEndDateValue52 = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53 == null ? "" : zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1ReportingPeriodEndDateContext51 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1ReportingPeriodEndDateValue52 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodEndDateValue52)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingPeriodEndDateContext51, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType reportingPeriodEndDateValue55 = new DateItemType();
                                    reportingPeriodEndDateValue55.setContextRef(FilingInfo_Layout1ReportingPeriodEndDateContext51);
                                    
                                    reportingPeriodEndDateValue55.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodEndDateValue52));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodEndDateElement56 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingPeriodEndDate(reportingPeriodEndDateValue55);
                                    bodyElements.add(reportingPeriodEndDateElement56);
                                
                            }
                        
                            
                            Unit pure57 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure57 = createUnitIfNotExist(pure57, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingCurrency
                            
                                Map zeroFilingInfo_Layout1ReportingCurrencyMap61 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingCurrencyValue59 = DBS01ReportUtil.retrieveValueForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap61);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap61, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportingCurrencyValue59 = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60 == null ? "" : zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingCurrencyContext58 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingCurrencyValue59 != null && !"".equals(zeroFilingInfo_Layout1ReportingCurrencyValue59)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingCurrencyContext58, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType reportingCurrencyValue62 = new StringItemType();
                                    reportingCurrencyValue62.setContextRef(FilingInfo_Layout1ReportingCurrencyContext58);
                                    
                                    reportingCurrencyValue62.setValue(zeroFilingInfo_Layout1ReportingCurrencyValue59);        
                                    
                                    
                                    JAXBElement<StringItemType> reportingCurrencyElement63 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReportingCurrency(reportingCurrencyValue62);
                                    bodyElements.add(reportingCurrencyElement63);
                                
                            }
                        
                            
                            Unit pure64 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure64 = createUnitIfNotExist(pure64, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingScale
                            
                                Map zeroFilingInfo_Layout1ReportingScaleMap68 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingScaleValue66 = DBS01ReportUtil.retrieveValueForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap68);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingScaleFieldDataValue67 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap68, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportingScaleValue66 = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67 == null ? "" : zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingScaleFieldDataValue67 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingScaleContext65 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingScaleValue66 != null && !"".equals(zeroFilingInfo_Layout1ReportingScaleValue66)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingScaleContext65, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    ReportingScale reportingScaleValue69 = new ReportingScale();
                                    reportingScaleValue69.setContextRef(FilingInfo_Layout1ReportingScaleContext65);
                                    
                                    reportingScaleValue69.setValue(zeroFilingInfo_Layout1ReportingScaleValue66);        
                                    
                                    
                                    JAXBElement<ReportingScale> reportingScaleElement70 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReportingScale(reportingScaleValue69);
                                    bodyElements.add(reportingScaleElement70);
                                
                            }
                        
                            
                            Unit pure71 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure71 = createUnitIfNotExist(pure71, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - TaxonomyVersion
                            
                                Map zeroFilingInfo_Layout1TaxonomyVersionMap75 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1TaxonomyVersionValue73 = DBS01ReportUtil.retrieveValueForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap75);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74 = DBS01ReportUtil.retrieveFieldDataForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap75, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1TaxonomyVersionValue73 = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74 == null ? "" : zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getValue();
                                    
                                    if(zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74 != null ) {
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1TaxonomyVersionContext72 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1TaxonomyVersionValue73 != null && !"".equals(zeroFilingInfo_Layout1TaxonomyVersionValue73)) {
                                    
                                    addContext(FilingInfo_Layout1TaxonomyVersionContext72, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType taxonomyVersionValue76 = new StringItemType();
                                    taxonomyVersionValue76.setContextRef(FilingInfo_Layout1TaxonomyVersionContext72);
                                    
                                    taxonomyVersionValue76.setValue(zeroFilingInfo_Layout1TaxonomyVersionValue73);        
                                    
                                    
                                    JAXBElement<StringItemType> taxonomyVersionElement77 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createTaxonomyVersion(taxonomyVersionValue76);
                                    bodyElements.add(taxonomyVersionElement77);
                                
                            }
                        
                            
                            Unit pure78 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure78 = createUnitIfNotExist(pure78, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ToolName
                            
                                Map zeroFilingInfo_Layout1ToolNameMap82 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ToolNameValue80 = DBS01ReportUtil.retrieveValueForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap82);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ToolNameFieldDataValue81 = DBS01ReportUtil.retrieveFieldDataForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap82, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ToolNameValue80 = zeroFilingInfo_Layout1ToolNameFieldDataValue81 == null ? "" : zeroFilingInfo_Layout1ToolNameFieldDataValue81.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ToolNameFieldDataValue81 != null ) {
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue81.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ToolNameFieldDataValue81.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue81.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ToolNameFieldDataValue81.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue81.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ToolNameFieldDataValue81.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ToolNameContext79 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ToolNameValue80 != null && !"".equals(zeroFilingInfo_Layout1ToolNameValue80)) {
                                    
                                    addContext(FilingInfo_Layout1ToolNameContext79, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType toolNameValue83 = new StringItemType();
                                    toolNameValue83.setContextRef(FilingInfo_Layout1ToolNameContext79);
                                    
                                    toolNameValue83.setValue(zeroFilingInfo_Layout1ToolNameValue80);        
                                    
                                    
                                    JAXBElement<StringItemType> toolNameElement84 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createToolName(toolNameValue83);
                                    bodyElements.add(toolNameElement84);
                                
                            }
                        
                            
                            Unit pure85 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure85 = createUnitIfNotExist(pure85, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ToolVersion
                            
                                Map zeroFilingInfo_Layout1ToolVersionMap89 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ToolVersionValue87 = DBS01ReportUtil.retrieveValueForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap89);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ToolVersionFieldDataValue88 = DBS01ReportUtil.retrieveFieldDataForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap89, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ToolVersionValue87 = zeroFilingInfo_Layout1ToolVersionFieldDataValue88 == null ? "" : zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ToolVersionFieldDataValue88 != null ) {
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ToolVersionContext86 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ToolVersionValue87 != null && !"".equals(zeroFilingInfo_Layout1ToolVersionValue87)) {
                                    
                                    addContext(FilingInfo_Layout1ToolVersionContext86, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType toolVersionValue90 = new StringItemType();
                                    toolVersionValue90.setContextRef(FilingInfo_Layout1ToolVersionContext86);
                                    
                                    toolVersionValue90.setValue(zeroFilingInfo_Layout1ToolVersionValue87);        
                                    
                                    
                                    JAXBElement<StringItemType> toolVersionElement91 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createToolVersion(toolVersionValue90);
                                    bodyElements.add(toolVersionElement91);
                                
                            }
                        
                            
                            Unit pure92 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure92 = createUnitIfNotExist(pure92, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportStatus
                            
                                Map zeroFilingInfo_Layout1ReportStatusMap96 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportStatusValue94 = DBS01ReportUtil.retrieveValueForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap96);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportStatusFieldDataValue95 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap96, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportStatusValue94 = zeroFilingInfo_Layout1ReportStatusFieldDataValue95 == null ? "" : zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportStatusFieldDataValue95 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportStatusContext93 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportStatusValue94 != null && !"".equals(zeroFilingInfo_Layout1ReportStatusValue94)) {
                                    
                                    addContext(FilingInfo_Layout1ReportStatusContext93, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    ReportStatusItemType reportStatusValue97 = new ReportStatusItemType();
                                    reportStatusValue97.setContextRef(FilingInfo_Layout1ReportStatusContext93);
                                    
                                    reportStatusValue97.setValue(zeroFilingInfo_Layout1ReportStatusValue94);        
                                    
                                    
                                    JAXBElement<ReportStatusItemType> reportStatusElement98 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportStatus(reportStatusValue97);
                                    bodyElements.add(reportStatusElement98);
                                
                            }
                        
                            
                            Unit pure99 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure99 = createUnitIfNotExist(pure99, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - DateOfAudit
                            
                                Map zeroFilingInfo_Layout1DateOfAuditMap103 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1DateOfAuditValue101 = DBS01ReportUtil.retrieveValueForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap103);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1DateOfAuditFieldDataValue102 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap103, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1DateOfAuditValue101 = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102 == null ? "" : zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getValue();
                                    
                                    if(zeroFilingInfo_Layout1DateOfAuditFieldDataValue102 != null ) {
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1DateOfAuditContext100 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1DateOfAuditValue101 != null && !"".equals(zeroFilingInfo_Layout1DateOfAuditValue101)) {
                                    
                                    addContext(FilingInfo_Layout1DateOfAuditContext100, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType dateOfAuditValue104 = new DateItemType();
                                    dateOfAuditValue104.setContextRef(FilingInfo_Layout1DateOfAuditContext100);
                                    
                                    dateOfAuditValue104.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1DateOfAuditValue101));
                                    
                                    
                                    JAXBElement<DateItemType> dateOfAuditElement105 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createDateOfAudit(dateOfAuditValue104);
                                    bodyElements.add(dateOfAuditElement105);
                                
                            }
                        
                            
                            Unit pure106 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure106 = createUnitIfNotExist(pure106, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - GeneralRemarks
                            
                                Map zeroFilingInfo_Layout1GeneralRemarksMap110 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1GeneralRemarksValue108 = DBS01ReportUtil.retrieveValueForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap110);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap110, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1GeneralRemarksValue108 = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109 == null ? "" : zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getValue();
                                    
                                    if(zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109 != null ) {
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1GeneralRemarksContext107 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1GeneralRemarksValue108 != null && !"".equals(zeroFilingInfo_Layout1GeneralRemarksValue108)) {
                                    
                                    addContext(FilingInfo_Layout1GeneralRemarksContext107, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    TextBlockItemType generalRemarksValue111 = new TextBlockItemType();
                                    generalRemarksValue111.setContextRef(FilingInfo_Layout1GeneralRemarksContext107);
                                    
                                    generalRemarksValue111.setValue(zeroFilingInfo_Layout1GeneralRemarksValue108);        
                                    
                                    
                                    JAXBElement<TextBlockItemType> generalRemarksElement112 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createGeneralRemarks(generalRemarksValue111);
                                    bodyElements.add(generalRemarksElement112);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                //FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                
                    private String filingInfo_Layout2Method(FilingInfo_Layout2 filingInfo_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    FilingInfo_Layout2 field = filingInfo_Layout2;
                    
                    
                        
                        
                            
                            Unit pure113 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure113 = createUnitIfNotExist(pure113, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NatureOfFilingEntity
                            
                                Map zeroFilingInfo_Layout2NatureOfFilingEntityMap117 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout2NatureOfFilingEntityValue115 = DBS01ReportUtil.retrieveValueForElement(field.getNatureOfFilingEntity(), zeroFilingInfo_Layout2NatureOfFilingEntityMap117);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNatureOfFilingEntity(), zeroFilingInfo_Layout2NatureOfFilingEntityMap117, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout2NatureOfFilingEntityValue115 = zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116 == null ? "" : zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getValue();
                                    
                                    if(zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116 != null ) {
                                        if(!zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getStartDateValue();
                                        if(!zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getEndDateValue();
                                        if(!zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout2NatureOfFilingEntityFieldDataValue116.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout2NatureOfFilingEntityContext114 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout2NatureOfFilingEntityValue115 != null && !"".equals(zeroFilingInfo_Layout2NatureOfFilingEntityValue115)) {
                                    
                                    addContext(FilingInfo_Layout2NatureOfFilingEntityContext114, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    NatureOfFilingEntity natureOfFilingEntityValue118 = new NatureOfFilingEntity();
                                    natureOfFilingEntityValue118.setContextRef(FilingInfo_Layout2NatureOfFilingEntityContext114);
                                    
                                    natureOfFilingEntityValue118.setValue(zeroFilingInfo_Layout2NatureOfFilingEntityValue115);        
                                    
                                    
                                    JAXBElement<NatureOfFilingEntity> natureOfFilingEntityElement119 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNatureOfFilingEntity(natureOfFilingEntityValue118);
                                    bodyElements.add(natureOfFilingEntityElement119);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01AddInfo_Layout1 if any typeMembers then List or Single
                //DBS01AddInfo_Layout1 dBS01AddInfo_Layout1 = mainReportData.getDBS01AddInfo_Layout1();
                
                    private String dBS01AddInfo_Layout1Method(DBS01AddInfo_Layout1 dBS01AddInfo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBS01AddInfo_Layout1 field = dBS01AddInfo_Layout1;
                    
                    
                        
                        
                            
                            Unit pure120 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure120 = createUnitIfNotExist(pure120, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - MakerName
                            
                                Map zeroDBS01AddInfo_Layout1MakerNameMap124 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1MakerNameValue122 = DBS01ReportUtil.retrieveValueForElement(field.getMakerName(), zeroDBS01AddInfo_Layout1MakerNameMap124);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123 = DBS01ReportUtil.retrieveFieldDataForElement(field.getMakerName(), zeroDBS01AddInfo_Layout1MakerNameMap124, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1MakerNameValue122 = zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123 == null ? "" : zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1MakerNameFieldDataValue123.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1MakerNameContext121 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1MakerNameValue122 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerNameValue122)) {
                                    
                                    addContext(DBS01AddInfo_Layout1MakerNameContext121, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType makerNameValue125 = new StringItemType();
                                    makerNameValue125.setContextRef(DBS01AddInfo_Layout1MakerNameContext121);
                                    
                                    makerNameValue125.setValue(zeroDBS01AddInfo_Layout1MakerNameValue122);        
                                    
                                    
                                    JAXBElement<StringItemType> makerNameElement126 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createMakerName(makerNameValue125);
                                    bodyElements.add(makerNameElement126);
                                
                            }
                        
                            
                            Unit pure127 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure127 = createUnitIfNotExist(pure127, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - MakerDesignation
                            
                                Map zeroDBS01AddInfo_Layout1MakerDesignationMap131 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1MakerDesignationValue129 = DBS01ReportUtil.retrieveValueForElement(field.getMakerDesignation(), zeroDBS01AddInfo_Layout1MakerDesignationMap131);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130 = DBS01ReportUtil.retrieveFieldDataForElement(field.getMakerDesignation(), zeroDBS01AddInfo_Layout1MakerDesignationMap131, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1MakerDesignationValue129 = zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130 == null ? "" : zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1MakerDesignationFieldDataValue130.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1MakerDesignationContext128 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1MakerDesignationValue129 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerDesignationValue129)) {
                                    
                                    addContext(DBS01AddInfo_Layout1MakerDesignationContext128, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType makerDesignationValue132 = new StringItemType();
                                    makerDesignationValue132.setContextRef(DBS01AddInfo_Layout1MakerDesignationContext128);
                                    
                                    makerDesignationValue132.setValue(zeroDBS01AddInfo_Layout1MakerDesignationValue129);        
                                    
                                    
                                    JAXBElement<StringItemType> makerDesignationElement133 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createMakerDesignation(makerDesignationValue132);
                                    bodyElements.add(makerDesignationElement133);
                                
                            }
                        
                            
                            Unit pure134 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure134 = createUnitIfNotExist(pure134, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - MakerEmail
                            
                                Map zeroDBS01AddInfo_Layout1MakerEmailMap138 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1MakerEmailValue136 = DBS01ReportUtil.retrieveValueForElement(field.getMakerEmail(), zeroDBS01AddInfo_Layout1MakerEmailMap138);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137 = DBS01ReportUtil.retrieveFieldDataForElement(field.getMakerEmail(), zeroDBS01AddInfo_Layout1MakerEmailMap138, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1MakerEmailValue136 = zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137 == null ? "" : zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1MakerEmailFieldDataValue137.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1MakerEmailContext135 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1MakerEmailValue136 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerEmailValue136)) {
                                    
                                    addContext(DBS01AddInfo_Layout1MakerEmailContext135, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MailAddress makerEmailValue139 = new MailAddress();
                                    makerEmailValue139.setContextRef(DBS01AddInfo_Layout1MakerEmailContext135);
                                    
                                    makerEmailValue139.setValue(zeroDBS01AddInfo_Layout1MakerEmailValue136);        
                                    
                                    
                                    JAXBElement<MailAddress> makerEmailElement140 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createMakerEmail(makerEmailValue139);
                                    bodyElements.add(makerEmailElement140);
                                
                            }
                        
                            
                            Unit pure141 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure141 = createUnitIfNotExist(pure141, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - MakerLandline
                            
                                Map zeroDBS01AddInfo_Layout1MakerLandlineMap145 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1MakerLandlineValue143 = DBS01ReportUtil.retrieveValueForElement(field.getMakerLandline(), zeroDBS01AddInfo_Layout1MakerLandlineMap145);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144 = DBS01ReportUtil.retrieveFieldDataForElement(field.getMakerLandline(), zeroDBS01AddInfo_Layout1MakerLandlineMap145, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1MakerLandlineValue143 = zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144 == null ? "" : zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1MakerLandlineFieldDataValue144.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1MakerLandlineContext142 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1MakerLandlineValue143 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerLandlineValue143)) {
                                    
                                    addContext(DBS01AddInfo_Layout1MakerLandlineContext142, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType makerLandlineValue146 = new StringItemType();
                                    makerLandlineValue146.setContextRef(DBS01AddInfo_Layout1MakerLandlineContext142);
                                    
                                    makerLandlineValue146.setValue(zeroDBS01AddInfo_Layout1MakerLandlineValue143);        
                                    
                                    
                                    JAXBElement<StringItemType> makerLandlineElement147 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createMakerLandline(makerLandlineValue146);
                                    bodyElements.add(makerLandlineElement147);
                                
                            }
                        
                            
                            Unit pure148 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure148 = createUnitIfNotExist(pure148, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - MakerMobile
                            
                                Map zeroDBS01AddInfo_Layout1MakerMobileMap152 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1MakerMobileValue150 = DBS01ReportUtil.retrieveValueForElement(field.getMakerMobile(), zeroDBS01AddInfo_Layout1MakerMobileMap152);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151 = DBS01ReportUtil.retrieveFieldDataForElement(field.getMakerMobile(), zeroDBS01AddInfo_Layout1MakerMobileMap152, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1MakerMobileValue150 = zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151 == null ? "" : zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1MakerMobileFieldDataValue151.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1MakerMobileContext149 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1MakerMobileValue150 != null && !"".equals(zeroDBS01AddInfo_Layout1MakerMobileValue150)) {
                                    
                                    addContext(DBS01AddInfo_Layout1MakerMobileContext149, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    TelephoneNumber10DigitString makerMobileValue153 = new TelephoneNumber10DigitString();
                                    makerMobileValue153.setContextRef(DBS01AddInfo_Layout1MakerMobileContext149);
                                    
                                    makerMobileValue153.setValue(zeroDBS01AddInfo_Layout1MakerMobileValue150);        
                                    
                                    
                                    JAXBElement<TelephoneNumber10DigitString> makerMobileElement154 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createMakerMobile(makerMobileValue153);
                                    bodyElements.add(makerMobileElement154);
                                
                            }
                        
                            
                            Unit pure155 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure155 = createUnitIfNotExist(pure155, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - CheckerName
                            
                                Map zeroDBS01AddInfo_Layout1CheckerNameMap159 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1CheckerNameValue157 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerName(), zeroDBS01AddInfo_Layout1CheckerNameMap159);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCheckerName(), zeroDBS01AddInfo_Layout1CheckerNameMap159, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1CheckerNameValue157 = zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158 == null ? "" : zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1CheckerNameFieldDataValue158.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1CheckerNameContext156 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1CheckerNameValue157 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerNameValue157)) {
                                    
                                    addContext(DBS01AddInfo_Layout1CheckerNameContext156, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType checkerNameValue160 = new StringItemType();
                                    checkerNameValue160.setContextRef(DBS01AddInfo_Layout1CheckerNameContext156);
                                    
                                    checkerNameValue160.setValue(zeroDBS01AddInfo_Layout1CheckerNameValue157);        
                                    
                                    
                                    JAXBElement<StringItemType> checkerNameElement161 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCheckerName(checkerNameValue160);
                                    bodyElements.add(checkerNameElement161);
                                
                            }
                        
                            
                            Unit pure162 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure162 = createUnitIfNotExist(pure162, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - CheckerDesignation
                            
                                Map zeroDBS01AddInfo_Layout1CheckerDesignationMap166 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1CheckerDesignationValue164 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerDesignation(), zeroDBS01AddInfo_Layout1CheckerDesignationMap166);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCheckerDesignation(), zeroDBS01AddInfo_Layout1CheckerDesignationMap166, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1CheckerDesignationValue164 = zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165 == null ? "" : zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1CheckerDesignationFieldDataValue165.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1CheckerDesignationContext163 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1CheckerDesignationValue164 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerDesignationValue164)) {
                                    
                                    addContext(DBS01AddInfo_Layout1CheckerDesignationContext163, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType checkerDesignationValue167 = new StringItemType();
                                    checkerDesignationValue167.setContextRef(DBS01AddInfo_Layout1CheckerDesignationContext163);
                                    
                                    checkerDesignationValue167.setValue(zeroDBS01AddInfo_Layout1CheckerDesignationValue164);        
                                    
                                    
                                    JAXBElement<StringItemType> checkerDesignationElement168 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCheckerDesignation(checkerDesignationValue167);
                                    bodyElements.add(checkerDesignationElement168);
                                
                            }
                        
                            
                            Unit pure169 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure169 = createUnitIfNotExist(pure169, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - CheckerEmail
                            
                                Map zeroDBS01AddInfo_Layout1CheckerEmailMap173 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1CheckerEmailValue171 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerEmail(), zeroDBS01AddInfo_Layout1CheckerEmailMap173);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCheckerEmail(), zeroDBS01AddInfo_Layout1CheckerEmailMap173, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1CheckerEmailValue171 = zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172 == null ? "" : zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1CheckerEmailFieldDataValue172.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1CheckerEmailContext170 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1CheckerEmailValue171 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerEmailValue171)) {
                                    
                                    addContext(DBS01AddInfo_Layout1CheckerEmailContext170, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MailAddress checkerEmailValue174 = new MailAddress();
                                    checkerEmailValue174.setContextRef(DBS01AddInfo_Layout1CheckerEmailContext170);
                                    
                                    checkerEmailValue174.setValue(zeroDBS01AddInfo_Layout1CheckerEmailValue171);        
                                    
                                    
                                    JAXBElement<MailAddress> checkerEmailElement175 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCheckerEmail(checkerEmailValue174);
                                    bodyElements.add(checkerEmailElement175);
                                
                            }
                        
                            
                            Unit pure176 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure176 = createUnitIfNotExist(pure176, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - CheckerLandline
                            
                                Map zeroDBS01AddInfo_Layout1CheckerLandlineMap180 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1CheckerLandlineValue178 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerLandline(), zeroDBS01AddInfo_Layout1CheckerLandlineMap180);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCheckerLandline(), zeroDBS01AddInfo_Layout1CheckerLandlineMap180, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1CheckerLandlineValue178 = zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179 == null ? "" : zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1CheckerLandlineFieldDataValue179.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1CheckerLandlineContext177 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1CheckerLandlineValue178 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckerLandlineValue178)) {
                                    
                                    addContext(DBS01AddInfo_Layout1CheckerLandlineContext177, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType checkerLandlineValue181 = new StringItemType();
                                    checkerLandlineValue181.setContextRef(DBS01AddInfo_Layout1CheckerLandlineContext177);
                                    
                                    checkerLandlineValue181.setValue(zeroDBS01AddInfo_Layout1CheckerLandlineValue178);        
                                    
                                    
                                    JAXBElement<StringItemType> checkerLandlineElement182 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCheckerLandline(checkerLandlineValue181);
                                    bodyElements.add(checkerLandlineElement182);
                                
                            }
                        
                            
                            Unit pure183 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure183 = createUnitIfNotExist(pure183, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - CheckMobile
                            
                                Map zeroDBS01AddInfo_Layout1CheckMobileMap187 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBS01AddInfo_Layout1CheckMobileValue185 = DBS01ReportUtil.retrieveValueForElement(field.getCheckMobile(), zeroDBS01AddInfo_Layout1CheckMobileMap187);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCheckMobile(), zeroDBS01AddInfo_Layout1CheckMobileMap187, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01AddInfo_Layout1CheckMobileValue185 = zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186 == null ? "" : zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getValue();
                                    
                                    if(zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186 != null ) {
                                        if(!zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getStartDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getEndDateValue();
                                        if(!zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01AddInfo_Layout1CheckMobileFieldDataValue186.getInstantDateValue();
                                    }

                                    
                                        Context DBS01AddInfo_Layout1CheckMobileContext184 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBS01AddInfo_Layout1CheckMobileValue185 != null && !"".equals(zeroDBS01AddInfo_Layout1CheckMobileValue185)) {
                                    
                                    addContext(DBS01AddInfo_Layout1CheckMobileContext184, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    TelephoneNumber10DigitString checkMobileValue188 = new TelephoneNumber10DigitString();
                                    checkMobileValue188.setContextRef(DBS01AddInfo_Layout1CheckMobileContext184);
                                    
                                    checkMobileValue188.setValue(zeroDBS01AddInfo_Layout1CheckMobileValue185);        
                                    
                                    
                                    JAXBElement<TelephoneNumber10DigitString> checkMobileElement189 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCheckMobile(checkMobileValue188);
                                    bodyElements.add(checkMobileElement189);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout1 if any typeMembers then List or Single
                //DBS01FS_Layout1 dBS01FS_Layout1 = mainReportData.getDBS01FS_Layout1();
                
                    private String dBS01FS_Layout1Method(DBS01FS_Layout1 dBS01FS_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBS01FS_Layout1 field = dBS01FS_Layout1;
                    
                    
                        
                        
                            
                                
                                Unit INR190 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR190 = createUnitIfNotExist(INR190, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1InterestIncomeReportedForFSIMap194 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1InterestIncomeReportedForFSIMap194.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1InterestIncomeReportedForFSIValue192 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1InterestIncomeReportedForFSIMap194);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1InterestIncomeReportedForFSIMap194, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1InterestIncomeReportedForFSIValue192 = zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193 == null ? "" : zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getValue();
                                    if(zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193 != null ) {
                                        if(!zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1InterestIncomeReportedForFSIFieldDataValue193.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1InterestIncomeReportedForFSIContext191 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1InterestIncomeReportedForFSIMap194 );
                                            
                                
                                if(zeroDBS01FS_Layout1InterestIncomeReportedForFSIValue192 != null && !"".equals(zeroDBS01FS_Layout1InterestIncomeReportedForFSIValue192)) {
                                    
                                    addContext(DBS01FS_Layout1InterestIncomeReportedForFSIContext191, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType interestIncomeReportedForFSIValue195 = new MonetaryItemType();
                                    interestIncomeReportedForFSIValue195.setContextRef(DBS01FS_Layout1InterestIncomeReportedForFSIContext191);
                                    
                                    interestIncomeReportedForFSIValue195.setUnitRef(INR190);
                                    interestIncomeReportedForFSIValue195.setDecimals("INF");
                                    interestIncomeReportedForFSIValue195.setValue(new BigDecimal(zeroDBS01FS_Layout1InterestIncomeReportedForFSIValue192));
                                    
                                    
                                    JAXBElement<MonetaryItemType> interestIncomeReportedForFSIElement196 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInterestIncomeReportedForFSI(interestIncomeReportedForFSIValue195);
                                    bodyElements.add(interestIncomeReportedForFSIElement196);
                                
                            }
                        
                            
                            Unit pure197 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure197 = createUnitIfNotExist(pure197, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIMap201 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIMap201.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIValue199 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIMap201);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIMap201, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIValue199 = zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200 == null ? "" : zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIFieldDataValue200.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIContext198 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIMap201 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIValue199 != null && !"".equals(zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIValue199)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIContext198, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInterestIncomeReportedForFSIValue202 = new RemarkForFSI();
                                    remarkForInterestIncomeReportedForFSIValue202.setContextRef(DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIContext198);
                                    
                                    remarkForInterestIncomeReportedForFSIValue202.setValue(zeroDBS01FS_Layout1RemarkForInterestIncomeReportedForFSIValue199);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInterestIncomeReportedForFSIElement203 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInterestIncomeReportedForFSI(remarkForInterestIncomeReportedForFSIValue202);
                                    bodyElements.add(remarkForInterestIncomeReportedForFSIElement203);
                                
                            }
                        
                            
                                
                                Unit INR204 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR204 = createUnitIfNotExist(INR204, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GrossInterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIMap208 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIMap208.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIValue206 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIMap208);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGrossInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIMap208, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIValue206 = zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207 == null ? "" : zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getValue();
                                    if(zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207 != null ) {
                                        if(!zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIFieldDataValue207.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1GrossInterestIncomeReportedForFSIContext205 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIMap208 );
                                            
                                
                                if(zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIValue206 != null && !"".equals(zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIValue206)) {
                                    
                                    addContext(DBS01FS_Layout1GrossInterestIncomeReportedForFSIContext205, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType grossInterestIncomeReportedForFSIValue209 = new MonetaryItemType();
                                    grossInterestIncomeReportedForFSIValue209.setContextRef(DBS01FS_Layout1GrossInterestIncomeReportedForFSIContext205);
                                    
                                    grossInterestIncomeReportedForFSIValue209.setUnitRef(INR204);
                                    grossInterestIncomeReportedForFSIValue209.setDecimals("INF");
                                    grossInterestIncomeReportedForFSIValue209.setValue(new BigDecimal(zeroDBS01FS_Layout1GrossInterestIncomeReportedForFSIValue206));
                                    
                                    
                                    JAXBElement<MonetaryItemType> grossInterestIncomeReportedForFSIElement210 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGrossInterestIncomeReportedForFSI(grossInterestIncomeReportedForFSIValue209);
                                    bodyElements.add(grossInterestIncomeReportedForFSIElement210);
                                
                            }
                        
                            
                            Unit pure211 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure211 = createUnitIfNotExist(pure211, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGrossInterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIMap215 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIMap215.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIValue213 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIMap215);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIMap215, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIValue213 = zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214 == null ? "" : zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIFieldDataValue214.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIContext212 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIMap215 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIValue213 != null && !"".equals(zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIValue213)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIContext212, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGrossInterestIncomeReportedForFSIValue216 = new RemarkForFSI();
                                    remarkForGrossInterestIncomeReportedForFSIValue216.setContextRef(DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIContext212);
                                    
                                    remarkForGrossInterestIncomeReportedForFSIValue216.setValue(zeroDBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIValue213);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGrossInterestIncomeReportedForFSIElement217 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGrossInterestIncomeReportedForFSI(remarkForGrossInterestIncomeReportedForFSIValue216);
                                    bodyElements.add(remarkForGrossInterestIncomeReportedForFSIElement217);
                                
                            }
                        
                            
                                
                                Unit INR218 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR218 = createUnitIfNotExist(INR218, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap222 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap222.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue220 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap222);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221 = DBS01ReportUtil.retrieveFieldDataForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap222, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue220 = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221 == null ? "" : zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getValue();
                                    if(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221 != null ) {
                                        if(!zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue221.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext219 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap222 );
                                            
                                
                                if(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue220 != null && !"".equals(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue220)) {
                                    
                                    addContext(DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext219, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue223 = new MonetaryItemType();
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue223.setContextRef(DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext219);
                                    
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue223.setUnitRef(INR218);
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue223.setDecimals("INF");
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue223.setValue(new BigDecimal(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue220));
                                    
                                    
                                    JAXBElement<MonetaryItemType> provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIElement224 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue223);
                                    bodyElements.add(provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIElement224);
                                
                            }
                        
                            
                                
                                Unit INR225 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR225 = createUnitIfNotExist(INR225, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap229 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap229.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue227 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap229);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228 = DBS01ReportUtil.retrieveFieldDataForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap229, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue227 = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228 == null ? "" : zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getValue();
                                    if(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228 != null ) {
                                        if(!zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue228.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext226 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap229 );
                                            
                                
                                if(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue227 != null && !"".equals(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue227)) {
                                    
                                    addContext(DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext226, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue230 = new MonetaryItemType();
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue230.setContextRef(DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext226);
                                    
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue230.setUnitRef(INR225);
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue230.setDecimals("INF");
                                    provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue230.setValue(new BigDecimal(zeroDBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue227));
                                    
                                    
                                    JAXBElement<MonetaryItemType> provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIElement231 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue230);
                                    bodyElements.add(provisionsForAccruedInterestOnNonperformingAssetsReportedForFSIElement231);
                                
                            }
                        
                            
                            Unit pure232 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure232 = createUnitIfNotExist(pure232, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap236 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap236.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue234 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap236);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap236, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue234 = zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235 == null ? "" : zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIFieldDataValue235.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext233 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIMap236 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue234 != null && !"".equals(zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue234)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext233, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue237 = new RemarkForFSI();
                                    remarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue237.setContextRef(DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIContext233);
                                    
                                    remarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue237.setValue(zeroDBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue234);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIElement238 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(remarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIValue237);
                                    bodyElements.add(remarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIElement238);
                                
                            }
                        
                            
                                
                                Unit INR239 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR239 = createUnitIfNotExist(INR239, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InterestExpenseReportedForFSI
                            
                                Map zeroDBS01FS_Layout1InterestExpenseReportedForFSIMap243 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1InterestExpenseReportedForFSIMap243.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1InterestExpenseReportedForFSIValue241 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), zeroDBS01FS_Layout1InterestExpenseReportedForFSIMap243);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInterestExpenseReportedForFSI(), zeroDBS01FS_Layout1InterestExpenseReportedForFSIMap243, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1InterestExpenseReportedForFSIValue241 = zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242 == null ? "" : zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getValue();
                                    if(zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242 != null ) {
                                        if(!zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1InterestExpenseReportedForFSIFieldDataValue242.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1InterestExpenseReportedForFSIContext240 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1InterestExpenseReportedForFSIMap243 );
                                            
                                
                                if(zeroDBS01FS_Layout1InterestExpenseReportedForFSIValue241 != null && !"".equals(zeroDBS01FS_Layout1InterestExpenseReportedForFSIValue241)) {
                                    
                                    addContext(DBS01FS_Layout1InterestExpenseReportedForFSIContext240, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType interestExpenseReportedForFSIValue244 = new MonetaryItemType();
                                    interestExpenseReportedForFSIValue244.setContextRef(DBS01FS_Layout1InterestExpenseReportedForFSIContext240);
                                    
                                    interestExpenseReportedForFSIValue244.setUnitRef(INR239);
                                    interestExpenseReportedForFSIValue244.setDecimals("INF");
                                    interestExpenseReportedForFSIValue244.setValue(new BigDecimal(zeroDBS01FS_Layout1InterestExpenseReportedForFSIValue241));
                                    
                                    
                                    JAXBElement<MonetaryItemType> interestExpenseReportedForFSIElement245 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInterestExpenseReportedForFSI(interestExpenseReportedForFSIValue244);
                                    bodyElements.add(interestExpenseReportedForFSIElement245);
                                
                            }
                        
                            
                            Unit pure246 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure246 = createUnitIfNotExist(pure246, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInterestExpenseReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIMap250 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIMap250.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIValue248 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIMap250);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInterestExpenseReportedForFSI(), zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIMap250, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIValue248 = zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249 == null ? "" : zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIFieldDataValue249.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIContext247 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIMap250 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIValue248 != null && !"".equals(zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIValue248)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIContext247, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInterestExpenseReportedForFSIValue251 = new RemarkForFSI();
                                    remarkForInterestExpenseReportedForFSIValue251.setContextRef(DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIContext247);
                                    
                                    remarkForInterestExpenseReportedForFSIValue251.setValue(zeroDBS01FS_Layout1RemarkForInterestExpenseReportedForFSIValue248);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInterestExpenseReportedForFSIElement252 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInterestExpenseReportedForFSI(remarkForInterestExpenseReportedForFSIValue251);
                                    bodyElements.add(remarkForInterestExpenseReportedForFSIElement252);
                                
                            }
                        
                            
                                
                                Unit INR253 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR253 = createUnitIfNotExist(INR253, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetInterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIMap257 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIMap257.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIValue255 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIMap257);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIMap257, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIValue255 = zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256 == null ? "" : zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getValue();
                                    if(zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256 != null ) {
                                        if(!zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIFieldDataValue256.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1NetInterestIncomeReportedForFSIContext254 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIMap257 );
                                            
                                
                                if(zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIValue255 != null && !"".equals(zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIValue255)) {
                                    
                                    addContext(DBS01FS_Layout1NetInterestIncomeReportedForFSIContext254, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netInterestIncomeReportedForFSIValue258 = new MonetaryItemType();
                                    netInterestIncomeReportedForFSIValue258.setContextRef(DBS01FS_Layout1NetInterestIncomeReportedForFSIContext254);
                                    
                                    netInterestIncomeReportedForFSIValue258.setUnitRef(INR253);
                                    netInterestIncomeReportedForFSIValue258.setDecimals("INF");
                                    netInterestIncomeReportedForFSIValue258.setValue(new BigDecimal(zeroDBS01FS_Layout1NetInterestIncomeReportedForFSIValue255));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netInterestIncomeReportedForFSIElement259 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetInterestIncomeReportedForFSI(netInterestIncomeReportedForFSIValue258);
                                    bodyElements.add(netInterestIncomeReportedForFSIElement259);
                                
                            }
                        
                            
                            Unit pure260 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure260 = createUnitIfNotExist(pure260, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetInterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIMap264 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIMap264.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIValue262 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIMap264);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIMap264, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIValue262 = zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263 == null ? "" : zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIFieldDataValue263.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIContext261 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIMap264 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIValue262 != null && !"".equals(zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIValue262)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIContext261, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetInterestIncomeReportedForFSIValue265 = new RemarkForFSI();
                                    remarkForNetInterestIncomeReportedForFSIValue265.setContextRef(DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIContext261);
                                    
                                    remarkForNetInterestIncomeReportedForFSIValue265.setValue(zeroDBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIValue262);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetInterestIncomeReportedForFSIElement266 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetInterestIncomeReportedForFSI(remarkForNetInterestIncomeReportedForFSIValue265);
                                    bodyElements.add(remarkForNetInterestIncomeReportedForFSIElement266);
                                
                            }
                        
                            
                                
                                Unit INR267 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR267 = createUnitIfNotExist(INR267, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NoninterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIMap271 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIMap271.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIValue269 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIMap271);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNoninterestIncomeReportedForFSI(), zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIMap271, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIValue269 = zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270 == null ? "" : zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getValue();
                                    if(zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270 != null ) {
                                        if(!zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIFieldDataValue270.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1NoninterestIncomeReportedForFSIContext268 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIMap271 );
                                            
                                
                                if(zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIValue269 != null && !"".equals(zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIValue269)) {
                                    
                                    addContext(DBS01FS_Layout1NoninterestIncomeReportedForFSIContext268, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType noninterestIncomeReportedForFSIValue272 = new MonetaryItemType();
                                    noninterestIncomeReportedForFSIValue272.setContextRef(DBS01FS_Layout1NoninterestIncomeReportedForFSIContext268);
                                    
                                    noninterestIncomeReportedForFSIValue272.setUnitRef(INR267);
                                    noninterestIncomeReportedForFSIValue272.setDecimals("INF");
                                    noninterestIncomeReportedForFSIValue272.setValue(new BigDecimal(zeroDBS01FS_Layout1NoninterestIncomeReportedForFSIValue269));
                                    
                                    
                                    JAXBElement<MonetaryItemType> noninterestIncomeReportedForFSIElement273 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNoninterestIncomeReportedForFSI(noninterestIncomeReportedForFSIValue272);
                                    bodyElements.add(noninterestIncomeReportedForFSIElement273);
                                
                            }
                        
                            
                            Unit pure274 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure274 = createUnitIfNotExist(pure274, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNoninterestIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIMap278 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIMap278.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIValue276 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIMap278);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIMap278, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIValue276 = zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277 == null ? "" : zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIFieldDataValue277.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIContext275 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIMap278 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIValue276 != null && !"".equals(zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIValue276)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIContext275, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNoninterestIncomeReportedForFSIValue279 = new RemarkForFSI();
                                    remarkForNoninterestIncomeReportedForFSIValue279.setContextRef(DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIContext275);
                                    
                                    remarkForNoninterestIncomeReportedForFSIValue279.setValue(zeroDBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIValue276);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNoninterestIncomeReportedForFSIElement280 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNoninterestIncomeReportedForFSI(remarkForNoninterestIncomeReportedForFSIValue279);
                                    bodyElements.add(remarkForNoninterestIncomeReportedForFSIElement280);
                                
                            }
                        
                            
                                
                                Unit INR281 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR281 = createUnitIfNotExist(INR281, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FeesAndCommissionsReceivableReportedForFSI
                            
                                Map zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap285 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap285.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue283 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap285);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap285, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue283 = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284 == null ? "" : zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getValue();
                                    if(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284 != null ) {
                                        if(!zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue284.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIContext282 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap285 );
                                            
                                
                                if(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue283 != null && !"".equals(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue283)) {
                                    
                                    addContext(DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIContext282, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType feesAndCommissionsReceivableReportedForFSIValue286 = new MonetaryItemType();
                                    feesAndCommissionsReceivableReportedForFSIValue286.setContextRef(DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIContext282);
                                    
                                    feesAndCommissionsReceivableReportedForFSIValue286.setUnitRef(INR281);
                                    feesAndCommissionsReceivableReportedForFSIValue286.setDecimals("INF");
                                    feesAndCommissionsReceivableReportedForFSIValue286.setValue(new BigDecimal(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue283));
                                    
                                    
                                    JAXBElement<MonetaryItemType> feesAndCommissionsReceivableReportedForFSIElement287 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFeesAndCommissionsReceivableReportedForFSI(feesAndCommissionsReceivableReportedForFSIValue286);
                                    bodyElements.add(feesAndCommissionsReceivableReportedForFSIElement287);
                                
                            }
                        
                            
                                
                                Unit INR288 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR288 = createUnitIfNotExist(INR288, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FeesAndCommissionsReceivableReportedForFSI
                            
                                Map zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap292 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap292.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue290 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap292);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap292, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue290 = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291 == null ? "" : zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getValue();
                                    if(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291 != null ) {
                                        if(!zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIFieldDataValue291.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIContext289 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIMap292 );
                                            
                                
                                if(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue290 != null && !"".equals(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue290)) {
                                    
                                    addContext(DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIContext289, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType feesAndCommissionsReceivableReportedForFSIValue293 = new MonetaryItemType();
                                    feesAndCommissionsReceivableReportedForFSIValue293.setContextRef(DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIContext289);
                                    
                                    feesAndCommissionsReceivableReportedForFSIValue293.setUnitRef(INR288);
                                    feesAndCommissionsReceivableReportedForFSIValue293.setDecimals("INF");
                                    feesAndCommissionsReceivableReportedForFSIValue293.setValue(new BigDecimal(zeroDBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIValue290));
                                    
                                    
                                    JAXBElement<MonetaryItemType> feesAndCommissionsReceivableReportedForFSIElement294 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFeesAndCommissionsReceivableReportedForFSI(feesAndCommissionsReceivableReportedForFSIValue293);
                                    bodyElements.add(feesAndCommissionsReceivableReportedForFSIElement294);
                                
                            }
                        
                            
                            Unit pure295 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure295 = createUnitIfNotExist(pure295, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIMap299 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIMap299.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIValue297 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIMap299);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIMap299, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIValue297 = zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298 == null ? "" : zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIFieldDataValue298.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIContext296 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIMap299 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIValue297 != null && !"".equals(zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIValue297)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIContext296, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFeesAndCommissionsReceivableReportedForFSIValue300 = new RemarkForFSI();
                                    remarkForFeesAndCommissionsReceivableReportedForFSIValue300.setContextRef(DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIContext296);
                                    
                                    remarkForFeesAndCommissionsReceivableReportedForFSIValue300.setValue(zeroDBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIValue297);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFeesAndCommissionsReceivableReportedForFSIElement301 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFeesAndCommissionsReceivableReportedForFSI(remarkForFeesAndCommissionsReceivableReportedForFSIValue300);
                                    bodyElements.add(remarkForFeesAndCommissionsReceivableReportedForFSIElement301);
                                
                            }
                        
                            
                                
                                Unit INR302 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR302 = createUnitIfNotExist(INR302, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap306 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap306.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue304 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap306);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap306, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue304 = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305 == null ? "" : zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getValue();
                                    if(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305 != null ) {
                                        if(!zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue305.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIContext303 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap306 );
                                            
                                
                                if(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue304 != null && !"".equals(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue304)) {
                                    
                                    addContext(DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIContext303, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType gainsOrLossesOnFinancialInstrumentsReportedForFSIValue307 = new MonetaryItemType();
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue307.setContextRef(DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIContext303);
                                    
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue307.setUnitRef(INR302);
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue307.setDecimals("INF");
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue307.setValue(new BigDecimal(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue304));
                                    
                                    
                                    JAXBElement<MonetaryItemType> gainsOrLossesOnFinancialInstrumentsReportedForFSIElement308 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGainsOrLossesOnFinancialInstrumentsReportedForFSI(gainsOrLossesOnFinancialInstrumentsReportedForFSIValue307);
                                    bodyElements.add(gainsOrLossesOnFinancialInstrumentsReportedForFSIElement308);
                                
                            }
                        
                            
                                
                                Unit INR309 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR309 = createUnitIfNotExist(INR309, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap313 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap313.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue311 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap313);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap313, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue311 = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312 == null ? "" : zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getValue();
                                    if(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312 != null ) {
                                        if(!zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue312.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIContext310 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIMap313 );
                                            
                                
                                if(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue311 != null && !"".equals(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue311)) {
                                    
                                    addContext(DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIContext310, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType gainsOrLossesOnFinancialInstrumentsReportedForFSIValue314 = new MonetaryItemType();
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue314.setContextRef(DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIContext310);
                                    
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue314.setUnitRef(INR309);
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue314.setDecimals("INF");
                                    gainsOrLossesOnFinancialInstrumentsReportedForFSIValue314.setValue(new BigDecimal(zeroDBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIValue311));
                                    
                                    
                                    JAXBElement<MonetaryItemType> gainsOrLossesOnFinancialInstrumentsReportedForFSIElement315 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGainsOrLossesOnFinancialInstrumentsReportedForFSI(gainsOrLossesOnFinancialInstrumentsReportedForFSIValue314);
                                    bodyElements.add(gainsOrLossesOnFinancialInstrumentsReportedForFSIElement315);
                                
                            }
                        
                            
                            Unit pure316 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure316 = createUnitIfNotExist(pure316, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIMap320 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIMap320.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue318 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIMap320);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIMap320, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue318 = zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319 == null ? "" : zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIFieldDataValue319.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIContext317 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIMap320 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue318 != null && !"".equals(zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue318)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIContext317, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue321 = new RemarkForFSI();
                                    remarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue321.setContextRef(DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIContext317);
                                    
                                    remarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue321.setValue(zeroDBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue318);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIElement322 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(remarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIValue321);
                                    bodyElements.add(remarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIElement322);
                                
                            }
                        
                            
                                
                                Unit INR323 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR323 = createUnitIfNotExist(INR323, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ProRatedEarningsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap327 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap327.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue325 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap327);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326 = DBS01ReportUtil.retrieveFieldDataForElement(field.getProRatedEarningsReportedForFSI(), zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap327, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue325 = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326 == null ? "" : zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getValue();
                                    if(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326 != null ) {
                                        if(!zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue326.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1ProRatedEarningsReportedForFSIContext324 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap327 );
                                            
                                
                                if(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue325 != null && !"".equals(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue325)) {
                                    
                                    addContext(DBS01FS_Layout1ProRatedEarningsReportedForFSIContext324, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType proRatedEarningsReportedForFSIValue328 = new MonetaryItemType();
                                    proRatedEarningsReportedForFSIValue328.setContextRef(DBS01FS_Layout1ProRatedEarningsReportedForFSIContext324);
                                    
                                    proRatedEarningsReportedForFSIValue328.setUnitRef(INR323);
                                    proRatedEarningsReportedForFSIValue328.setDecimals("INF");
                                    proRatedEarningsReportedForFSIValue328.setValue(new BigDecimal(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue325));
                                    
                                    
                                    JAXBElement<MonetaryItemType> proRatedEarningsReportedForFSIElement329 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createProRatedEarningsReportedForFSI(proRatedEarningsReportedForFSIValue328);
                                    bodyElements.add(proRatedEarningsReportedForFSIElement329);
                                
                            }
                        
                            
                                
                                Unit INR330 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR330 = createUnitIfNotExist(INR330, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ProRatedEarningsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap334 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap334.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue332 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap334);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333 = DBS01ReportUtil.retrieveFieldDataForElement(field.getProRatedEarningsReportedForFSI(), zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap334, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue332 = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333 == null ? "" : zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getValue();
                                    if(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333 != null ) {
                                        if(!zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIFieldDataValue333.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1ProRatedEarningsReportedForFSIContext331 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIMap334 );
                                            
                                
                                if(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue332 != null && !"".equals(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue332)) {
                                    
                                    addContext(DBS01FS_Layout1ProRatedEarningsReportedForFSIContext331, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType proRatedEarningsReportedForFSIValue335 = new MonetaryItemType();
                                    proRatedEarningsReportedForFSIValue335.setContextRef(DBS01FS_Layout1ProRatedEarningsReportedForFSIContext331);
                                    
                                    proRatedEarningsReportedForFSIValue335.setUnitRef(INR330);
                                    proRatedEarningsReportedForFSIValue335.setDecimals("INF");
                                    proRatedEarningsReportedForFSIValue335.setValue(new BigDecimal(zeroDBS01FS_Layout1ProRatedEarningsReportedForFSIValue332));
                                    
                                    
                                    JAXBElement<MonetaryItemType> proRatedEarningsReportedForFSIElement336 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createProRatedEarningsReportedForFSI(proRatedEarningsReportedForFSIValue335);
                                    bodyElements.add(proRatedEarningsReportedForFSIElement336);
                                
                            }
                        
                            
                            Unit pure337 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure337 = createUnitIfNotExist(pure337, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForProRatedEarningsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIMap341 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIMap341.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIValue339 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIMap341);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForProRatedEarningsReportedForFSI(), zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIMap341, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIValue339 = zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340 == null ? "" : zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIFieldDataValue340.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIContext338 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIMap341 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIValue339 != null && !"".equals(zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIValue339)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIContext338, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForProRatedEarningsReportedForFSIValue342 = new RemarkForFSI();
                                    remarkForProRatedEarningsReportedForFSIValue342.setContextRef(DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIContext338);
                                    
                                    remarkForProRatedEarningsReportedForFSIValue342.setValue(zeroDBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIValue339);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForProRatedEarningsReportedForFSIElement343 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForProRatedEarningsReportedForFSI(remarkForProRatedEarningsReportedForFSIValue342);
                                    bodyElements.add(remarkForProRatedEarningsReportedForFSIElement343);
                                
                            }
                        
                            
                                
                                Unit INR344 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR344 = createUnitIfNotExist(INR344, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap348 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap348.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue346 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap348);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherIncomeReportedForFSI(), zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap348, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue346 = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347 == null ? "" : zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getValue();
                                    if(zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347 != null ) {
                                        if(!zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue347.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1OtherIncomeReportedForFSIContext345 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap348 );
                                            
                                
                                if(zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue346 != null && !"".equals(zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue346)) {
                                    
                                    addContext(DBS01FS_Layout1OtherIncomeReportedForFSIContext345, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherIncomeReportedForFSIValue349 = new MonetaryItemType();
                                    otherIncomeReportedForFSIValue349.setContextRef(DBS01FS_Layout1OtherIncomeReportedForFSIContext345);
                                    
                                    otherIncomeReportedForFSIValue349.setUnitRef(INR344);
                                    otherIncomeReportedForFSIValue349.setDecimals("INF");
                                    otherIncomeReportedForFSIValue349.setValue(new BigDecimal(zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue346));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherIncomeReportedForFSIElement350 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherIncomeReportedForFSI(otherIncomeReportedForFSIValue349);
                                    bodyElements.add(otherIncomeReportedForFSIElement350);
                                
                            }
                        
                            
                                
                                Unit INR351 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR351 = createUnitIfNotExist(INR351, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap355 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap355.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue353 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap355);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherIncomeReportedForFSI(), zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap355, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue353 = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354 == null ? "" : zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getValue();
                                    if(zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354 != null ) {
                                        if(!zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1OtherIncomeReportedForFSIFieldDataValue354.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1OtherIncomeReportedForFSIContext352 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1OtherIncomeReportedForFSIMap355 );
                                            
                                
                                if(zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue353 != null && !"".equals(zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue353)) {
                                    
                                    addContext(DBS01FS_Layout1OtherIncomeReportedForFSIContext352, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherIncomeReportedForFSIValue356 = new MonetaryItemType();
                                    otherIncomeReportedForFSIValue356.setContextRef(DBS01FS_Layout1OtherIncomeReportedForFSIContext352);
                                    
                                    otherIncomeReportedForFSIValue356.setUnitRef(INR351);
                                    otherIncomeReportedForFSIValue356.setDecimals("INF");
                                    otherIncomeReportedForFSIValue356.setValue(new BigDecimal(zeroDBS01FS_Layout1OtherIncomeReportedForFSIValue353));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherIncomeReportedForFSIElement357 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherIncomeReportedForFSI(otherIncomeReportedForFSIValue356);
                                    bodyElements.add(otherIncomeReportedForFSIElement357);
                                
                            }
                        
                            
                            Unit pure358 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure358 = createUnitIfNotExist(pure358, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIMap362 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIMap362.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIValue360 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIMap362);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIMap362, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIValue360 = zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361 == null ? "" : zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIFieldDataValue361.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIContext359 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIMap362 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIValue360 != null && !"".equals(zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIValue360)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIContext359, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherIncomeReportedForFSIValue363 = new RemarkForFSI();
                                    remarkForOtherIncomeReportedForFSIValue363.setContextRef(DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIContext359);
                                    
                                    remarkForOtherIncomeReportedForFSIValue363.setValue(zeroDBS01FS_Layout1RemarkForOtherIncomeReportedForFSIValue360);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherIncomeReportedForFSIElement364 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherIncomeReportedForFSI(remarkForOtherIncomeReportedForFSIValue363);
                                    bodyElements.add(remarkForOtherIncomeReportedForFSIElement364);
                                
                            }
                        
                            
                                
                                Unit INR365 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR365 = createUnitIfNotExist(INR365, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GrossIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1GrossIncomeReportedForFSIMap369 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1GrossIncomeReportedForFSIMap369.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1GrossIncomeReportedForFSIValue367 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), zeroDBS01FS_Layout1GrossIncomeReportedForFSIMap369);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGrossIncomeReportedForFSI(), zeroDBS01FS_Layout1GrossIncomeReportedForFSIMap369, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1GrossIncomeReportedForFSIValue367 = zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368 == null ? "" : zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getValue();
                                    if(zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368 != null ) {
                                        if(!zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1GrossIncomeReportedForFSIFieldDataValue368.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1GrossIncomeReportedForFSIContext366 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1GrossIncomeReportedForFSIMap369 );
                                            
                                
                                if(zeroDBS01FS_Layout1GrossIncomeReportedForFSIValue367 != null && !"".equals(zeroDBS01FS_Layout1GrossIncomeReportedForFSIValue367)) {
                                    
                                    addContext(DBS01FS_Layout1GrossIncomeReportedForFSIContext366, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType grossIncomeReportedForFSIValue370 = new MonetaryItemType();
                                    grossIncomeReportedForFSIValue370.setContextRef(DBS01FS_Layout1GrossIncomeReportedForFSIContext366);
                                    
                                    grossIncomeReportedForFSIValue370.setUnitRef(INR365);
                                    grossIncomeReportedForFSIValue370.setDecimals("INF");
                                    grossIncomeReportedForFSIValue370.setValue(new BigDecimal(zeroDBS01FS_Layout1GrossIncomeReportedForFSIValue367));
                                    
                                    
                                    JAXBElement<MonetaryItemType> grossIncomeReportedForFSIElement371 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGrossIncomeReportedForFSI(grossIncomeReportedForFSIValue370);
                                    bodyElements.add(grossIncomeReportedForFSIElement371);
                                
                            }
                        
                            
                            Unit pure372 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure372 = createUnitIfNotExist(pure372, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGrossIncomeReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIMap376 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIMap376.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIValue374 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIMap376);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGrossIncomeReportedForFSI(), zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIMap376, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIValue374 = zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375 == null ? "" : zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIFieldDataValue375.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIContext373 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIMap376 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIValue374 != null && !"".equals(zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIValue374)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIContext373, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGrossIncomeReportedForFSIValue377 = new RemarkForFSI();
                                    remarkForGrossIncomeReportedForFSIValue377.setContextRef(DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIContext373);
                                    
                                    remarkForGrossIncomeReportedForFSIValue377.setValue(zeroDBS01FS_Layout1RemarkForGrossIncomeReportedForFSIValue374);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGrossIncomeReportedForFSIElement378 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGrossIncomeReportedForFSI(remarkForGrossIncomeReportedForFSIValue377);
                                    bodyElements.add(remarkForGrossIncomeReportedForFSIElement378);
                                
                            }
                        
                            
                                
                                Unit INR379 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR379 = createUnitIfNotExist(INR379, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NoninterestExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIMap383 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIMap383.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIValue381 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIMap383);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNoninterestExpensesReportedForFSI(), zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIMap383, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIValue381 = zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382 == null ? "" : zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getValue();
                                    if(zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382 != null ) {
                                        if(!zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIFieldDataValue382.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1NoninterestExpensesReportedForFSIContext380 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIMap383 );
                                            
                                
                                if(zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIValue381 != null && !"".equals(zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIValue381)) {
                                    
                                    addContext(DBS01FS_Layout1NoninterestExpensesReportedForFSIContext380, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType noninterestExpensesReportedForFSIValue384 = new MonetaryItemType();
                                    noninterestExpensesReportedForFSIValue384.setContextRef(DBS01FS_Layout1NoninterestExpensesReportedForFSIContext380);
                                    
                                    noninterestExpensesReportedForFSIValue384.setUnitRef(INR379);
                                    noninterestExpensesReportedForFSIValue384.setDecimals("INF");
                                    noninterestExpensesReportedForFSIValue384.setValue(new BigDecimal(zeroDBS01FS_Layout1NoninterestExpensesReportedForFSIValue381));
                                    
                                    
                                    JAXBElement<MonetaryItemType> noninterestExpensesReportedForFSIElement385 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNoninterestExpensesReportedForFSI(noninterestExpensesReportedForFSIValue384);
                                    bodyElements.add(noninterestExpensesReportedForFSIElement385);
                                
                            }
                        
                            
                            Unit pure386 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure386 = createUnitIfNotExist(pure386, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNoninterestExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIMap390 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIMap390.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIValue388 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIMap390);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIMap390, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIValue388 = zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389 == null ? "" : zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIFieldDataValue389.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIContext387 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIMap390 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIValue388 != null && !"".equals(zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIValue388)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIContext387, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNoninterestExpensesReportedForFSIValue391 = new RemarkForFSI();
                                    remarkForNoninterestExpensesReportedForFSIValue391.setContextRef(DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIContext387);
                                    
                                    remarkForNoninterestExpensesReportedForFSIValue391.setValue(zeroDBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIValue388);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNoninterestExpensesReportedForFSIElement392 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNoninterestExpensesReportedForFSI(remarkForNoninterestExpensesReportedForFSIValue391);
                                    bodyElements.add(remarkForNoninterestExpensesReportedForFSIElement392);
                                
                            }
                        
                            
                                
                                Unit INR393 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR393 = createUnitIfNotExist(INR393, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - StaffExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1StaffExpensesReportedForFSIMap397 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1StaffExpensesReportedForFSIMap397.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1StaffExpensesReportedForFSIValue395 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), zeroDBS01FS_Layout1StaffExpensesReportedForFSIMap397);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396 = DBS01ReportUtil.retrieveFieldDataForElement(field.getStaffExpensesReportedForFSI(), zeroDBS01FS_Layout1StaffExpensesReportedForFSIMap397, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1StaffExpensesReportedForFSIValue395 = zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396 == null ? "" : zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getValue();
                                    if(zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396 != null ) {
                                        if(!zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1StaffExpensesReportedForFSIFieldDataValue396.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1StaffExpensesReportedForFSIContext394 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1StaffExpensesReportedForFSIMap397 );
                                            
                                
                                if(zeroDBS01FS_Layout1StaffExpensesReportedForFSIValue395 != null && !"".equals(zeroDBS01FS_Layout1StaffExpensesReportedForFSIValue395)) {
                                    
                                    addContext(DBS01FS_Layout1StaffExpensesReportedForFSIContext394, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType staffExpensesReportedForFSIValue398 = new MonetaryItemType();
                                    staffExpensesReportedForFSIValue398.setContextRef(DBS01FS_Layout1StaffExpensesReportedForFSIContext394);
                                    
                                    staffExpensesReportedForFSIValue398.setUnitRef(INR393);
                                    staffExpensesReportedForFSIValue398.setDecimals("INF");
                                    staffExpensesReportedForFSIValue398.setValue(new BigDecimal(zeroDBS01FS_Layout1StaffExpensesReportedForFSIValue395));
                                    
                                    
                                    JAXBElement<MonetaryItemType> staffExpensesReportedForFSIElement399 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createStaffExpensesReportedForFSI(staffExpensesReportedForFSIValue398);
                                    bodyElements.add(staffExpensesReportedForFSIElement399);
                                
                            }
                        
                            
                            Unit pure400 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure400 = createUnitIfNotExist(pure400, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForStaffExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIMap404 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIMap404.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIValue402 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIMap404);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForStaffExpensesReportedForFSI(), zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIMap404, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIValue402 = zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403 == null ? "" : zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIFieldDataValue403.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIContext401 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIMap404 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIValue402 != null && !"".equals(zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIValue402)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIContext401, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForStaffExpensesReportedForFSIValue405 = new RemarkForFSI();
                                    remarkForStaffExpensesReportedForFSIValue405.setContextRef(DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIContext401);
                                    
                                    remarkForStaffExpensesReportedForFSIValue405.setValue(zeroDBS01FS_Layout1RemarkForStaffExpensesReportedForFSIValue402);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForStaffExpensesReportedForFSIElement406 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForStaffExpensesReportedForFSI(remarkForStaffExpensesReportedForFSIValue405);
                                    bodyElements.add(remarkForStaffExpensesReportedForFSIElement406);
                                
                            }
                        
                            
                                
                                Unit INR407 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR407 = createUnitIfNotExist(INR407, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap411 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap411.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue409 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap411);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherExpensesReportedForFSI(), zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap411, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue409 = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410 == null ? "" : zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getValue();
                                    if(zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410 != null ) {
                                        if(!zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue410.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1OtherExpensesReportedForFSIContext408 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap411 );
                                            
                                
                                if(zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue409 != null && !"".equals(zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue409)) {
                                    
                                    addContext(DBS01FS_Layout1OtherExpensesReportedForFSIContext408, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherExpensesReportedForFSIValue412 = new MonetaryItemType();
                                    otherExpensesReportedForFSIValue412.setContextRef(DBS01FS_Layout1OtherExpensesReportedForFSIContext408);
                                    
                                    otherExpensesReportedForFSIValue412.setUnitRef(INR407);
                                    otherExpensesReportedForFSIValue412.setDecimals("INF");
                                    otherExpensesReportedForFSIValue412.setValue(new BigDecimal(zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue409));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherExpensesReportedForFSIElement413 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherExpensesReportedForFSI(otherExpensesReportedForFSIValue412);
                                    bodyElements.add(otherExpensesReportedForFSIElement413);
                                
                            }
                        
                            
                                
                                Unit INR414 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR414 = createUnitIfNotExist(INR414, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap418 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap418.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue416 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap418);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherExpensesReportedForFSI(), zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap418, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue416 = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417 == null ? "" : zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getValue();
                                    if(zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417 != null ) {
                                        if(!zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1OtherExpensesReportedForFSIFieldDataValue417.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1OtherExpensesReportedForFSIContext415 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1OtherExpensesReportedForFSIMap418 );
                                            
                                
                                if(zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue416 != null && !"".equals(zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue416)) {
                                    
                                    addContext(DBS01FS_Layout1OtherExpensesReportedForFSIContext415, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherExpensesReportedForFSIValue419 = new MonetaryItemType();
                                    otherExpensesReportedForFSIValue419.setContextRef(DBS01FS_Layout1OtherExpensesReportedForFSIContext415);
                                    
                                    otherExpensesReportedForFSIValue419.setUnitRef(INR414);
                                    otherExpensesReportedForFSIValue419.setDecimals("INF");
                                    otherExpensesReportedForFSIValue419.setValue(new BigDecimal(zeroDBS01FS_Layout1OtherExpensesReportedForFSIValue416));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherExpensesReportedForFSIElement420 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherExpensesReportedForFSI(otherExpensesReportedForFSIValue419);
                                    bodyElements.add(otherExpensesReportedForFSIElement420);
                                
                            }
                        
                            
                            Unit pure421 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure421 = createUnitIfNotExist(pure421, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherExpensesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIMap425 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIMap425.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIValue423 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIMap425);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherExpensesReportedForFSI(), zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIMap425, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIValue423 = zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424 == null ? "" : zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIFieldDataValue424.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIContext422 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIMap425 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIValue423 != null && !"".equals(zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIValue423)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIContext422, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherExpensesReportedForFSIValue426 = new RemarkForFSI();
                                    remarkForOtherExpensesReportedForFSIValue426.setContextRef(DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIContext422);
                                    
                                    remarkForOtherExpensesReportedForFSIValue426.setValue(zeroDBS01FS_Layout1RemarkForOtherExpensesReportedForFSIValue423);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherExpensesReportedForFSIElement427 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherExpensesReportedForFSI(remarkForOtherExpensesReportedForFSIValue426);
                                    bodyElements.add(remarkForOtherExpensesReportedForFSIElement427);
                                
                            }
                        
                            
                                
                                Unit INR428 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR428 = createUnitIfNotExist(INR428, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1NetProvisionsReportedForFSIMap432 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1NetProvisionsReportedForFSIMap432.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1NetProvisionsReportedForFSIValue430 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), zeroDBS01FS_Layout1NetProvisionsReportedForFSIMap432);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetProvisionsReportedForFSI(), zeroDBS01FS_Layout1NetProvisionsReportedForFSIMap432, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1NetProvisionsReportedForFSIValue430 = zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431 == null ? "" : zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getValue();
                                    if(zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431 != null ) {
                                        if(!zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1NetProvisionsReportedForFSIFieldDataValue431.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1NetProvisionsReportedForFSIContext429 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1NetProvisionsReportedForFSIMap432 );
                                            
                                
                                if(zeroDBS01FS_Layout1NetProvisionsReportedForFSIValue430 != null && !"".equals(zeroDBS01FS_Layout1NetProvisionsReportedForFSIValue430)) {
                                    
                                    addContext(DBS01FS_Layout1NetProvisionsReportedForFSIContext429, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netProvisionsReportedForFSIValue433 = new MonetaryItemType();
                                    netProvisionsReportedForFSIValue433.setContextRef(DBS01FS_Layout1NetProvisionsReportedForFSIContext429);
                                    
                                    netProvisionsReportedForFSIValue433.setUnitRef(INR428);
                                    netProvisionsReportedForFSIValue433.setDecimals("INF");
                                    netProvisionsReportedForFSIValue433.setValue(new BigDecimal(zeroDBS01FS_Layout1NetProvisionsReportedForFSIValue430));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netProvisionsReportedForFSIElement434 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetProvisionsReportedForFSI(netProvisionsReportedForFSIValue433);
                                    bodyElements.add(netProvisionsReportedForFSIElement434);
                                
                            }
                        
                            
                            Unit pure435 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure435 = createUnitIfNotExist(pure435, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIMap439 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIMap439.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIValue437 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIMap439);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetProvisionsReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIMap439, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIValue437 = zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438 == null ? "" : zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIFieldDataValue438.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIContext436 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIMap439 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIValue437 != null && !"".equals(zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIValue437)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIContext436, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetProvisionsReportedForFSIValue440 = new RemarkForFSI();
                                    remarkForNetProvisionsReportedForFSIValue440.setContextRef(DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIContext436);
                                    
                                    remarkForNetProvisionsReportedForFSIValue440.setValue(zeroDBS01FS_Layout1RemarkForNetProvisionsReportedForFSIValue437);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetProvisionsReportedForFSIElement441 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetProvisionsReportedForFSI(remarkForNetProvisionsReportedForFSIValue440);
                                    bodyElements.add(remarkForNetProvisionsReportedForFSIElement441);
                                
                            }
                        
                            
                                
                                Unit INR442 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR442 = createUnitIfNotExist(INR442, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoanLossProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap446 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap446.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue444 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap446);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoanLossProvisionsReportedForFSI(), zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap446, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue444 = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445 == null ? "" : zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getValue();
                                    if(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445 != null ) {
                                        if(!zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue445.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1LoanLossProvisionsReportedForFSIContext443 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap446 );
                                            
                                
                                if(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue444 != null && !"".equals(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue444)) {
                                    
                                    addContext(DBS01FS_Layout1LoanLossProvisionsReportedForFSIContext443, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loanLossProvisionsReportedForFSIValue447 = new MonetaryItemType();
                                    loanLossProvisionsReportedForFSIValue447.setContextRef(DBS01FS_Layout1LoanLossProvisionsReportedForFSIContext443);
                                    
                                    loanLossProvisionsReportedForFSIValue447.setUnitRef(INR442);
                                    loanLossProvisionsReportedForFSIValue447.setDecimals("INF");
                                    loanLossProvisionsReportedForFSIValue447.setValue(new BigDecimal(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue444));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loanLossProvisionsReportedForFSIElement448 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoanLossProvisionsReportedForFSI(loanLossProvisionsReportedForFSIValue447);
                                    bodyElements.add(loanLossProvisionsReportedForFSIElement448);
                                
                            }
                        
                            
                                
                                Unit INR449 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR449 = createUnitIfNotExist(INR449, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoanLossProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap453 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap453.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue451 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap453);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoanLossProvisionsReportedForFSI(), zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap453, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue451 = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452 == null ? "" : zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getValue();
                                    if(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452 != null ) {
                                        if(!zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIFieldDataValue452.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1LoanLossProvisionsReportedForFSIContext450 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIMap453 );
                                            
                                
                                if(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue451 != null && !"".equals(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue451)) {
                                    
                                    addContext(DBS01FS_Layout1LoanLossProvisionsReportedForFSIContext450, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loanLossProvisionsReportedForFSIValue454 = new MonetaryItemType();
                                    loanLossProvisionsReportedForFSIValue454.setContextRef(DBS01FS_Layout1LoanLossProvisionsReportedForFSIContext450);
                                    
                                    loanLossProvisionsReportedForFSIValue454.setUnitRef(INR449);
                                    loanLossProvisionsReportedForFSIValue454.setDecimals("INF");
                                    loanLossProvisionsReportedForFSIValue454.setValue(new BigDecimal(zeroDBS01FS_Layout1LoanLossProvisionsReportedForFSIValue451));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loanLossProvisionsReportedForFSIElement455 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoanLossProvisionsReportedForFSI(loanLossProvisionsReportedForFSIValue454);
                                    bodyElements.add(loanLossProvisionsReportedForFSIElement455);
                                
                            }
                        
                            
                            Unit pure456 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure456 = createUnitIfNotExist(pure456, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoanLossProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIMap460 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIMap460.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIValue458 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIMap460);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIMap460, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIValue458 = zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459 == null ? "" : zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIFieldDataValue459.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIContext457 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIMap460 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIValue458 != null && !"".equals(zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIValue458)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIContext457, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoanLossProvisionsReportedForFSIValue461 = new RemarkForFSI();
                                    remarkForLoanLossProvisionsReportedForFSIValue461.setContextRef(DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIContext457);
                                    
                                    remarkForLoanLossProvisionsReportedForFSIValue461.setValue(zeroDBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIValue458);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoanLossProvisionsReportedForFSIElement462 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoanLossProvisionsReportedForFSI(remarkForLoanLossProvisionsReportedForFSIValue461);
                                    bodyElements.add(remarkForLoanLossProvisionsReportedForFSIElement462);
                                
                            }
                        
                            
                                
                                Unit INR463 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR463 = createUnitIfNotExist(INR463, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherFinancialAssetProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap467 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap467.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue465 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap467);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap467, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue465 = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466 == null ? "" : zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getValue();
                                    if(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466 != null ) {
                                        if(!zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue466.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIContext464 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap467 );
                                            
                                
                                if(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue465 != null && !"".equals(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue465)) {
                                    
                                    addContext(DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIContext464, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherFinancialAssetProvisionsReportedForFSIValue468 = new MonetaryItemType();
                                    otherFinancialAssetProvisionsReportedForFSIValue468.setContextRef(DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIContext464);
                                    
                                    otherFinancialAssetProvisionsReportedForFSIValue468.setUnitRef(INR463);
                                    otherFinancialAssetProvisionsReportedForFSIValue468.setDecimals("INF");
                                    otherFinancialAssetProvisionsReportedForFSIValue468.setValue(new BigDecimal(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue465));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherFinancialAssetProvisionsReportedForFSIElement469 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherFinancialAssetProvisionsReportedForFSI(otherFinancialAssetProvisionsReportedForFSIValue468);
                                    bodyElements.add(otherFinancialAssetProvisionsReportedForFSIElement469);
                                
                            }
                        
                            
                                
                                Unit INR470 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR470 = createUnitIfNotExist(INR470, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherFinancialAssetProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap474 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap474.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue472 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap474);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap474, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue472 = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473 == null ? "" : zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getValue();
                                    if(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473 != null ) {
                                        if(!zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIFieldDataValue473.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIContext471 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIMap474 );
                                            
                                
                                if(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue472 != null && !"".equals(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue472)) {
                                    
                                    addContext(DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIContext471, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherFinancialAssetProvisionsReportedForFSIValue475 = new MonetaryItemType();
                                    otherFinancialAssetProvisionsReportedForFSIValue475.setContextRef(DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIContext471);
                                    
                                    otherFinancialAssetProvisionsReportedForFSIValue475.setUnitRef(INR470);
                                    otherFinancialAssetProvisionsReportedForFSIValue475.setDecimals("INF");
                                    otherFinancialAssetProvisionsReportedForFSIValue475.setValue(new BigDecimal(zeroDBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIValue472));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherFinancialAssetProvisionsReportedForFSIElement476 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherFinancialAssetProvisionsReportedForFSI(otherFinancialAssetProvisionsReportedForFSIValue475);
                                    bodyElements.add(otherFinancialAssetProvisionsReportedForFSIElement476);
                                
                            }
                        
                            
                            Unit pure477 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure477 = createUnitIfNotExist(pure477, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIMap481 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIMap481.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIValue479 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIMap481);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIMap481, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIValue479 = zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480 == null ? "" : zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIFieldDataValue480.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIContext478 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIMap481 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIValue479 != null && !"".equals(zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIValue479)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIContext478, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherFinancialAssetProvisionsReportedForFSIValue482 = new RemarkForFSI();
                                    remarkForOtherFinancialAssetProvisionsReportedForFSIValue482.setContextRef(DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIContext478);
                                    
                                    remarkForOtherFinancialAssetProvisionsReportedForFSIValue482.setValue(zeroDBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIValue479);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherFinancialAssetProvisionsReportedForFSIElement483 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherFinancialAssetProvisionsReportedForFSI(remarkForOtherFinancialAssetProvisionsReportedForFSIValue482);
                                    bodyElements.add(remarkForOtherFinancialAssetProvisionsReportedForFSIElement483);
                                
                            }
                        
                            
                                
                                Unit INR484 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR484 = createUnitIfNotExist(INR484, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap488 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap488.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue486 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap488);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap488, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue486 = zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487 == null ? "" : zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getValue();
                                    if(zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487 != null ) {
                                        if(!zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue487.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIContext485 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap488 );
                                            
                                
                                if(zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue486 != null && !"".equals(zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue486)) {
                                    
                                    addContext(DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIContext485, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue489 = new MonetaryItemType();
                                    netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue489.setContextRef(DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIContext485);
                                    
                                    netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue489.setUnitRef(INR484);
                                    netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue489.setDecimals("INF");
                                    netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue489.setValue(new BigDecimal(zeroDBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue486));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIElement490 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue489);
                                    bodyElements.add(netIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIElement490);
                                
                            }
                        
                            
                            Unit pure491 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure491 = createUnitIfNotExist(pure491, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap495 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap495.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue493 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap495);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap495, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue493 = zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494 == null ? "" : zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue494.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIContext492 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIMap495 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue493 != null && !"".equals(zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue493)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIContext492, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue496 = new RemarkForFSI();
                                    remarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue496.setContextRef(DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIContext492);
                                    
                                    remarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue496.setValue(zeroDBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue493);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIElement497 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(remarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIValue496);
                                    bodyElements.add(remarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIElement497);
                                
                            }
                        
                            
                                
                                Unit INR498 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR498 = createUnitIfNotExist(INR498, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExtraordinaryItemsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIMap502 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIMap502.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIValue500 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIMap502);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501 = DBS01ReportUtil.retrieveFieldDataForElement(field.getExtraordinaryItemsReportedForFSI(), zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIMap502, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIValue500 = zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501 == null ? "" : zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getValue();
                                    if(zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501 != null ) {
                                        if(!zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIFieldDataValue501.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1ExtraordinaryItemsReportedForFSIContext499 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIMap502 );
                                            
                                
                                if(zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIValue500 != null && !"".equals(zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIValue500)) {
                                    
                                    addContext(DBS01FS_Layout1ExtraordinaryItemsReportedForFSIContext499, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType extraordinaryItemsReportedForFSIValue503 = new MonetaryItemType();
                                    extraordinaryItemsReportedForFSIValue503.setContextRef(DBS01FS_Layout1ExtraordinaryItemsReportedForFSIContext499);
                                    
                                    extraordinaryItemsReportedForFSIValue503.setUnitRef(INR498);
                                    extraordinaryItemsReportedForFSIValue503.setDecimals("INF");
                                    extraordinaryItemsReportedForFSIValue503.setValue(new BigDecimal(zeroDBS01FS_Layout1ExtraordinaryItemsReportedForFSIValue500));
                                    
                                    
                                    JAXBElement<MonetaryItemType> extraordinaryItemsReportedForFSIElement504 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createExtraordinaryItemsReportedForFSI(extraordinaryItemsReportedForFSIValue503);
                                    bodyElements.add(extraordinaryItemsReportedForFSIElement504);
                                
                            }
                        
                            
                            Unit pure505 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure505 = createUnitIfNotExist(pure505, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForExtraordinaryItemsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIMap509 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIMap509.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIValue507 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIMap509);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIMap509, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIValue507 = zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508 == null ? "" : zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIFieldDataValue508.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIContext506 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIMap509 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIValue507 != null && !"".equals(zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIValue507)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIContext506, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForExtraordinaryItemsReportedForFSIValue510 = new RemarkForFSI();
                                    remarkForExtraordinaryItemsReportedForFSIValue510.setContextRef(DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIContext506);
                                    
                                    remarkForExtraordinaryItemsReportedForFSIValue510.setValue(zeroDBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIValue507);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForExtraordinaryItemsReportedForFSIElement511 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForExtraordinaryItemsReportedForFSI(remarkForExtraordinaryItemsReportedForFSIValue510);
                                    bodyElements.add(remarkForExtraordinaryItemsReportedForFSIElement511);
                                
                            }
                        
                            
                                
                                Unit INR512 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR512 = createUnitIfNotExist(INR512, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - IncomeTaxReportedForFSI
                            
                                Map zeroDBS01FS_Layout1IncomeTaxReportedForFSIMap516 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1IncomeTaxReportedForFSIMap516.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1IncomeTaxReportedForFSIValue514 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), zeroDBS01FS_Layout1IncomeTaxReportedForFSIMap516);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515 = DBS01ReportUtil.retrieveFieldDataForElement(field.getIncomeTaxReportedForFSI(), zeroDBS01FS_Layout1IncomeTaxReportedForFSIMap516, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1IncomeTaxReportedForFSIValue514 = zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515 == null ? "" : zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getValue();
                                    if(zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515 != null ) {
                                        if(!zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1IncomeTaxReportedForFSIFieldDataValue515.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1IncomeTaxReportedForFSIContext513 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1IncomeTaxReportedForFSIMap516 );
                                            
                                
                                if(zeroDBS01FS_Layout1IncomeTaxReportedForFSIValue514 != null && !"".equals(zeroDBS01FS_Layout1IncomeTaxReportedForFSIValue514)) {
                                    
                                    addContext(DBS01FS_Layout1IncomeTaxReportedForFSIContext513, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType incomeTaxReportedForFSIValue517 = new MonetaryItemType();
                                    incomeTaxReportedForFSIValue517.setContextRef(DBS01FS_Layout1IncomeTaxReportedForFSIContext513);
                                    
                                    incomeTaxReportedForFSIValue517.setUnitRef(INR512);
                                    incomeTaxReportedForFSIValue517.setDecimals("INF");
                                    incomeTaxReportedForFSIValue517.setValue(new BigDecimal(zeroDBS01FS_Layout1IncomeTaxReportedForFSIValue514));
                                    
                                    
                                    JAXBElement<MonetaryItemType> incomeTaxReportedForFSIElement518 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createIncomeTaxReportedForFSI(incomeTaxReportedForFSIValue517);
                                    bodyElements.add(incomeTaxReportedForFSIElement518);
                                
                            }
                        
                            
                            Unit pure519 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure519 = createUnitIfNotExist(pure519, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForIncomeTaxReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIMap523 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIMap523.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIValue521 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIMap523);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForIncomeTaxReportedForFSI(), zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIMap523, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIValue521 = zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522 == null ? "" : zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIFieldDataValue522.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIContext520 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIMap523 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIValue521 != null && !"".equals(zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIValue521)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIContext520, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForIncomeTaxReportedForFSIValue524 = new RemarkForFSI();
                                    remarkForIncomeTaxReportedForFSIValue524.setContextRef(DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIContext520);
                                    
                                    remarkForIncomeTaxReportedForFSIValue524.setValue(zeroDBS01FS_Layout1RemarkForIncomeTaxReportedForFSIValue521);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForIncomeTaxReportedForFSIElement525 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForIncomeTaxReportedForFSI(remarkForIncomeTaxReportedForFSIValue524);
                                    bodyElements.add(remarkForIncomeTaxReportedForFSIElement525);
                                
                            }
                        
                            
                                
                                Unit INR526 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR526 = createUnitIfNotExist(INR526, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap530 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap530.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue528 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap530);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap530, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue528 = zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529 == null ? "" : zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getValue();
                                    if(zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529 != null ) {
                                        if(!zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue529.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIContext527 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap530 );
                                            
                                
                                if(zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue528 != null && !"".equals(zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue528)) {
                                    
                                    addContext(DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIContext527, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue531 = new MonetaryItemType();
                                    netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue531.setContextRef(DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIContext527);
                                    
                                    netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue531.setUnitRef(INR526);
                                    netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue531.setDecimals("INF");
                                    netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue531.setValue(new BigDecimal(zeroDBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue528));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIElement532 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue531);
                                    bodyElements.add(netIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIElement532);
                                
                            }
                        
                            
                            Unit pure533 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure533 = createUnitIfNotExist(pure533, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap537 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap537.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue535 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap537);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap537, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue535 = zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536 == null ? "" : zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIFieldDataValue536.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIContext534 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIMap537 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue535 != null && !"".equals(zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue535)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIContext534, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue538 = new RemarkForFSI();
                                    remarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue538.setContextRef(DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIContext534);
                                    
                                    remarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue538.setValue(zeroDBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue535);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIElement539 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(remarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIValue538);
                                    bodyElements.add(remarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIElement539);
                                
                            }
                        
                            
                                
                                Unit INR540 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR540 = createUnitIfNotExist(INR540, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DividendsPayableReportedForFSI
                            
                                Map zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap544 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap544.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue542 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap544);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDividendsPayableReportedForFSI(), zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap544, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue542 = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543 == null ? "" : zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getValue();
                                    if(zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543 != null ) {
                                        if(!zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue543.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1DividendsPayableReportedForFSIContext541 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap544 );
                                            
                                
                                if(zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue542 != null && !"".equals(zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue542)) {
                                    
                                    addContext(DBS01FS_Layout1DividendsPayableReportedForFSIContext541, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType dividendsPayableReportedForFSIValue545 = new MonetaryItemType();
                                    dividendsPayableReportedForFSIValue545.setContextRef(DBS01FS_Layout1DividendsPayableReportedForFSIContext541);
                                    
                                    dividendsPayableReportedForFSIValue545.setUnitRef(INR540);
                                    dividendsPayableReportedForFSIValue545.setDecimals("INF");
                                    dividendsPayableReportedForFSIValue545.setValue(new BigDecimal(zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue542));
                                    
                                    
                                    JAXBElement<MonetaryItemType> dividendsPayableReportedForFSIElement546 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDividendsPayableReportedForFSI(dividendsPayableReportedForFSIValue545);
                                    bodyElements.add(dividendsPayableReportedForFSIElement546);
                                
                            }
                        
                            
                                
                                Unit INR547 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR547 = createUnitIfNotExist(INR547, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DividendsPayableReportedForFSI
                            
                                Map zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap551 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap551.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue549 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap551);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDividendsPayableReportedForFSI(), zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap551, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue549 = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550 == null ? "" : zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getValue();
                                    if(zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550 != null ) {
                                        if(!zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1DividendsPayableReportedForFSIFieldDataValue550.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1DividendsPayableReportedForFSIContext548 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1DividendsPayableReportedForFSIMap551 );
                                            
                                
                                if(zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue549 != null && !"".equals(zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue549)) {
                                    
                                    addContext(DBS01FS_Layout1DividendsPayableReportedForFSIContext548, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType dividendsPayableReportedForFSIValue552 = new MonetaryItemType();
                                    dividendsPayableReportedForFSIValue552.setContextRef(DBS01FS_Layout1DividendsPayableReportedForFSIContext548);
                                    
                                    dividendsPayableReportedForFSIValue552.setUnitRef(INR547);
                                    dividendsPayableReportedForFSIValue552.setDecimals("INF");
                                    dividendsPayableReportedForFSIValue552.setValue(new BigDecimal(zeroDBS01FS_Layout1DividendsPayableReportedForFSIValue549));
                                    
                                    
                                    JAXBElement<MonetaryItemType> dividendsPayableReportedForFSIElement553 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDividendsPayableReportedForFSI(dividendsPayableReportedForFSIValue552);
                                    bodyElements.add(dividendsPayableReportedForFSIElement553);
                                
                            }
                        
                            
                            Unit pure554 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure554 = createUnitIfNotExist(pure554, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDividendsPayableReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIMap558 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIMap558.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIValue556 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIMap558);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDividendsPayableReportedForFSI(), zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIMap558, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIValue556 = zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557 == null ? "" : zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIFieldDataValue557.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIContext555 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIMap558 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIValue556 != null && !"".equals(zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIValue556)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIContext555, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDividendsPayableReportedForFSIValue559 = new RemarkForFSI();
                                    remarkForDividendsPayableReportedForFSIValue559.setContextRef(DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIContext555);
                                    
                                    remarkForDividendsPayableReportedForFSIValue559.setValue(zeroDBS01FS_Layout1RemarkForDividendsPayableReportedForFSIValue556);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDividendsPayableReportedForFSIElement560 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDividendsPayableReportedForFSI(remarkForDividendsPayableReportedForFSIValue559);
                                    bodyElements.add(remarkForDividendsPayableReportedForFSIElement560);
                                
                            }
                        
                            
                                
                                Unit INR561 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR561 = createUnitIfNotExist(INR561, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RetainedEarningsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RetainedEarningsReportedForFSIMap565 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RetainedEarningsReportedForFSIMap565.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RetainedEarningsReportedForFSIValue563 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), zeroDBS01FS_Layout1RetainedEarningsReportedForFSIMap565);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRetainedEarningsReportedForFSI(), zeroDBS01FS_Layout1RetainedEarningsReportedForFSIMap565, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RetainedEarningsReportedForFSIValue563 = zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564 == null ? "" : zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getValue();
                                    if(zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564 != null ) {
                                        if(!zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RetainedEarningsReportedForFSIFieldDataValue564.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RetainedEarningsReportedForFSIContext562 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RetainedEarningsReportedForFSIMap565 );
                                            
                                
                                if(zeroDBS01FS_Layout1RetainedEarningsReportedForFSIValue563 != null && !"".equals(zeroDBS01FS_Layout1RetainedEarningsReportedForFSIValue563)) {
                                    
                                    addContext(DBS01FS_Layout1RetainedEarningsReportedForFSIContext562, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType retainedEarningsReportedForFSIValue566 = new MonetaryItemType();
                                    retainedEarningsReportedForFSIValue566.setContextRef(DBS01FS_Layout1RetainedEarningsReportedForFSIContext562);
                                    
                                    retainedEarningsReportedForFSIValue566.setUnitRef(INR561);
                                    retainedEarningsReportedForFSIValue566.setDecimals("INF");
                                    retainedEarningsReportedForFSIValue566.setValue(new BigDecimal(zeroDBS01FS_Layout1RetainedEarningsReportedForFSIValue563));
                                    
                                    
                                    JAXBElement<MonetaryItemType> retainedEarningsReportedForFSIElement567 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRetainedEarningsReportedForFSI(retainedEarningsReportedForFSIValue566);
                                    bodyElements.add(retainedEarningsReportedForFSIElement567);
                                
                            }
                        
                            
                            Unit pure568 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure568 = createUnitIfNotExist(pure568, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRetainedEarningsReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIMap572 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIMap572.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIValue570 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIMap572);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRetainedEarningsReportedForFSI(), zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIMap572, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIValue570 = zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571 == null ? "" : zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIFieldDataValue571.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIContext569 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIMap572 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIValue570 != null && !"".equals(zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIValue570)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIContext569, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRetainedEarningsReportedForFSIValue573 = new RemarkForFSI();
                                    remarkForRetainedEarningsReportedForFSIValue573.setContextRef(DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIContext569);
                                    
                                    remarkForRetainedEarningsReportedForFSIValue573.setValue(zeroDBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIValue570);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRetainedEarningsReportedForFSIElement574 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRetainedEarningsReportedForFSI(remarkForRetainedEarningsReportedForFSIValue573);
                                    bodyElements.add(remarkForRetainedEarningsReportedForFSIElement574);
                                
                            }
                        
                            
                                
                                Unit INR575 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR575 = createUnitIfNotExist(INR575, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                                Map zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIMap579 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIMap579.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIValue577 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIMap579);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578 = DBS01ReportUtil.retrieveFieldDataForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIMap579, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIValue577 = zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578 == null ? "" : zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getValue();
                                    if(zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578 != null ) {
                                        if(!zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue578.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIContext576 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIMap579 );
                                            
                                
                                if(zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIValue577 != null && !"".equals(zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIValue577)) {
                                    
                                    addContext(DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIContext576, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType mtmLossesInTheInvestmentPortfolioReportedForFSIValue580 = new MonetaryItemType();
                                    mtmLossesInTheInvestmentPortfolioReportedForFSIValue580.setContextRef(DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIContext576);
                                    
                                    mtmLossesInTheInvestmentPortfolioReportedForFSIValue580.setUnitRef(INR575);
                                    mtmLossesInTheInvestmentPortfolioReportedForFSIValue580.setDecimals("INF");
                                    mtmLossesInTheInvestmentPortfolioReportedForFSIValue580.setValue(new BigDecimal(zeroDBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIValue577));
                                    
                                    
                                    JAXBElement<MonetaryItemType> mtmLossesInTheInvestmentPortfolioReportedForFSIElement581 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createMtmLossesInTheInvestmentPortfolioReportedForFSI(mtmLossesInTheInvestmentPortfolioReportedForFSIValue580);
                                    bodyElements.add(mtmLossesInTheInvestmentPortfolioReportedForFSIElement581);
                                
                            }
                        
                            
                            Unit pure582 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure582 = createUnitIfNotExist(pure582, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIMap586 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIMap586.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue584 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIMap586);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIMap586, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue584 = zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585 == null ? "" : zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIFieldDataValue585.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIContext583 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIMap586 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue584 != null && !"".equals(zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue584)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIContext583, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue587 = new RemarkForFSI();
                                    remarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue587.setContextRef(DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIContext583);
                                    
                                    remarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue587.setValue(zeroDBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue584);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForMTMLossesInTheInvestmentPortfolioReportedForFSIElement588 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(remarkForMTMLossesInTheInvestmentPortfolioReportedForFSIValue587);
                                    bodyElements.add(remarkForMTMLossesInTheInvestmentPortfolioReportedForFSIElement588);
                                
                            }
                        
                            
                                
                                Unit INR589 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR589 = createUnitIfNotExist(INR589, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                                Map zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap593 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap593.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue591 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap593);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592 = DBS01ReportUtil.retrieveFieldDataForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap593, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue591 = zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592 == null ? "" : zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getValue();
                                    if(zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592 != null ) {
                                        if(!zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue592.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIContext590 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap593 );
                                            
                                
                                if(zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue591 != null && !"".equals(zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue591)) {
                                    
                                    addContext(DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIContext590, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType unrealisedGainsInTheInvestmentPortfolioReportedForFSIValue594 = new MonetaryItemType();
                                    unrealisedGainsInTheInvestmentPortfolioReportedForFSIValue594.setContextRef(DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIContext590);
                                    
                                    unrealisedGainsInTheInvestmentPortfolioReportedForFSIValue594.setUnitRef(INR589);
                                    unrealisedGainsInTheInvestmentPortfolioReportedForFSIValue594.setDecimals("INF");
                                    unrealisedGainsInTheInvestmentPortfolioReportedForFSIValue594.setValue(new BigDecimal(zeroDBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue591));
                                    
                                    
                                    JAXBElement<MonetaryItemType> unrealisedGainsInTheInvestmentPortfolioReportedForFSIElement595 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(unrealisedGainsInTheInvestmentPortfolioReportedForFSIValue594);
                                    bodyElements.add(unrealisedGainsInTheInvestmentPortfolioReportedForFSIElement595);
                                
                            }
                        
                            
                            Unit pure596 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure596 = createUnitIfNotExist(pure596, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap600 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap600.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue598 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap600);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap600, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue598 = zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599 == null ? "" : zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIFieldDataValue599.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIContext597 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIMap600 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue598 != null && !"".equals(zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue598)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIContext597, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue601 = new RemarkForFSI();
                                    remarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue601.setContextRef(DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIContext597);
                                    
                                    remarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue601.setValue(zeroDBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue598);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIElement602 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(remarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIValue601);
                                    bodyElements.add(remarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIElement602);
                                
                            }
                        
                            
                                
                                Unit INR603 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR603 = createUnitIfNotExist(INR603, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                                Map zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap607 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap607.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue605 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap607);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap607, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue605 = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606 == null ? "" : zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getValue();
                                    if(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606 != null ) {
                                        if(!zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue606.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext604 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap607 );
                                            
                                
                                if(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue605 != null && !"".equals(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue605)) {
                                    
                                    addContext(DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext604, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue608 = new MonetaryItemType();
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue608.setContextRef(DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext604);
                                    
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue608.setUnitRef(INR603);
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue608.setDecimals("INF");
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue608.setValue(new BigDecimal(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue605));
                                    
                                    
                                    JAXBElement<MonetaryItemType> capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIElement609 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue608);
                                    bodyElements.add(capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIElement609);
                                
                            }
                        
                            
                                
                                Unit INR610 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR610 = createUnitIfNotExist(INR610, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                                Map zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap614 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap614.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue612 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap614);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap614, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue612 = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613 == null ? "" : zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getValue();
                                    if(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613 != null ) {
                                        if(!zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue613.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext611 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap614 );
                                            
                                
                                if(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue612 != null && !"".equals(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue612)) {
                                    
                                    addContext(DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext611, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue615 = new MonetaryItemType();
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue615.setContextRef(DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext611);
                                    
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue615.setUnitRef(INR610);
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue615.setDecimals("INF");
                                    capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue615.setValue(new BigDecimal(zeroDBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue612));
                                    
                                    
                                    JAXBElement<MonetaryItemType> capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIElement616 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue615);
                                    bodyElements.add(capitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIElement616);
                                
                            }
                        
                            
                            Unit pure617 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure617 = createUnitIfNotExist(pure617, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                                Map zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap621 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap621.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue619 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap621);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap621, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue619 = zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620 == null ? "" : zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getValue();
                                    if(zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620 != null ) {
                                        if(!zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getStartDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getEndDateValue();
                                        if(!zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIFieldDataValue620.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext618 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIMap621 );
                                            
                                
                                if(zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue619 != null && !"".equals(zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue619)) {
                                    
                                    addContext(DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext618, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue622 = new RemarkForFSI();
                                    remarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue622.setContextRef(DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIContext618);
                                    
                                    remarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue622.setValue(zeroDBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue619);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIElement623 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(remarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIValue622);
                                    bodyElements.add(remarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIElement623);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout2 if any typeMembers then List or Single
                //DBS01FS_Layout2 dBS01FS_Layout2 = mainReportData.getDBS01FS_Layout2();
                
                    private String dBS01FS_Layout2Method(DBS01FS_Layout2 dBS01FS_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBS01FS_Layout2 field = dBS01FS_Layout2;
                    
                    
                        
                        
                            
                                
                                Unit INR624 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR624 = createUnitIfNotExist(INR624, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - TotalAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2TotalAssetsReportedForFSIMap628 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2TotalAssetsReportedForFSIMap628.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2TotalAssetsReportedForFSIValue626 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), zeroDBS01FS_Layout2TotalAssetsReportedForFSIMap628);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627 = DBS01ReportUtil.retrieveFieldDataForElement(field.getTotalAssetsReportedForFSI(), zeroDBS01FS_Layout2TotalAssetsReportedForFSIMap628, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2TotalAssetsReportedForFSIValue626 = zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627 == null ? "" : zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getValue();
                                    if(zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627 != null ) {
                                        if(!zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2TotalAssetsReportedForFSIFieldDataValue627.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2TotalAssetsReportedForFSIContext625 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2TotalAssetsReportedForFSIMap628 );
                                        
                                
                                if(zeroDBS01FS_Layout2TotalAssetsReportedForFSIValue626 != null && !"".equals(zeroDBS01FS_Layout2TotalAssetsReportedForFSIValue626)) {
                                    
                                    addContext(DBS01FS_Layout2TotalAssetsReportedForFSIContext625, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType totalAssetsReportedForFSIValue629 = new MonetaryItemType();
                                    totalAssetsReportedForFSIValue629.setContextRef(DBS01FS_Layout2TotalAssetsReportedForFSIContext625);
                                    
                                    totalAssetsReportedForFSIValue629.setUnitRef(INR624);
                                    totalAssetsReportedForFSIValue629.setDecimals("INF");
                                    totalAssetsReportedForFSIValue629.setValue(new BigDecimal(zeroDBS01FS_Layout2TotalAssetsReportedForFSIValue626));
                                    
                                    
                                    JAXBElement<MonetaryItemType> totalAssetsReportedForFSIElement630 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createTotalAssetsReportedForFSI(totalAssetsReportedForFSIValue629);
                                    bodyElements.add(totalAssetsReportedForFSIElement630);
                                
                            }
                        
                            
                            Unit pure631 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure631 = createUnitIfNotExist(pure631, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForTotalAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIMap635 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIMap635.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIValue633 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIMap635);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForTotalAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIMap635, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIValue633 = zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634 == null ? "" : zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIFieldDataValue634.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIContext632 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIMap635 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIValue633 != null && !"".equals(zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIValue633)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIContext632, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForTotalAssetsReportedForFSIValue636 = new RemarkForFSI();
                                    remarkForTotalAssetsReportedForFSIValue636.setContextRef(DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIContext632);
                                    
                                    remarkForTotalAssetsReportedForFSIValue636.setValue(zeroDBS01FS_Layout2RemarkForTotalAssetsReportedForFSIValue633);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForTotalAssetsReportedForFSIElement637 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForTotalAssetsReportedForFSI(remarkForTotalAssetsReportedForFSIValue636);
                                    bodyElements.add(remarkForTotalAssetsReportedForFSIElement637);
                                
                            }
                        
                            
                                
                                Unit INR638 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR638 = createUnitIfNotExist(INR638, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NonfinancialAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIMap642 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIMap642.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIValue640 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIMap642);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNonfinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIMap642, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIValue640 = zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641 == null ? "" : zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getValue();
                                    if(zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641 != null ) {
                                        if(!zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIFieldDataValue641.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2NonfinancialAssetsReportedForFSIContext639 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIMap642 );
                                        
                                
                                if(zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIValue640 != null && !"".equals(zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIValue640)) {
                                    
                                    addContext(DBS01FS_Layout2NonfinancialAssetsReportedForFSIContext639, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType nonfinancialAssetsReportedForFSIValue643 = new MonetaryItemType();
                                    nonfinancialAssetsReportedForFSIValue643.setContextRef(DBS01FS_Layout2NonfinancialAssetsReportedForFSIContext639);
                                    
                                    nonfinancialAssetsReportedForFSIValue643.setUnitRef(INR638);
                                    nonfinancialAssetsReportedForFSIValue643.setDecimals("INF");
                                    nonfinancialAssetsReportedForFSIValue643.setValue(new BigDecimal(zeroDBS01FS_Layout2NonfinancialAssetsReportedForFSIValue640));
                                    
                                    
                                    JAXBElement<MonetaryItemType> nonfinancialAssetsReportedForFSIElement644 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNonfinancialAssetsReportedForFSI(nonfinancialAssetsReportedForFSIValue643);
                                    bodyElements.add(nonfinancialAssetsReportedForFSIElement644);
                                
                            }
                        
                            
                            Unit pure645 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure645 = createUnitIfNotExist(pure645, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNonfinancialAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIMap649 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIMap649.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIValue647 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIMap649);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIMap649, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIValue647 = zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648 == null ? "" : zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIFieldDataValue648.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIContext646 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIMap649 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIValue647 != null && !"".equals(zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIValue647)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIContext646, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNonfinancialAssetsReportedForFSIValue650 = new RemarkForFSI();
                                    remarkForNonfinancialAssetsReportedForFSIValue650.setContextRef(DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIContext646);
                                    
                                    remarkForNonfinancialAssetsReportedForFSIValue650.setValue(zeroDBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIValue647);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNonfinancialAssetsReportedForFSIElement651 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNonfinancialAssetsReportedForFSI(remarkForNonfinancialAssetsReportedForFSIValue650);
                                    bodyElements.add(remarkForNonfinancialAssetsReportedForFSIElement651);
                                
                            }
                        
                            
                                
                                Unit INR652 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR652 = createUnitIfNotExist(INR652, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialAssetsReportedForFSIMap656 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialAssetsReportedForFSIMap656.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialAssetsReportedForFSIValue654 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2FinancialAssetsReportedForFSIMap656);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2FinancialAssetsReportedForFSIMap656, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialAssetsReportedForFSIValue654 = zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655 == null ? "" : zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getValue();
                                    if(zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialAssetsReportedForFSIFieldDataValue655.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialAssetsReportedForFSIContext653 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialAssetsReportedForFSIMap656 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialAssetsReportedForFSIValue654 != null && !"".equals(zeroDBS01FS_Layout2FinancialAssetsReportedForFSIValue654)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialAssetsReportedForFSIContext653, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialAssetsReportedForFSIValue657 = new MonetaryItemType();
                                    financialAssetsReportedForFSIValue657.setContextRef(DBS01FS_Layout2FinancialAssetsReportedForFSIContext653);
                                    
                                    financialAssetsReportedForFSIValue657.setUnitRef(INR652);
                                    financialAssetsReportedForFSIValue657.setDecimals("INF");
                                    financialAssetsReportedForFSIValue657.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialAssetsReportedForFSIValue654));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialAssetsReportedForFSIElement658 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialAssetsReportedForFSI(financialAssetsReportedForFSIValue657);
                                    bodyElements.add(financialAssetsReportedForFSIElement658);
                                
                            }
                        
                            
                            Unit pure659 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure659 = createUnitIfNotExist(pure659, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIMap663 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIMap663.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIValue661 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIMap663);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIMap663, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIValue661 = zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662 == null ? "" : zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIFieldDataValue662.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIContext660 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIMap663 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIValue661 != null && !"".equals(zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIValue661)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIContext660, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialAssetsReportedForFSIValue664 = new RemarkForFSI();
                                    remarkForFinancialAssetsReportedForFSIValue664.setContextRef(DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIContext660);
                                    
                                    remarkForFinancialAssetsReportedForFSIValue664.setValue(zeroDBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIValue661);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialAssetsReportedForFSIElement665 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialAssetsReportedForFSI(remarkForFinancialAssetsReportedForFSIValue664);
                                    bodyElements.add(remarkForFinancialAssetsReportedForFSIElement665);
                                
                            }
                        
                            
                                
                                Unit INR666 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR666 = createUnitIfNotExist(INR666, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap670 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap670.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue668 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap670);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap670, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue668 = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669 == null ? "" : zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getValue();
                                    if(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669 != null ) {
                                        if(!zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue669.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2CurrencyAndDepositsReportedForFSIContext667 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap670 );
                                        
                                
                                if(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue668 != null && !"".equals(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue668)) {
                                    
                                    addContext(DBS01FS_Layout2CurrencyAndDepositsReportedForFSIContext667, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue671 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue671.setContextRef(DBS01FS_Layout2CurrencyAndDepositsReportedForFSIContext667);
                                    
                                    currencyAndDepositsReportedForFSIValue671.setUnitRef(INR666);
                                    currencyAndDepositsReportedForFSIValue671.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue671.setValue(new BigDecimal(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue668));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement672 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue671);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement672);
                                
                            }
                        
                            
                                
                                Unit INR673 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR673 = createUnitIfNotExist(INR673, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap677 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap677.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue675 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap677);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap677, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue675 = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676 == null ? "" : zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getValue();
                                    if(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676 != null ) {
                                        if(!zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIFieldDataValue676.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2CurrencyAndDepositsReportedForFSIContext674 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIMap677 );
                                        
                                
                                if(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue675 != null && !"".equals(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue675)) {
                                    
                                    addContext(DBS01FS_Layout2CurrencyAndDepositsReportedForFSIContext674, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue678 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue678.setContextRef(DBS01FS_Layout2CurrencyAndDepositsReportedForFSIContext674);
                                    
                                    currencyAndDepositsReportedForFSIValue678.setUnitRef(INR673);
                                    currencyAndDepositsReportedForFSIValue678.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue678.setValue(new BigDecimal(zeroDBS01FS_Layout2CurrencyAndDepositsReportedForFSIValue675));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement679 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue678);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement679);
                                
                            }
                        
                            
                            Unit pure680 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure680 = createUnitIfNotExist(pure680, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIMap684 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIMap684.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIValue682 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIMap684);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIMap684, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIValue682 = zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683 == null ? "" : zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue683.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIContext681 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIMap684 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIValue682 != null && !"".equals(zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIValue682)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIContext681, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositsReportedForFSIValue685 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositsReportedForFSIValue685.setContextRef(DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIContext681);
                                    
                                    remarkForCurrencyAndDepositsReportedForFSIValue685.setValue(zeroDBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIValue682);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositsReportedForFSIElement686 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositsReportedForFSI(remarkForCurrencyAndDepositsReportedForFSIValue685);
                                    bodyElements.add(remarkForCurrencyAndDepositsReportedForFSIElement686);
                                
                            }
                        
                            
                                
                                Unit INR687 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR687 = createUnitIfNotExist(INR687, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansAfterSpecificProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIMap691 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIMap691.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIValue689 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIMap691);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIMap691, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIValue689 = zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690 == null ? "" : zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getValue();
                                    if(zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIFieldDataValue690.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIContext688 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIMap691 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIValue689 != null && !"".equals(zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIValue689)) {
                                    
                                    addContext(DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIContext688, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansAfterSpecificProvisionsReportedForFSIValue692 = new MonetaryItemType();
                                    loansAfterSpecificProvisionsReportedForFSIValue692.setContextRef(DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIContext688);
                                    
                                    loansAfterSpecificProvisionsReportedForFSIValue692.setUnitRef(INR687);
                                    loansAfterSpecificProvisionsReportedForFSIValue692.setDecimals("INF");
                                    loansAfterSpecificProvisionsReportedForFSIValue692.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIValue689));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansAfterSpecificProvisionsReportedForFSIElement693 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansAfterSpecificProvisionsReportedForFSI(loansAfterSpecificProvisionsReportedForFSIValue692);
                                    bodyElements.add(loansAfterSpecificProvisionsReportedForFSIElement693);
                                
                            }
                        
                            
                            Unit pure694 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure694 = createUnitIfNotExist(pure694, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIMap698 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIMap698.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIValue696 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIMap698);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIMap698, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIValue696 = zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIFieldDataValue697.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIContext695 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIMap698 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIValue696 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIValue696)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIContext695, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansAfterSpecificProvisionsReportedForFSIValue699 = new RemarkForFSI();
                                    remarkForLoansAfterSpecificProvisionsReportedForFSIValue699.setContextRef(DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIContext695);
                                    
                                    remarkForLoansAfterSpecificProvisionsReportedForFSIValue699.setValue(zeroDBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIValue696);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansAfterSpecificProvisionsReportedForFSIElement700 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansAfterSpecificProvisionsReportedForFSI(remarkForLoansAfterSpecificProvisionsReportedForFSIValue699);
                                    bodyElements.add(remarkForLoansAfterSpecificProvisionsReportedForFSIElement700);
                                
                            }
                        
                            
                                
                                Unit INR701 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR701 = createUnitIfNotExist(INR701, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap705 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap705.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap705.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue703 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap705);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap705, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue703 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue704.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext702 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap705 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue703 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue703)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext702, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue706 = new MonetaryItemType();
                                    loansReportedForFSIValue706.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext702);
                                    
                                    loansReportedForFSIValue706.setUnitRef(INR701);
                                    loansReportedForFSIValue706.setDecimals("INF");
                                    loansReportedForFSIValue706.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue703));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement707 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue706);
                                    bodyElements.add(loansReportedForFSIElement707);
                                
                            }
                        
                            
                                
                                Unit INR708 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR708 = createUnitIfNotExist(INR708, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap712 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap712.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap712.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue710 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap712);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap712, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue710 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue711.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext709 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap712 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue710 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue710)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext709, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue713 = new MonetaryItemType();
                                    loansReportedForFSIValue713.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext709);
                                    
                                    loansReportedForFSIValue713.setUnitRef(INR708);
                                    loansReportedForFSIValue713.setDecimals("INF");
                                    loansReportedForFSIValue713.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue710));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement714 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue713);
                                    bodyElements.add(loansReportedForFSIElement714);
                                
                            }
                        
                            
                            Unit pure715 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure715 = createUnitIfNotExist(pure715, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap719 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap719.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap719.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue717 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap719);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap719, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue717 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue718.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext716 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap719 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue717 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue717)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext716, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue720 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue720.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext716);
                                    
                                    remarkForLoansReportedForFSIValue720.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue717);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement721 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue720);
                                    bodyElements.add(remarkForLoansReportedForFSIElement721);
                                
                            }
                        
                            
                                
                                Unit INR722 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR722 = createUnitIfNotExist(INR722, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap726 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap726.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap726.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap726.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:InterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue724 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap726);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap726, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue724 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue725.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext723 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap726 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue724 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue724)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext723, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue727 = new MonetaryItemType();
                                    loansReportedForFSIValue727.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext723);
                                    
                                    loansReportedForFSIValue727.setUnitRef(INR722);
                                    loansReportedForFSIValue727.setDecimals("INF");
                                    loansReportedForFSIValue727.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue724));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement728 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue727);
                                    bodyElements.add(loansReportedForFSIElement728);
                                
                            }
                        
                            
                            Unit pure729 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure729 = createUnitIfNotExist(pure729, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:InterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue731 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue731 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue732.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext730 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap733 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue731 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue731)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext730, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue734 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue734.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext730);
                                    
                                    remarkForLoansReportedForFSIValue734.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue731);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement735 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue734);
                                    bodyElements.add(remarkForLoansReportedForFSIElement735);
                                
                            }
                        
                            
                                
                                Unit INR736 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR736 = createUnitIfNotExist(INR736, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap740 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap740.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap740.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap740.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentInterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue738 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap740);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap740, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue738 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue739.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext737 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap740 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue738 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue738)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext737, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue741 = new MonetaryItemType();
                                    loansReportedForFSIValue741.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext737);
                                    
                                    loansReportedForFSIValue741.setUnitRef(INR736);
                                    loansReportedForFSIValue741.setDecimals("INF");
                                    loansReportedForFSIValue741.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue738));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement742 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue741);
                                    bodyElements.add(loansReportedForFSIElement742);
                                
                            }
                        
                            
                            Unit pure743 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure743 = createUnitIfNotExist(pure743, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentInterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue745 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue745 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue746.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext744 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap747 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue745 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue745)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext744, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue748 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue748.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext744);
                                    
                                    remarkForLoansReportedForFSIValue748.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue745);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement749 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue748);
                                    bodyElements.add(remarkForLoansReportedForFSIElement749);
                                
                            }
                        
                            
                                
                                Unit INR750 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR750 = createUnitIfNotExist(INR750, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap754 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap754.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap754.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap754.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:NonresidentInterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue752 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap754);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap754, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue752 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue753.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext751 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap754 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue752 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue752)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext751, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue755 = new MonetaryItemType();
                                    loansReportedForFSIValue755.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext751);
                                    
                                    loansReportedForFSIValue755.setUnitRef(INR750);
                                    loansReportedForFSIValue755.setDecimals("INF");
                                    loansReportedForFSIValue755.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue752));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement756 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue755);
                                    bodyElements.add(loansReportedForFSIElement756);
                                
                            }
                        
                            
                            Unit pure757 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure757 = createUnitIfNotExist(pure757, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:NonresidentInterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue759 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue759 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue760.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext758 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap761 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue759 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue759)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext758, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue762 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue762.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext758);
                                    
                                    remarkForLoansReportedForFSIValue762.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue759);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement763 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue762);
                                    bodyElements.add(remarkForLoansReportedForFSIElement763);
                                
                            }
                        
                            
                                
                                Unit INR764 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR764 = createUnitIfNotExist(INR764, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap768 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap768.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap768.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap768.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:NoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue766 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap768);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap768, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue766 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue767.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext765 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap768 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue766 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue766)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext765, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue769 = new MonetaryItemType();
                                    loansReportedForFSIValue769.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext765);
                                    
                                    loansReportedForFSIValue769.setUnitRef(INR764);
                                    loansReportedForFSIValue769.setDecimals("INF");
                                    loansReportedForFSIValue769.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue766));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement770 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue769);
                                    bodyElements.add(loansReportedForFSIElement770);
                                
                            }
                        
                            
                            Unit pure771 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure771 = createUnitIfNotExist(pure771, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:NoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue773 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue773 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue774.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext772 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap775 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue773 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue773)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext772, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue776 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue776.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext772);
                                    
                                    remarkForLoansReportedForFSIValue776.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue773);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement777 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue776);
                                    bodyElements.add(remarkForLoansReportedForFSIElement777);
                                
                            }
                        
                            
                                
                                Unit INR778 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR778 = createUnitIfNotExist(INR778, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap782 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap782.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap782.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap782.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue780 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap782);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap782, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue780 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue781.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext779 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap782 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue780 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue780)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext779, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue783 = new MonetaryItemType();
                                    loansReportedForFSIValue783.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext779);
                                    
                                    loansReportedForFSIValue783.setUnitRef(INR778);
                                    loansReportedForFSIValue783.setDecimals("INF");
                                    loansReportedForFSIValue783.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue780));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement784 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue783);
                                    bodyElements.add(loansReportedForFSIElement784);
                                
                            }
                        
                            
                            Unit pure785 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure785 = createUnitIfNotExist(pure785, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue787 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue787 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue788.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext786 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap789 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue787 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue787)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext786, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue790 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue790.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext786);
                                    
                                    remarkForLoansReportedForFSIValue790.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue787);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement791 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue790);
                                    bodyElements.add(remarkForLoansReportedForFSIElement791);
                                
                            }
                        
                            
                                
                                Unit INR792 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR792 = createUnitIfNotExist(INR792, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap796 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap796.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap796.put("rbi-core:CounterPartyAxis", "rbi-core:CentralBankMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap796.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap796.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue794 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap796);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap796, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue794 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue795.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext793 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap796 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue794 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue794)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext793, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue797 = new MonetaryItemType();
                                    loansReportedForFSIValue797.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext793);
                                    
                                    loansReportedForFSIValue797.setUnitRef(INR792);
                                    loansReportedForFSIValue797.setDecimals("INF");
                                    loansReportedForFSIValue797.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue794));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement798 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue797);
                                    bodyElements.add(loansReportedForFSIElement798);
                                
                            }
                        
                            
                            Unit pure799 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure799 = createUnitIfNotExist(pure799, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803.put("rbi-core:CounterPartyAxis", "rbi-core:CentralBankMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue801 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue801 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue802.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext800 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap803 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue801 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue801)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext800, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue804 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue804.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext800);
                                    
                                    remarkForLoansReportedForFSIValue804.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue801);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement805 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue804);
                                    bodyElements.add(remarkForLoansReportedForFSIElement805);
                                
                            }
                        
                            
                                
                                Unit INR806 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR806 = createUnitIfNotExist(INR806, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap810 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap810.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap810.put("rbi-core:CounterPartyAxis", "rbi-core:GovernmentSourcesMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap810.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap810.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue808 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap810);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap810, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue808 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue809.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext807 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap810 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue808 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue808)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext807, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue811 = new MonetaryItemType();
                                    loansReportedForFSIValue811.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext807);
                                    
                                    loansReportedForFSIValue811.setUnitRef(INR806);
                                    loansReportedForFSIValue811.setDecimals("INF");
                                    loansReportedForFSIValue811.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue808));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement812 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue811);
                                    bodyElements.add(loansReportedForFSIElement812);
                                
                            }
                        
                            
                            Unit pure813 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure813 = createUnitIfNotExist(pure813, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817.put("rbi-core:CounterPartyAxis", "rbi-core:GovernmentSourcesMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue815 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue815 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue816.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext814 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap817 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue815 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue815)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext814, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue818 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue818.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext814);
                                    
                                    remarkForLoansReportedForFSIValue818.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue815);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement819 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue818);
                                    bodyElements.add(remarkForLoansReportedForFSIElement819);
                                
                            }
                        
                            
                                
                                Unit INR820 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR820 = createUnitIfNotExist(INR820, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap824 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap824.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap824.put("rbi-core:CounterPartyAxis", "rbi-core:OtherFinancialCorporationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap824.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap824.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue822 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap824);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap824, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue822 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue823.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext821 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap824 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue822 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue822)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext821, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue825 = new MonetaryItemType();
                                    loansReportedForFSIValue825.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext821);
                                    
                                    loansReportedForFSIValue825.setUnitRef(INR820);
                                    loansReportedForFSIValue825.setDecimals("INF");
                                    loansReportedForFSIValue825.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue822));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement826 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue825);
                                    bodyElements.add(loansReportedForFSIElement826);
                                
                            }
                        
                            
                            Unit pure827 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure827 = createUnitIfNotExist(pure827, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831.put("rbi-core:CounterPartyAxis", "rbi-core:OtherFinancialCorporationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue829 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue829 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue830.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext828 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap831 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue829 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue829)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext828, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue832 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue832.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext828);
                                    
                                    remarkForLoansReportedForFSIValue832.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue829);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement833 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue832);
                                    bodyElements.add(remarkForLoansReportedForFSIElement833);
                                
                            }
                        
                            
                                
                                Unit INR834 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR834 = createUnitIfNotExist(INR834, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap838 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap838.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap838.put("rbi-core:CounterPartyAxis", "rbi-core:NonfinancialCorporationsInclPSUsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap838.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap838.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue836 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap838);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap838, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue836 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue837.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext835 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap838 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue836 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue836)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext835, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue839 = new MonetaryItemType();
                                    loansReportedForFSIValue839.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext835);
                                    
                                    loansReportedForFSIValue839.setUnitRef(INR834);
                                    loansReportedForFSIValue839.setDecimals("INF");
                                    loansReportedForFSIValue839.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue836));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement840 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue839);
                                    bodyElements.add(loansReportedForFSIElement840);
                                
                            }
                        
                            
                            Unit pure841 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure841 = createUnitIfNotExist(pure841, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845.put("rbi-core:CounterPartyAxis", "rbi-core:NonfinancialCorporationsInclPSUsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue843 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue843 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue844.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext842 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap845 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue843 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue843)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext842, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue846 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue846.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext842);
                                    
                                    remarkForLoansReportedForFSIValue846.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue843);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement847 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue846);
                                    bodyElements.add(remarkForLoansReportedForFSIElement847);
                                
                            }
                        
                            
                                
                                Unit INR848 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR848 = createUnitIfNotExist(INR848, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap852 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap852.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap852.put("rbi-core:CounterPartyAxis", "rbi-core:OtherDomesticSectorsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap852.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap852.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue850 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap852);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap852, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue850 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue851.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext849 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap852 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue850 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue850)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext849, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue853 = new MonetaryItemType();
                                    loansReportedForFSIValue853.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext849);
                                    
                                    loansReportedForFSIValue853.setUnitRef(INR848);
                                    loansReportedForFSIValue853.setDecimals("INF");
                                    loansReportedForFSIValue853.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue850));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement854 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue853);
                                    bodyElements.add(loansReportedForFSIElement854);
                                
                            }
                        
                            
                            Unit pure855 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure855 = createUnitIfNotExist(pure855, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859.put("rbi-core:CounterPartyAxis", "rbi-core:OtherDomesticSectorsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue857 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue857 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue858.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext856 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap859 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue857 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue857)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext856, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue860 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue860.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext856);
                                    
                                    remarkForLoansReportedForFSIValue860.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue857);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement861 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue860);
                                    bodyElements.add(remarkForLoansReportedForFSIElement861);
                                
                            }
                        
                            
                                
                                Unit INR862 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR862 = createUnitIfNotExist(INR862, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LoansReportedForFSIMap866 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap866.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap866.put("rbi-core:CounterPartyAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap866.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2LoansReportedForFSIMap866.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:NonresidentsNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LoansReportedForFSIValue864 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap866);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout2LoansReportedForFSIMap866, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LoansReportedForFSIValue864 = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865 == null ? "" : zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getValue();
                                    if(zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865 != null ) {
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LoansReportedForFSIFieldDataValue865.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LoansReportedForFSIContext863 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LoansReportedForFSIMap866 );
                                        
                                
                                if(zeroDBS01FS_Layout2LoansReportedForFSIValue864 != null && !"".equals(zeroDBS01FS_Layout2LoansReportedForFSIValue864)) {
                                    
                                    addContext(DBS01FS_Layout2LoansReportedForFSIContext863, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue867 = new MonetaryItemType();
                                    loansReportedForFSIValue867.setContextRef(DBS01FS_Layout2LoansReportedForFSIContext863);
                                    
                                    loansReportedForFSIValue867.setUnitRef(INR862);
                                    loansReportedForFSIValue867.setDecimals("INF");
                                    loansReportedForFSIValue867.setValue(new BigDecimal(zeroDBS01FS_Layout2LoansReportedForFSIValue864));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement868 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue867);
                                    bodyElements.add(loansReportedForFSIElement868);
                                
                            }
                        
                            
                            Unit pure869 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure869 = createUnitIfNotExist(pure869, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:NonresidentsNoninterbankMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue871 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue871 = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872 == null ? "" : zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLoansReportedForFSIFieldDataValue872.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLoansReportedForFSIContext870 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLoansReportedForFSIMap873 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue871 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue871)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLoansReportedForFSIContext870, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue874 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue874.setContextRef(DBS01FS_Layout2RemarkForLoansReportedForFSIContext870);
                                    
                                    remarkForLoansReportedForFSIValue874.setValue(zeroDBS01FS_Layout2RemarkForLoansReportedForFSIValue871);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement875 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue874);
                                    bodyElements.add(remarkForLoansReportedForFSIElement875);
                                
                            }
                        
                            
                                
                                Unit INR876 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR876 = createUnitIfNotExist(INR876, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SpecificProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap880 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap880.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue878 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap880);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap880, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue878 = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879 == null ? "" : zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getValue();
                                    if(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879 != null ) {
                                        if(!zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue879.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2SpecificProvisionsReportedForFSIContext877 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap880 );
                                        
                                
                                if(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue878 != null && !"".equals(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue878)) {
                                    
                                    addContext(DBS01FS_Layout2SpecificProvisionsReportedForFSIContext877, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType specificProvisionsReportedForFSIValue881 = new MonetaryItemType();
                                    specificProvisionsReportedForFSIValue881.setContextRef(DBS01FS_Layout2SpecificProvisionsReportedForFSIContext877);
                                    
                                    specificProvisionsReportedForFSIValue881.setUnitRef(INR876);
                                    specificProvisionsReportedForFSIValue881.setDecimals("INF");
                                    specificProvisionsReportedForFSIValue881.setValue(new BigDecimal(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue878));
                                    
                                    
                                    JAXBElement<MonetaryItemType> specificProvisionsReportedForFSIElement882 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSpecificProvisionsReportedForFSI(specificProvisionsReportedForFSIValue881);
                                    bodyElements.add(specificProvisionsReportedForFSIElement882);
                                
                            }
                        
                            
                                
                                Unit INR883 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR883 = createUnitIfNotExist(INR883, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SpecificProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap887 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap887.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue885 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap887);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap887, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue885 = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886 == null ? "" : zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getValue();
                                    if(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886 != null ) {
                                        if(!zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIFieldDataValue886.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2SpecificProvisionsReportedForFSIContext884 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIMap887 );
                                        
                                
                                if(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue885 != null && !"".equals(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue885)) {
                                    
                                    addContext(DBS01FS_Layout2SpecificProvisionsReportedForFSIContext884, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType specificProvisionsReportedForFSIValue888 = new MonetaryItemType();
                                    specificProvisionsReportedForFSIValue888.setContextRef(DBS01FS_Layout2SpecificProvisionsReportedForFSIContext884);
                                    
                                    specificProvisionsReportedForFSIValue888.setUnitRef(INR883);
                                    specificProvisionsReportedForFSIValue888.setDecimals("INF");
                                    specificProvisionsReportedForFSIValue888.setValue(new BigDecimal(zeroDBS01FS_Layout2SpecificProvisionsReportedForFSIValue885));
                                    
                                    
                                    JAXBElement<MonetaryItemType> specificProvisionsReportedForFSIElement889 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSpecificProvisionsReportedForFSI(specificProvisionsReportedForFSIValue888);
                                    bodyElements.add(specificProvisionsReportedForFSIElement889);
                                
                            }
                        
                            
                            Unit pure890 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure890 = createUnitIfNotExist(pure890, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSpecificProvisionsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIMap894 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIMap894.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIValue892 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIMap894);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIMap894, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIValue892 = zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893 == null ? "" : zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIFieldDataValue893.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIContext891 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIMap894 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIValue892 != null && !"".equals(zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIValue892)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIContext891, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSpecificProvisionsReportedForFSIValue895 = new RemarkForFSI();
                                    remarkForSpecificProvisionsReportedForFSIValue895.setContextRef(DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIContext891);
                                    
                                    remarkForSpecificProvisionsReportedForFSIValue895.setValue(zeroDBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIValue892);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSpecificProvisionsReportedForFSIElement896 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSpecificProvisionsReportedForFSI(remarkForSpecificProvisionsReportedForFSIValue895);
                                    bodyElements.add(remarkForSpecificProvisionsReportedForFSIElement896);
                                
                            }
                        
                            
                                
                                Unit INR897 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR897 = createUnitIfNotExist(INR897, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap901 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap901.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue899 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap901);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap901, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue899 = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900 == null ? "" : zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getValue();
                                    if(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900 != null ) {
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue900.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DebtSecuritiesReportedForFSIContext898 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap901 );
                                        
                                
                                if(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue899 != null && !"".equals(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue899)) {
                                    
                                    addContext(DBS01FS_Layout2DebtSecuritiesReportedForFSIContext898, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue902 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue902.setContextRef(DBS01FS_Layout2DebtSecuritiesReportedForFSIContext898);
                                    
                                    debtSecuritiesReportedForFSIValue902.setUnitRef(INR897);
                                    debtSecuritiesReportedForFSIValue902.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue902.setValue(new BigDecimal(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue899));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement903 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue902);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement903);
                                
                            }
                        
                            
                                
                                Unit INR904 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR904 = createUnitIfNotExist(INR904, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap908 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap908.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue906 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap908);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap908, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue906 = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907 == null ? "" : zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getValue();
                                    if(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907 != null ) {
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIFieldDataValue907.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DebtSecuritiesReportedForFSIContext905 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIMap908 );
                                        
                                
                                if(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue906 != null && !"".equals(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue906)) {
                                    
                                    addContext(DBS01FS_Layout2DebtSecuritiesReportedForFSIContext905, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue909 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue909.setContextRef(DBS01FS_Layout2DebtSecuritiesReportedForFSIContext905);
                                    
                                    debtSecuritiesReportedForFSIValue909.setUnitRef(INR904);
                                    debtSecuritiesReportedForFSIValue909.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue909.setValue(new BigDecimal(zeroDBS01FS_Layout2DebtSecuritiesReportedForFSIValue906));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement910 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue909);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement910);
                                
                            }
                        
                            
                            Unit pure911 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure911 = createUnitIfNotExist(pure911, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIMap915 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIMap915.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIValue913 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIMap915);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIMap915, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIValue913 = zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914 == null ? "" : zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIFieldDataValue914.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIContext912 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIMap915 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIValue913 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIValue913)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIContext912, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesReportedForFSIValue916 = new RemarkForFSI();
                                    remarkForDebtSecuritiesReportedForFSIValue916.setContextRef(DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIContext912);
                                    
                                    remarkForDebtSecuritiesReportedForFSIValue916.setValue(zeroDBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIValue913);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesReportedForFSIElement917 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesReportedForFSI(remarkForDebtSecuritiesReportedForFSIValue916);
                                    bodyElements.add(remarkForDebtSecuritiesReportedForFSIElement917);
                                
                            }
                        
                            
                                
                                Unit INR918 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR918 = createUnitIfNotExist(INR918, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap922 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap922.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue920 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap922);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap922, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue920 = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921 == null ? "" : zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getValue();
                                    if(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921 != null ) {
                                        if(!zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue921.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2SharesAndOtherEquityReportedForFSIContext919 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap922 );
                                        
                                
                                if(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue920 != null && !"".equals(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue920)) {
                                    
                                    addContext(DBS01FS_Layout2SharesAndOtherEquityReportedForFSIContext919, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityReportedForFSIValue923 = new MonetaryItemType();
                                    sharesAndOtherEquityReportedForFSIValue923.setContextRef(DBS01FS_Layout2SharesAndOtherEquityReportedForFSIContext919);
                                    
                                    sharesAndOtherEquityReportedForFSIValue923.setUnitRef(INR918);
                                    sharesAndOtherEquityReportedForFSIValue923.setDecimals("INF");
                                    sharesAndOtherEquityReportedForFSIValue923.setValue(new BigDecimal(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue920));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityReportedForFSIElement924 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityReportedForFSI(sharesAndOtherEquityReportedForFSIValue923);
                                    bodyElements.add(sharesAndOtherEquityReportedForFSIElement924);
                                
                            }
                        
                            
                                
                                Unit INR925 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR925 = createUnitIfNotExist(INR925, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap929 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap929.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue927 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap929);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap929, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue927 = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928 == null ? "" : zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getValue();
                                    if(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928 != null ) {
                                        if(!zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIFieldDataValue928.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2SharesAndOtherEquityReportedForFSIContext926 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIMap929 );
                                        
                                
                                if(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue927 != null && !"".equals(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue927)) {
                                    
                                    addContext(DBS01FS_Layout2SharesAndOtherEquityReportedForFSIContext926, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityReportedForFSIValue930 = new MonetaryItemType();
                                    sharesAndOtherEquityReportedForFSIValue930.setContextRef(DBS01FS_Layout2SharesAndOtherEquityReportedForFSIContext926);
                                    
                                    sharesAndOtherEquityReportedForFSIValue930.setUnitRef(INR925);
                                    sharesAndOtherEquityReportedForFSIValue930.setDecimals("INF");
                                    sharesAndOtherEquityReportedForFSIValue930.setValue(new BigDecimal(zeroDBS01FS_Layout2SharesAndOtherEquityReportedForFSIValue927));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityReportedForFSIElement931 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityReportedForFSI(sharesAndOtherEquityReportedForFSIValue930);
                                    bodyElements.add(sharesAndOtherEquityReportedForFSIElement931);
                                
                            }
                        
                            
                            Unit pure932 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure932 = createUnitIfNotExist(pure932, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIMap936 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIMap936.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIValue934 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIMap936);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIMap936, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIValue934 = zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935 == null ? "" : zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue935.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIContext933 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIMap936 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIValue934 != null && !"".equals(zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIValue934)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIContext933, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesAndOtherEquityReportedForFSIValue937 = new RemarkForFSI();
                                    remarkForSharesAndOtherEquityReportedForFSIValue937.setContextRef(DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIContext933);
                                    
                                    remarkForSharesAndOtherEquityReportedForFSIValue937.setValue(zeroDBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIValue934);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesAndOtherEquityReportedForFSIElement938 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesAndOtherEquityReportedForFSI(remarkForSharesAndOtherEquityReportedForFSIValue937);
                                    bodyElements.add(remarkForSharesAndOtherEquityReportedForFSIElement938);
                                
                            }
                        
                            
                                
                                Unit INR939 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR939 = createUnitIfNotExist(INR939, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap943 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap943.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue941 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap943);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap943, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue941 = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942 == null ? "" : zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getValue();
                                    if(zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942 != null ) {
                                        if(!zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue942.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2OtherAssetsReportedForFSIContext940 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap943 );
                                        
                                
                                if(zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue941 != null && !"".equals(zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue941)) {
                                    
                                    addContext(DBS01FS_Layout2OtherAssetsReportedForFSIContext940, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherAssetsReportedForFSIValue944 = new MonetaryItemType();
                                    otherAssetsReportedForFSIValue944.setContextRef(DBS01FS_Layout2OtherAssetsReportedForFSIContext940);
                                    
                                    otherAssetsReportedForFSIValue944.setUnitRef(INR939);
                                    otherAssetsReportedForFSIValue944.setDecimals("INF");
                                    otherAssetsReportedForFSIValue944.setValue(new BigDecimal(zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue941));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherAssetsReportedForFSIElement945 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherAssetsReportedForFSI(otherAssetsReportedForFSIValue944);
                                    bodyElements.add(otherAssetsReportedForFSIElement945);
                                
                            }
                        
                            
                                
                                Unit INR946 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR946 = createUnitIfNotExist(INR946, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap950 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap950.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue948 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap950);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap950, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue948 = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949 == null ? "" : zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getValue();
                                    if(zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949 != null ) {
                                        if(!zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2OtherAssetsReportedForFSIFieldDataValue949.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2OtherAssetsReportedForFSIContext947 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2OtherAssetsReportedForFSIMap950 );
                                        
                                
                                if(zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue948 != null && !"".equals(zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue948)) {
                                    
                                    addContext(DBS01FS_Layout2OtherAssetsReportedForFSIContext947, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherAssetsReportedForFSIValue951 = new MonetaryItemType();
                                    otherAssetsReportedForFSIValue951.setContextRef(DBS01FS_Layout2OtherAssetsReportedForFSIContext947);
                                    
                                    otherAssetsReportedForFSIValue951.setUnitRef(INR946);
                                    otherAssetsReportedForFSIValue951.setDecimals("INF");
                                    otherAssetsReportedForFSIValue951.setValue(new BigDecimal(zeroDBS01FS_Layout2OtherAssetsReportedForFSIValue948));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherAssetsReportedForFSIElement952 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherAssetsReportedForFSI(otherAssetsReportedForFSIValue951);
                                    bodyElements.add(otherAssetsReportedForFSIElement952);
                                
                            }
                        
                            
                            Unit pure953 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure953 = createUnitIfNotExist(pure953, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIMap957 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIMap957.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIValue955 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIMap957);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIMap957, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIValue955 = zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956 == null ? "" : zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIFieldDataValue956.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIContext954 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIMap957 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIValue955 != null && !"".equals(zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIValue955)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIContext954, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherAssetsReportedForFSIValue958 = new RemarkForFSI();
                                    remarkForOtherAssetsReportedForFSIValue958.setContextRef(DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIContext954);
                                    
                                    remarkForOtherAssetsReportedForFSIValue958.setValue(zeroDBS01FS_Layout2RemarkForOtherAssetsReportedForFSIValue955);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherAssetsReportedForFSIElement959 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherAssetsReportedForFSI(remarkForOtherAssetsReportedForFSIValue958);
                                    bodyElements.add(remarkForOtherAssetsReportedForFSIElement959);
                                
                            }
                        
                            
                                
                                Unit INR960 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR960 = createUnitIfNotExist(INR960, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap964 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap964.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue962 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap964);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap964, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue962 = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963 == null ? "" : zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getValue();
                                    if(zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963 != null ) {
                                        if(!zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue963.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LiabilitiesReportedForFSIContext961 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap964 );
                                        
                                
                                if(zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue962 != null && !"".equals(zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue962)) {
                                    
                                    addContext(DBS01FS_Layout2LiabilitiesReportedForFSIContext961, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liabilitiesReportedForFSIValue965 = new MonetaryItemType();
                                    liabilitiesReportedForFSIValue965.setContextRef(DBS01FS_Layout2LiabilitiesReportedForFSIContext961);
                                    
                                    liabilitiesReportedForFSIValue965.setUnitRef(INR960);
                                    liabilitiesReportedForFSIValue965.setDecimals("INF");
                                    liabilitiesReportedForFSIValue965.setValue(new BigDecimal(zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue962));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liabilitiesReportedForFSIElement966 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiabilitiesReportedForFSI(liabilitiesReportedForFSIValue965);
                                    bodyElements.add(liabilitiesReportedForFSIElement966);
                                
                            }
                        
                            
                                
                                Unit INR967 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR967 = createUnitIfNotExist(INR967, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap971 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap971.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue969 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap971);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap971, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue969 = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970 == null ? "" : zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getValue();
                                    if(zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970 != null ) {
                                        if(!zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2LiabilitiesReportedForFSIFieldDataValue970.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2LiabilitiesReportedForFSIContext968 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2LiabilitiesReportedForFSIMap971 );
                                        
                                
                                if(zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue969 != null && !"".equals(zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue969)) {
                                    
                                    addContext(DBS01FS_Layout2LiabilitiesReportedForFSIContext968, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liabilitiesReportedForFSIValue972 = new MonetaryItemType();
                                    liabilitiesReportedForFSIValue972.setContextRef(DBS01FS_Layout2LiabilitiesReportedForFSIContext968);
                                    
                                    liabilitiesReportedForFSIValue972.setUnitRef(INR967);
                                    liabilitiesReportedForFSIValue972.setDecimals("INF");
                                    liabilitiesReportedForFSIValue972.setValue(new BigDecimal(zeroDBS01FS_Layout2LiabilitiesReportedForFSIValue969));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liabilitiesReportedForFSIElement973 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiabilitiesReportedForFSI(liabilitiesReportedForFSIValue972);
                                    bodyElements.add(liabilitiesReportedForFSIElement973);
                                
                            }
                        
                            
                            Unit pure974 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure974 = createUnitIfNotExist(pure974, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIMap978 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIMap978.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIValue976 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIMap978);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIMap978, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIValue976 = zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977 == null ? "" : zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIFieldDataValue977.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIContext975 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIMap978 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIValue976 != null && !"".equals(zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIValue976)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIContext975, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiabilitiesReportedForFSIValue979 = new RemarkForFSI();
                                    remarkForLiabilitiesReportedForFSIValue979.setContextRef(DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIContext975);
                                    
                                    remarkForLiabilitiesReportedForFSIValue979.setValue(zeroDBS01FS_Layout2RemarkForLiabilitiesReportedForFSIValue976);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiabilitiesReportedForFSIElement980 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiabilitiesReportedForFSI(remarkForLiabilitiesReportedForFSIValue979);
                                    bodyElements.add(remarkForLiabilitiesReportedForFSIElement980);
                                
                            }
                        
                            
                                
                                Unit INR981 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR981 = createUnitIfNotExist(INR981, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DepositsReportedForFSIMap985 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap985.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DepositsReportedForFSIValue983 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap985);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap985, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DepositsReportedForFSIValue983 = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984 == null ? "" : zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getValue();
                                    if(zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984 != null ) {
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue984.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DepositsReportedForFSIContext982 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DepositsReportedForFSIMap985 );
                                        
                                
                                if(zeroDBS01FS_Layout2DepositsReportedForFSIValue983 != null && !"".equals(zeroDBS01FS_Layout2DepositsReportedForFSIValue983)) {
                                    
                                    addContext(DBS01FS_Layout2DepositsReportedForFSIContext982, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType depositsReportedForFSIValue986 = new MonetaryItemType();
                                    depositsReportedForFSIValue986.setContextRef(DBS01FS_Layout2DepositsReportedForFSIContext982);
                                    
                                    depositsReportedForFSIValue986.setUnitRef(INR981);
                                    depositsReportedForFSIValue986.setDecimals("INF");
                                    depositsReportedForFSIValue986.setValue(new BigDecimal(zeroDBS01FS_Layout2DepositsReportedForFSIValue983));
                                    
                                    
                                    JAXBElement<MonetaryItemType> depositsReportedForFSIElement987 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDepositsReportedForFSI(depositsReportedForFSIValue986);
                                    bodyElements.add(depositsReportedForFSIElement987);
                                
                            }
                        
                            
                            Unit pure988 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure988 = createUnitIfNotExist(pure988, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap992 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap992.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue990 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap992);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap992, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue990 = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991 == null ? "" : zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue991.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDepositsReportedForFSIContext989 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap992 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue990 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue990)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext989, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositsReportedForFSIValue993 = new RemarkForFSI();
                                    remarkForDepositsReportedForFSIValue993.setContextRef(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext989);
                                    
                                    remarkForDepositsReportedForFSIValue993.setValue(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue990);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositsReportedForFSIElement994 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositsReportedForFSI(remarkForDepositsReportedForFSIValue993);
                                    bodyElements.add(remarkForDepositsReportedForFSIElement994);
                                
                            }
                        
                            
                                
                                Unit INR995 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR995 = createUnitIfNotExist(INR995, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DepositsReportedForFSIMap999 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap999.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap999.put("in-rbi-rep:TypeOfDepositsAxis", "rbi-core:CustomerDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DepositsReportedForFSIValue997 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap999);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap999, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DepositsReportedForFSIValue997 = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998 == null ? "" : zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getValue();
                                    if(zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998 != null ) {
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue998.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DepositsReportedForFSIContext996 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DepositsReportedForFSIMap999 );
                                        
                                
                                if(zeroDBS01FS_Layout2DepositsReportedForFSIValue997 != null && !"".equals(zeroDBS01FS_Layout2DepositsReportedForFSIValue997)) {
                                    
                                    addContext(DBS01FS_Layout2DepositsReportedForFSIContext996, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType depositsReportedForFSIValue1000 = new MonetaryItemType();
                                    depositsReportedForFSIValue1000.setContextRef(DBS01FS_Layout2DepositsReportedForFSIContext996);
                                    
                                    depositsReportedForFSIValue1000.setUnitRef(INR995);
                                    depositsReportedForFSIValue1000.setDecimals("INF");
                                    depositsReportedForFSIValue1000.setValue(new BigDecimal(zeroDBS01FS_Layout2DepositsReportedForFSIValue997));
                                    
                                    
                                    JAXBElement<MonetaryItemType> depositsReportedForFSIElement1001 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDepositsReportedForFSI(depositsReportedForFSIValue1000);
                                    bodyElements.add(depositsReportedForFSIElement1001);
                                
                            }
                        
                            
                            Unit pure1002 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1002 = createUnitIfNotExist(pure1002, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1006 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1006.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1006.put("in-rbi-rep:TypeOfDepositsAxis", "rbi-core:CustomerDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1004 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1006);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1006, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1004 = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005 == null ? "" : zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1005.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1003 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1006 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1004 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1004)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1003, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositsReportedForFSIValue1007 = new RemarkForFSI();
                                    remarkForDepositsReportedForFSIValue1007.setContextRef(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1003);
                                    
                                    remarkForDepositsReportedForFSIValue1007.setValue(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1004);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositsReportedForFSIElement1008 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositsReportedForFSI(remarkForDepositsReportedForFSIValue1007);
                                    bodyElements.add(remarkForDepositsReportedForFSIElement1008);
                                
                            }
                        
                            
                                
                                Unit INR1009 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1009 = createUnitIfNotExist(INR1009, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DepositsReportedForFSIMap1013 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1013.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1013.put("in-rbi-rep:TypeOfDepositsAxis", "in-rbi-rep:InterBankDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DepositsReportedForFSIValue1011 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1013);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1013, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DepositsReportedForFSIValue1011 = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012 == null ? "" : zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getValue();
                                    if(zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012 != null ) {
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1012.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DepositsReportedForFSIContext1010 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DepositsReportedForFSIMap1013 );
                                        
                                
                                if(zeroDBS01FS_Layout2DepositsReportedForFSIValue1011 != null && !"".equals(zeroDBS01FS_Layout2DepositsReportedForFSIValue1011)) {
                                    
                                    addContext(DBS01FS_Layout2DepositsReportedForFSIContext1010, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType depositsReportedForFSIValue1014 = new MonetaryItemType();
                                    depositsReportedForFSIValue1014.setContextRef(DBS01FS_Layout2DepositsReportedForFSIContext1010);
                                    
                                    depositsReportedForFSIValue1014.setUnitRef(INR1009);
                                    depositsReportedForFSIValue1014.setDecimals("INF");
                                    depositsReportedForFSIValue1014.setValue(new BigDecimal(zeroDBS01FS_Layout2DepositsReportedForFSIValue1011));
                                    
                                    
                                    JAXBElement<MonetaryItemType> depositsReportedForFSIElement1015 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDepositsReportedForFSI(depositsReportedForFSIValue1014);
                                    bodyElements.add(depositsReportedForFSIElement1015);
                                
                            }
                        
                            
                            Unit pure1016 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1016 = createUnitIfNotExist(pure1016, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1020 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1020.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1020.put("in-rbi-rep:TypeOfDepositsAxis", "in-rbi-rep:InterBankDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1018 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1020);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1020, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1018 = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019 == null ? "" : zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1019.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1017 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1020 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1018 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1018)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1017, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositsReportedForFSIValue1021 = new RemarkForFSI();
                                    remarkForDepositsReportedForFSIValue1021.setContextRef(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1017);
                                    
                                    remarkForDepositsReportedForFSIValue1021.setValue(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1018);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositsReportedForFSIElement1022 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositsReportedForFSI(remarkForDepositsReportedForFSIValue1021);
                                    bodyElements.add(remarkForDepositsReportedForFSIElement1022);
                                
                            }
                        
                            
                                
                                Unit INR1023 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1023 = createUnitIfNotExist(INR1023, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DepositsReportedForFSIMap1027 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1027.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1027.put("in-rbi-rep:TypeOfDepositsAxis", "rbi-core:ResidentInterbankDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DepositsReportedForFSIValue1025 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1027);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1027, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DepositsReportedForFSIValue1025 = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026 == null ? "" : zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getValue();
                                    if(zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026 != null ) {
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1026.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DepositsReportedForFSIContext1024 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DepositsReportedForFSIMap1027 );
                                        
                                
                                if(zeroDBS01FS_Layout2DepositsReportedForFSIValue1025 != null && !"".equals(zeroDBS01FS_Layout2DepositsReportedForFSIValue1025)) {
                                    
                                    addContext(DBS01FS_Layout2DepositsReportedForFSIContext1024, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType depositsReportedForFSIValue1028 = new MonetaryItemType();
                                    depositsReportedForFSIValue1028.setContextRef(DBS01FS_Layout2DepositsReportedForFSIContext1024);
                                    
                                    depositsReportedForFSIValue1028.setUnitRef(INR1023);
                                    depositsReportedForFSIValue1028.setDecimals("INF");
                                    depositsReportedForFSIValue1028.setValue(new BigDecimal(zeroDBS01FS_Layout2DepositsReportedForFSIValue1025));
                                    
                                    
                                    JAXBElement<MonetaryItemType> depositsReportedForFSIElement1029 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDepositsReportedForFSI(depositsReportedForFSIValue1028);
                                    bodyElements.add(depositsReportedForFSIElement1029);
                                
                            }
                        
                            
                            Unit pure1030 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1030 = createUnitIfNotExist(pure1030, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1034 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1034.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1034.put("in-rbi-rep:TypeOfDepositsAxis", "rbi-core:ResidentInterbankDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1032 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1034);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1034, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1032 = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033 == null ? "" : zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1033.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1031 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1034 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1032 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1032)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1031, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositsReportedForFSIValue1035 = new RemarkForFSI();
                                    remarkForDepositsReportedForFSIValue1035.setContextRef(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1031);
                                    
                                    remarkForDepositsReportedForFSIValue1035.setValue(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1032);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositsReportedForFSIElement1036 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositsReportedForFSI(remarkForDepositsReportedForFSIValue1035);
                                    bodyElements.add(remarkForDepositsReportedForFSIElement1036);
                                
                            }
                        
                            
                                
                                Unit INR1037 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1037 = createUnitIfNotExist(INR1037, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DepositsReportedForFSIMap1041 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1041.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1041.put("in-rbi-rep:TypeOfDepositsAxis", "rbi-core:NonresidentInterbankDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DepositsReportedForFSIValue1039 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1041);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1041, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DepositsReportedForFSIValue1039 = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040 == null ? "" : zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getValue();
                                    if(zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040 != null ) {
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1040.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DepositsReportedForFSIContext1038 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DepositsReportedForFSIMap1041 );
                                        
                                
                                if(zeroDBS01FS_Layout2DepositsReportedForFSIValue1039 != null && !"".equals(zeroDBS01FS_Layout2DepositsReportedForFSIValue1039)) {
                                    
                                    addContext(DBS01FS_Layout2DepositsReportedForFSIContext1038, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType depositsReportedForFSIValue1042 = new MonetaryItemType();
                                    depositsReportedForFSIValue1042.setContextRef(DBS01FS_Layout2DepositsReportedForFSIContext1038);
                                    
                                    depositsReportedForFSIValue1042.setUnitRef(INR1037);
                                    depositsReportedForFSIValue1042.setDecimals("INF");
                                    depositsReportedForFSIValue1042.setValue(new BigDecimal(zeroDBS01FS_Layout2DepositsReportedForFSIValue1039));
                                    
                                    
                                    JAXBElement<MonetaryItemType> depositsReportedForFSIElement1043 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDepositsReportedForFSI(depositsReportedForFSIValue1042);
                                    bodyElements.add(depositsReportedForFSIElement1043);
                                
                            }
                        
                            
                            Unit pure1044 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1044 = createUnitIfNotExist(pure1044, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1048 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1048.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1048.put("in-rbi-rep:TypeOfDepositsAxis", "rbi-core:NonresidentInterbankDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1046 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1048);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1048, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1046 = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047 == null ? "" : zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1047.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1045 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1048 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1046 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1046)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1045, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositsReportedForFSIValue1049 = new RemarkForFSI();
                                    remarkForDepositsReportedForFSIValue1049.setContextRef(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1045);
                                    
                                    remarkForDepositsReportedForFSIValue1049.setValue(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1046);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositsReportedForFSIElement1050 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositsReportedForFSI(remarkForDepositsReportedForFSIValue1049);
                                    bodyElements.add(remarkForDepositsReportedForFSIElement1050);
                                
                            }
                        
                            
                                
                                Unit INR1051 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1051 = createUnitIfNotExist(INR1051, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DepositsReportedForFSIMap1055 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1055.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2DepositsReportedForFSIMap1055.put("in-rbi-rep:TypeOfDepositsAxis", "in-rbi-rep:OtherDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DepositsReportedForFSIValue1053 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1055);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDepositsReportedForFSI(), zeroDBS01FS_Layout2DepositsReportedForFSIMap1055, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DepositsReportedForFSIValue1053 = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054 == null ? "" : zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getValue();
                                    if(zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054 != null ) {
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DepositsReportedForFSIFieldDataValue1054.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DepositsReportedForFSIContext1052 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DepositsReportedForFSIMap1055 );
                                        
                                
                                if(zeroDBS01FS_Layout2DepositsReportedForFSIValue1053 != null && !"".equals(zeroDBS01FS_Layout2DepositsReportedForFSIValue1053)) {
                                    
                                    addContext(DBS01FS_Layout2DepositsReportedForFSIContext1052, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType depositsReportedForFSIValue1056 = new MonetaryItemType();
                                    depositsReportedForFSIValue1056.setContextRef(DBS01FS_Layout2DepositsReportedForFSIContext1052);
                                    
                                    depositsReportedForFSIValue1056.setUnitRef(INR1051);
                                    depositsReportedForFSIValue1056.setDecimals("INF");
                                    depositsReportedForFSIValue1056.setValue(new BigDecimal(zeroDBS01FS_Layout2DepositsReportedForFSIValue1053));
                                    
                                    
                                    JAXBElement<MonetaryItemType> depositsReportedForFSIElement1057 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDepositsReportedForFSI(depositsReportedForFSIValue1056);
                                    bodyElements.add(depositsReportedForFSIElement1057);
                                
                            }
                        
                            
                            Unit pure1058 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1058 = createUnitIfNotExist(pure1058, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1062 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1062.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1062.put("in-rbi-rep:TypeOfDepositsAxis", "in-rbi-rep:OtherDepositsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1060 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1062);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositsReportedForFSI(), zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1062, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1060 = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061 == null ? "" : zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIFieldDataValue1061.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1059 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIMap1062 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1060 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1060)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1059, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositsReportedForFSIValue1063 = new RemarkForFSI();
                                    remarkForDepositsReportedForFSIValue1063.setContextRef(DBS01FS_Layout2RemarkForDepositsReportedForFSIContext1059);
                                    
                                    remarkForDepositsReportedForFSIValue1063.setValue(zeroDBS01FS_Layout2RemarkForDepositsReportedForFSIValue1060);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositsReportedForFSIElement1064 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositsReportedForFSI(remarkForDepositsReportedForFSIValue1063);
                                    bodyElements.add(remarkForDepositsReportedForFSIElement1064);
                                
                            }
                        
                            
                                
                                Unit INR1065 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1065 = createUnitIfNotExist(INR1065, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - BorrowingsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2BorrowingsReportedForFSIMap1069 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2BorrowingsReportedForFSIMap1069.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2BorrowingsReportedForFSIValue1067 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), zeroDBS01FS_Layout2BorrowingsReportedForFSIMap1069);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068 = DBS01ReportUtil.retrieveFieldDataForElement(field.getBorrowingsReportedForFSI(), zeroDBS01FS_Layout2BorrowingsReportedForFSIMap1069, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2BorrowingsReportedForFSIValue1067 = zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068 == null ? "" : zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getValue();
                                    if(zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068 != null ) {
                                        if(!zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2BorrowingsReportedForFSIFieldDataValue1068.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2BorrowingsReportedForFSIContext1066 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2BorrowingsReportedForFSIMap1069 );
                                        
                                
                                if(zeroDBS01FS_Layout2BorrowingsReportedForFSIValue1067 != null && !"".equals(zeroDBS01FS_Layout2BorrowingsReportedForFSIValue1067)) {
                                    
                                    addContext(DBS01FS_Layout2BorrowingsReportedForFSIContext1066, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType borrowingsReportedForFSIValue1070 = new MonetaryItemType();
                                    borrowingsReportedForFSIValue1070.setContextRef(DBS01FS_Layout2BorrowingsReportedForFSIContext1066);
                                    
                                    borrowingsReportedForFSIValue1070.setUnitRef(INR1065);
                                    borrowingsReportedForFSIValue1070.setDecimals("INF");
                                    borrowingsReportedForFSIValue1070.setValue(new BigDecimal(zeroDBS01FS_Layout2BorrowingsReportedForFSIValue1067));
                                    
                                    
                                    JAXBElement<MonetaryItemType> borrowingsReportedForFSIElement1071 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBorrowingsReportedForFSI(borrowingsReportedForFSIValue1070);
                                    bodyElements.add(borrowingsReportedForFSIElement1071);
                                
                            }
                        
                            
                            Unit pure1072 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1072 = createUnitIfNotExist(pure1072, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForBorrowingsReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIMap1076 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIMap1076.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIValue1074 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIMap1076);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForBorrowingsReportedForFSI(), zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIMap1076, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIValue1074 = zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075 == null ? "" : zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIFieldDataValue1075.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForBorrowingsReportedForFSIContext1073 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIMap1076 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIValue1074 != null && !"".equals(zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIValue1074)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForBorrowingsReportedForFSIContext1073, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForBorrowingsReportedForFSIValue1077 = new RemarkForFSI();
                                    remarkForBorrowingsReportedForFSIValue1077.setContextRef(DBS01FS_Layout2RemarkForBorrowingsReportedForFSIContext1073);
                                    
                                    remarkForBorrowingsReportedForFSIValue1077.setValue(zeroDBS01FS_Layout2RemarkForBorrowingsReportedForFSIValue1074);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForBorrowingsReportedForFSIElement1078 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForBorrowingsReportedForFSI(remarkForBorrowingsReportedForFSIValue1077);
                                    bodyElements.add(remarkForBorrowingsReportedForFSIElement1078);
                                
                            }
                        
                            
                                
                                Unit INR1079 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1079 = createUnitIfNotExist(INR1079, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIMap1083 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIMap1083.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIValue1081 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIMap1083);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIMap1083, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIValue1081 = zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082 == null ? "" : zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getValue();
                                    if(zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082 != null ) {
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1082.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIContext1080 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIMap1083 );
                                        
                                
                                if(zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIValue1081 != null && !"".equals(zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIValue1081)) {
                                    
                                    addContext(DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIContext1080, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesLiabilitiesReportedForFSIValue1084 = new MonetaryItemType();
                                    debtSecuritiesLiabilitiesReportedForFSIValue1084.setContextRef(DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIContext1080);
                                    
                                    debtSecuritiesLiabilitiesReportedForFSIValue1084.setUnitRef(INR1079);
                                    debtSecuritiesLiabilitiesReportedForFSIValue1084.setDecimals("INF");
                                    debtSecuritiesLiabilitiesReportedForFSIValue1084.setValue(new BigDecimal(zeroDBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIValue1081));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesLiabilitiesReportedForFSIElement1085 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesLiabilitiesReportedForFSI(debtSecuritiesLiabilitiesReportedForFSIValue1084);
                                    bodyElements.add(debtSecuritiesLiabilitiesReportedForFSIElement1085);
                                
                            }
                        
                            
                            Unit pure1086 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1086 = createUnitIfNotExist(pure1086, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIMap1090 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIMap1090.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIValue1088 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIMap1090);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIMap1090, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIValue1088 = zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089 == null ? "" : zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1089.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIContext1087 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIMap1090 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIValue1088 != null && !"".equals(zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIValue1088)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIContext1087, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesLiabilitiesReportedForFSIValue1091 = new RemarkForFSI();
                                    remarkForDebtSecuritiesLiabilitiesReportedForFSIValue1091.setContextRef(DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIContext1087);
                                    
                                    remarkForDebtSecuritiesLiabilitiesReportedForFSIValue1091.setValue(zeroDBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIValue1088);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesLiabilitiesReportedForFSIElement1092 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(remarkForDebtSecuritiesLiabilitiesReportedForFSIValue1091);
                                    bodyElements.add(remarkForDebtSecuritiesLiabilitiesReportedForFSIElement1092);
                                
                            }
                        
                            
                                
                                Unit INR1093 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1093 = createUnitIfNotExist(INR1093, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIMap1097 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIMap1097.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIValue1095 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIMap1097);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIMap1097, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIValue1095 = zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096 == null ? "" : zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getValue();
                                    if(zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096 != null ) {
                                        if(!zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIFieldDataValue1096.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2OtherLiabilitiesReportedForFSIContext1094 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIMap1097 );
                                        
                                
                                if(zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIValue1095 != null && !"".equals(zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIValue1095)) {
                                    
                                    addContext(DBS01FS_Layout2OtherLiabilitiesReportedForFSIContext1094, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherLiabilitiesReportedForFSIValue1098 = new MonetaryItemType();
                                    otherLiabilitiesReportedForFSIValue1098.setContextRef(DBS01FS_Layout2OtherLiabilitiesReportedForFSIContext1094);
                                    
                                    otherLiabilitiesReportedForFSIValue1098.setUnitRef(INR1093);
                                    otherLiabilitiesReportedForFSIValue1098.setDecimals("INF");
                                    otherLiabilitiesReportedForFSIValue1098.setValue(new BigDecimal(zeroDBS01FS_Layout2OtherLiabilitiesReportedForFSIValue1095));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherLiabilitiesReportedForFSIElement1099 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherLiabilitiesReportedForFSI(otherLiabilitiesReportedForFSIValue1098);
                                    bodyElements.add(otherLiabilitiesReportedForFSIElement1099);
                                
                            }
                        
                            
                            Unit pure1100 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1100 = createUnitIfNotExist(pure1100, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIMap1104 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIMap1104.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIValue1102 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIMap1104);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIMap1104, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIValue1102 = zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103 == null ? "" : zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIFieldDataValue1103.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIContext1101 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIMap1104 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIValue1102 != null && !"".equals(zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIValue1102)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIContext1101, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherLiabilitiesReportedForFSIValue1105 = new RemarkForFSI();
                                    remarkForOtherLiabilitiesReportedForFSIValue1105.setContextRef(DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIContext1101);
                                    
                                    remarkForOtherLiabilitiesReportedForFSIValue1105.setValue(zeroDBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIValue1102);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherLiabilitiesReportedForFSIElement1106 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherLiabilitiesReportedForFSI(remarkForOtherLiabilitiesReportedForFSIValue1105);
                                    bodyElements.add(remarkForOtherLiabilitiesReportedForFSIElement1106);
                                
                            }
                        
                            
                                
                                Unit INR1107 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1107 = createUnitIfNotExist(INR1107, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CapitalAndReservesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIMap1111 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIMap1111.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIValue1109 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIMap1111);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIMap1111, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIValue1109 = zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110 == null ? "" : zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getValue();
                                    if(zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110 != null ) {
                                        if(!zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIFieldDataValue1110.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2CapitalAndReservesReportedForFSIContext1108 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIMap1111 );
                                        
                                
                                if(zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIValue1109 != null && !"".equals(zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIValue1109)) {
                                    
                                    addContext(DBS01FS_Layout2CapitalAndReservesReportedForFSIContext1108, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType capitalAndReservesReportedForFSIValue1112 = new MonetaryItemType();
                                    capitalAndReservesReportedForFSIValue1112.setContextRef(DBS01FS_Layout2CapitalAndReservesReportedForFSIContext1108);
                                    
                                    capitalAndReservesReportedForFSIValue1112.setUnitRef(INR1107);
                                    capitalAndReservesReportedForFSIValue1112.setDecimals("INF");
                                    capitalAndReservesReportedForFSIValue1112.setValue(new BigDecimal(zeroDBS01FS_Layout2CapitalAndReservesReportedForFSIValue1109));
                                    
                                    
                                    JAXBElement<MonetaryItemType> capitalAndReservesReportedForFSIElement1113 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCapitalAndReservesReportedForFSI(capitalAndReservesReportedForFSIValue1112);
                                    bodyElements.add(capitalAndReservesReportedForFSIElement1113);
                                
                            }
                        
                            
                            Unit pure1114 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1114 = createUnitIfNotExist(pure1114, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCapitalAndReservesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIMap1118 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIMap1118.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIValue1116 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIMap1118);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIMap1118, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIValue1116 = zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117 == null ? "" : zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIFieldDataValue1117.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIContext1115 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIMap1118 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIValue1116 != null && !"".equals(zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIValue1116)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIContext1115, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCapitalAndReservesReportedForFSIValue1119 = new RemarkForFSI();
                                    remarkForCapitalAndReservesReportedForFSIValue1119.setContextRef(DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIContext1115);
                                    
                                    remarkForCapitalAndReservesReportedForFSIValue1119.setValue(zeroDBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIValue1116);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCapitalAndReservesReportedForFSIElement1120 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCapitalAndReservesReportedForFSI(remarkForCapitalAndReservesReportedForFSIValue1119);
                                    bodyElements.add(remarkForCapitalAndReservesReportedForFSIElement1120);
                                
                            }
                        
                            
                                
                                Unit INR1121 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1121 = createUnitIfNotExist(INR1121, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NarrowCapitalAndReservesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIMap1125 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIMap1125.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIValue1123 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIMap1125);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNarrowCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIMap1125, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIValue1123 = zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124 == null ? "" : zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getValue();
                                    if(zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124 != null ) {
                                        if(!zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIFieldDataValue1124.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIContext1122 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIMap1125 );
                                        
                                
                                if(zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIValue1123 != null && !"".equals(zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIValue1123)) {
                                    
                                    addContext(DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIContext1122, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType narrowCapitalAndReservesReportedForFSIValue1126 = new MonetaryItemType();
                                    narrowCapitalAndReservesReportedForFSIValue1126.setContextRef(DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIContext1122);
                                    
                                    narrowCapitalAndReservesReportedForFSIValue1126.setUnitRef(INR1121);
                                    narrowCapitalAndReservesReportedForFSIValue1126.setDecimals("INF");
                                    narrowCapitalAndReservesReportedForFSIValue1126.setValue(new BigDecimal(zeroDBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIValue1123));
                                    
                                    
                                    JAXBElement<MonetaryItemType> narrowCapitalAndReservesReportedForFSIElement1127 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNarrowCapitalAndReservesReportedForFSI(narrowCapitalAndReservesReportedForFSIValue1126);
                                    bodyElements.add(narrowCapitalAndReservesReportedForFSIElement1127);
                                
                            }
                        
                            
                            Unit pure1128 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1128 = createUnitIfNotExist(pure1128, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIMap1132 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIMap1132.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIValue1130 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIMap1132);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIMap1132, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIValue1130 = zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131 == null ? "" : zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIFieldDataValue1131.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIContext1129 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIMap1132 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIValue1130 != null && !"".equals(zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIValue1130)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIContext1129, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNarrowCapitalAndReservesReportedForFSIValue1133 = new RemarkForFSI();
                                    remarkForNarrowCapitalAndReservesReportedForFSIValue1133.setContextRef(DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIContext1129);
                                    
                                    remarkForNarrowCapitalAndReservesReportedForFSIValue1133.setValue(zeroDBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIValue1130);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNarrowCapitalAndReservesReportedForFSIElement1134 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNarrowCapitalAndReservesReportedForFSI(remarkForNarrowCapitalAndReservesReportedForFSIValue1133);
                                    bodyElements.add(remarkForNarrowCapitalAndReservesReportedForFSIElement1134);
                                
                            }
                        
                            
                                
                                Unit INR1135 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1135 = createUnitIfNotExist(INR1135, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - BalanceSheetTotalReportedForFSI
                            
                                Map zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIMap1139 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIMap1139.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIValue1137 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIMap1139);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138 = DBS01ReportUtil.retrieveFieldDataForElement(field.getBalanceSheetTotalReportedForFSI(), zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIMap1139, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIValue1137 = zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138 == null ? "" : zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getValue();
                                    if(zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138 != null ) {
                                        if(!zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIFieldDataValue1138.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2BalanceSheetTotalReportedForFSIContext1136 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIMap1139 );
                                        
                                
                                if(zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIValue1137 != null && !"".equals(zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIValue1137)) {
                                    
                                    addContext(DBS01FS_Layout2BalanceSheetTotalReportedForFSIContext1136, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType balanceSheetTotalReportedForFSIValue1140 = new MonetaryItemType();
                                    balanceSheetTotalReportedForFSIValue1140.setContextRef(DBS01FS_Layout2BalanceSheetTotalReportedForFSIContext1136);
                                    
                                    balanceSheetTotalReportedForFSIValue1140.setUnitRef(INR1135);
                                    balanceSheetTotalReportedForFSIValue1140.setDecimals("INF");
                                    balanceSheetTotalReportedForFSIValue1140.setValue(new BigDecimal(zeroDBS01FS_Layout2BalanceSheetTotalReportedForFSIValue1137));
                                    
                                    
                                    JAXBElement<MonetaryItemType> balanceSheetTotalReportedForFSIElement1141 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBalanceSheetTotalReportedForFSI(balanceSheetTotalReportedForFSIValue1140);
                                    bodyElements.add(balanceSheetTotalReportedForFSIElement1141);
                                
                            }
                        
                            
                            Unit pure1142 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1142 = createUnitIfNotExist(pure1142, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForBalanceSheetTotalReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIMap1146 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIMap1146.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIValue1144 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIMap1146);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIMap1146, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIValue1144 = zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145 == null ? "" : zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIFieldDataValue1145.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIContext1143 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIMap1146 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIValue1144 != null && !"".equals(zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIValue1144)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIContext1143, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForBalanceSheetTotalReportedForFSIValue1147 = new RemarkForFSI();
                                    remarkForBalanceSheetTotalReportedForFSIValue1147.setContextRef(DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIContext1143);
                                    
                                    remarkForBalanceSheetTotalReportedForFSIValue1147.setValue(zeroDBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIValue1144);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForBalanceSheetTotalReportedForFSIElement1148 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForBalanceSheetTotalReportedForFSI(remarkForBalanceSheetTotalReportedForFSIValue1147);
                                    bodyElements.add(remarkForBalanceSheetTotalReportedForFSIElement1148);
                                
                            }
                        
                            
                                
                                Unit INR1149 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1149 = createUnitIfNotExist(INR1149, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                                Map zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1153 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1153.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1151 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1153);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1153, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1151 = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152 == null ? "" : zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getValue();
                                    if(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152 != null ) {
                                        if(!zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1152.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1150 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1153 );
                                        
                                
                                if(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1151 != null && !"".equals(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1151)) {
                                    
                                    addContext(DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1150, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1154 = new MonetaryItemType();
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1154.setContextRef(DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1150);
                                    
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1154.setUnitRef(INR1149);
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1154.setDecimals("INF");
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1154.setValue(new BigDecimal(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1151));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIElement1155 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1154);
                                    bodyElements.add(sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIElement1155);
                                
                            }
                        
                            
                                
                                Unit INR1156 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1156 = createUnitIfNotExist(INR1156, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                                Map zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1160 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1160.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1158 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1160);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1160, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1158 = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159 == null ? "" : zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getValue();
                                    if(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159 != null ) {
                                        if(!zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1159.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1157 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1160 );
                                        
                                
                                if(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1158 != null && !"".equals(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1158)) {
                                    
                                    addContext(DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1157, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1161 = new MonetaryItemType();
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1161.setContextRef(DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1157);
                                    
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1161.setUnitRef(INR1156);
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1161.setDecimals("INF");
                                    sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1161.setValue(new BigDecimal(zeroDBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1158));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIElement1162 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1161);
                                    bodyElements.add(sharesInDepositTakingAssociatesOtherThanBanksReportedForFSIElement1162);
                                
                            }
                        
                            
                            Unit pure1163 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1163 = createUnitIfNotExist(pure1163, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1167 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1167.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1165 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1167);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1167, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1165 = zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166 == null ? "" : zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIFieldDataValue1166.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1164 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIMap1167 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1165 != null && !"".equals(zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1165)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1164, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1168 = new RemarkForFSI();
                                    remarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1168.setContextRef(DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIContext1164);
                                    
                                    remarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1168.setValue(zeroDBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1165);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIElement1169 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(remarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIValue1168);
                                    bodyElements.add(remarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIElement1169);
                                
                            }
                        
                            
                                
                                Unit INR1170 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1170 = createUnitIfNotExist(INR1170, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1174 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1174.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1172 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1174);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1174, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1172 = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1173.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1171 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1174 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1172 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1172)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1171, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1175 = new MonetaryItemType();
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1175.setContextRef(DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1171);
                                    
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1175.setUnitRef(INR1170);
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1175.setDecimals("INF");
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1175.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1172));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesGrossPositiveMtmValuesReportedForFSIElement1176 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1175);
                                    bodyElements.add(financialDerivativesGrossPositiveMtmValuesReportedForFSIElement1176);
                                
                            }
                        
                            
                                
                                Unit INR1177 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1177 = createUnitIfNotExist(INR1177, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1181 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1181.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1179 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1181);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1181, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1179 = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1180.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1178 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1181 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1179 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1179)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1178, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1182 = new MonetaryItemType();
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1182.setContextRef(DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1178);
                                    
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1182.setUnitRef(INR1177);
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1182.setDecimals("INF");
                                    financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1182.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1179));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesGrossPositiveMtmValuesReportedForFSIElement1183 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(financialDerivativesGrossPositiveMtmValuesReportedForFSIValue1182);
                                    bodyElements.add(financialDerivativesGrossPositiveMtmValuesReportedForFSIElement1183);
                                
                            }
                        
                            
                            Unit pure1184 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1184 = createUnitIfNotExist(pure1184, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1188 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1188.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1186 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1188);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1188, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1186 = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187 == null ? "" : zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIFieldDataValue1187.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1185 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIMap1188 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1186 != null && !"".equals(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1186)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1185, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1189 = new RemarkForFSI();
                                    remarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1189.setContextRef(DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIContext1185);
                                    
                                    remarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1189.setValue(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1186);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIElement1190 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(remarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIValue1189);
                                    bodyElements.add(remarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIElement1190);
                                
                            }
                        
                            
                                
                                Unit INR1191 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1191 = createUnitIfNotExist(INR1191, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1195 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1195.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1193 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1195);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1195, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1193 = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1194.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1192 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1195 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1193 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1193)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1192, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1196 = new MonetaryItemType();
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1196.setContextRef(DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1192);
                                    
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1196.setUnitRef(INR1191);
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1196.setDecimals("INF");
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1196.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1193));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1197 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1196);
                                    bodyElements.add(financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1197);
                                
                            }
                        
                            
                                
                                Unit INR1198 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1198 = createUnitIfNotExist(INR1198, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1202 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1202.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1200 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1202);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1202, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1200 = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1201.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1199 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1202 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1200 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1200)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1199, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1203 = new MonetaryItemType();
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1203.setContextRef(DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1199);
                                    
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1203.setUnitRef(INR1198);
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1203.setDecimals("INF");
                                    financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1203.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1200));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1204 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1203);
                                    bodyElements.add(financialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1204);
                                
                            }
                        
                            
                            Unit pure1205 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1205 = createUnitIfNotExist(pure1205, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1209 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1209.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1207 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1209);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1209, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1207 = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208 == null ? "" : zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1208.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1206 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1209 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1207 != null && !"".equals(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1207)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1206, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1210 = new RemarkForFSI();
                                    remarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1210.setContextRef(DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1206);
                                    
                                    remarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1210.setValue(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1207);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1211 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(remarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1210);
                                    bodyElements.add(remarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1211);
                                
                            }
                        
                            
                                
                                Unit INR1212 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1212 = createUnitIfNotExist(INR1212, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1216 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1216.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1214 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1216);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1216, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1214 = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1215.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1213 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1216 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1214 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1214)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1213, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1217 = new MonetaryItemType();
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1217.setContextRef(DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1213);
                                    
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1217.setUnitRef(INR1212);
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1217.setDecimals("INF");
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1217.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1214));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesGrossNegativeMtmValuesReportedForFSIElement1218 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1217);
                                    bodyElements.add(financialDerivativesGrossNegativeMtmValuesReportedForFSIElement1218);
                                
                            }
                        
                            
                                
                                Unit INR1219 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1219 = createUnitIfNotExist(INR1219, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1223 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1223.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1221 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1223);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1223, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1221 = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1222.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1220 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1223 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1221 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1221)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1220, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1224 = new MonetaryItemType();
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1224.setContextRef(DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1220);
                                    
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1224.setUnitRef(INR1219);
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1224.setDecimals("INF");
                                    financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1224.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1221));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesGrossNegativeMtmValuesReportedForFSIElement1225 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(financialDerivativesGrossNegativeMtmValuesReportedForFSIValue1224);
                                    bodyElements.add(financialDerivativesGrossNegativeMtmValuesReportedForFSIElement1225);
                                
                            }
                        
                            
                            Unit pure1226 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1226 = createUnitIfNotExist(pure1226, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1230 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1230.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1228 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1230);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1230, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1228 = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229 == null ? "" : zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIFieldDataValue1229.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1227 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIMap1230 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1228 != null && !"".equals(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1228)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1227, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1231 = new RemarkForFSI();
                                    remarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1231.setContextRef(DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIContext1227);
                                    
                                    remarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1231.setValue(zeroDBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1228);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIElement1232 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(remarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIValue1231);
                                    bodyElements.add(remarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIElement1232);
                                
                            }
                        
                            
                                
                                Unit INR1233 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1233 = createUnitIfNotExist(INR1233, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1237 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1237.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1235 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1237);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1237, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1235 = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1236.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1234 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1237 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1235 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1235)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1234, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1238 = new MonetaryItemType();
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1238.setContextRef(DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1234);
                                    
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1238.setUnitRef(INR1233);
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1238.setDecimals("INF");
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1238.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1235));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1239 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1238);
                                    bodyElements.add(financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1239);
                                
                            }
                        
                            
                                
                                Unit INR1240 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1240 = createUnitIfNotExist(INR1240, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                                Map zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1244 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1244.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1242 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1244);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1244, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1242 = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243 == null ? "" : zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getValue();
                                    if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243 != null ) {
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1243.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1241 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1244 );
                                        
                                
                                if(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1242 != null && !"".equals(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1242)) {
                                    
                                    addContext(DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1241, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1245 = new MonetaryItemType();
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1245.setContextRef(DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1241);
                                    
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1245.setUnitRef(INR1240);
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1245.setDecimals("INF");
                                    financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1245.setValue(new BigDecimal(zeroDBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1242));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1246 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1245);
                                    bodyElements.add(financialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1246);
                                
                            }
                        
                            
                            Unit pure1247 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1247 = createUnitIfNotExist(pure1247, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                                Map zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1251 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1251.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1249 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1251);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1251, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1249 = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250 == null ? "" : zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getValue();
                                    if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250 != null ) {
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getStartDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getEndDateValue();
                                        if(!zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIFieldDataValue1250.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1248 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIMap1251 );
                                            
                                
                                if(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1249 != null && !"".equals(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1249)) {
                                    
                                    addContext(DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1248, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1252 = new RemarkForFSI();
                                    remarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1252.setContextRef(DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIContext1248);
                                    
                                    remarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1252.setValue(zeroDBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1249);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1253 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(remarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIValue1252);
                                    bodyElements.add(remarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIElement1253);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout3 if any typeMembers then List or Single
                //DBS01FS_Layout3 dBS01FS_Layout3 = mainReportData.getDBS01FS_Layout3();
                
                    private String dBS01FS_Layout3Method(DBS01FS_Layout3 dBS01FS_Layout3, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBS01FS_Layout3 field = dBS01FS_Layout3;
                    
                    
                        
                        
                            
                                
                                Unit INR1254 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1254 = createUnitIfNotExist(INR1254, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1258 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1258.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1258.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1256 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1258);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1258, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1256 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1257.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1255 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1258 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1256 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1256)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1255, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1259 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1259.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1255);
                                    
                                    regulatoryCapitalReportedForFSIValue1259.setUnitRef(INR1254);
                                    regulatoryCapitalReportedForFSIValue1259.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1259.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1256));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1260 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1259);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1260);
                                
                            }
                        
                            
                                
                                Unit INR1261 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1261 = createUnitIfNotExist(INR1261, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1263 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1263 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1264.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1262 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1265 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1263 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1263)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1262, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1266 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1266.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1262);
                                    
                                    regulatoryCapitalReportedForFSIValue1266.setUnitRef(INR1261);
                                    regulatoryCapitalReportedForFSIValue1266.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1266.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1263));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1267 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1266);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1267);
                                
                            }
                        
                            
                                
                                Unit INR1268 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1268 = createUnitIfNotExist(INR1268, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272.put("rbi-core:TierCapitalClassificationAxis", "rbi-core:SupervisoryDeductionsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1270 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1270 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1271.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1269 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1272 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1270 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1270)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1269, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1273 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1273.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1269);
                                    
                                    regulatoryCapitalReportedForFSIValue1273.setUnitRef(INR1268);
                                    regulatoryCapitalReportedForFSIValue1273.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1273.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1270));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1274 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1273);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1274);
                                
                            }
                        
                            
                                
                                Unit INR1275 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1275 = createUnitIfNotExist(INR1275, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1279 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1279.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1279.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1277 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1279);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1279, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1277 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1278.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1276 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1279 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1277 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1277)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1276, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1280 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1280.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1276);
                                    
                                    regulatoryCapitalReportedForFSIValue1280.setUnitRef(INR1275);
                                    regulatoryCapitalReportedForFSIValue1280.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1280.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1277));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1281 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1280);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1281);
                                
                            }
                        
                            
                                
                                Unit INR1282 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1282 = createUnitIfNotExist(INR1282, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1284 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1284 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1285.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1283 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1286 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1284 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1284)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1283, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1287 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1287.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1283);
                                    
                                    regulatoryCapitalReportedForFSIValue1287.setUnitRef(INR1282);
                                    regulatoryCapitalReportedForFSIValue1287.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1287.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1284));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1288 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1287);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1288);
                                
                            }
                        
                            
                                
                                Unit INR1289 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1289 = createUnitIfNotExist(INR1289, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293.put("rbi-core:TierCapitalClassificationAxis", "rbi-core:SupervisoryDeductionsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1291 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1291 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1292.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1290 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1293 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1291 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1291)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1290, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1294 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1294.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1290);
                                    
                                    regulatoryCapitalReportedForFSIValue1294.setUnitRef(INR1289);
                                    regulatoryCapitalReportedForFSIValue1294.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1294.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1291));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1295 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1294);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1295);
                                
                            }
                        
                            
                                
                                Unit INR1296 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1296 = createUnitIfNotExist(INR1296, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1300 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1300.put("rbi-core:TierCapitalClassificationAxis", "rbi-core:SupervisoryDeductionsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1300.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1298 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1300);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1300, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1298 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1299.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1297 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1300 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1298 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1298)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1297, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1301 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1301.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1297);
                                    
                                    regulatoryCapitalReportedForFSIValue1301.setUnitRef(INR1296);
                                    regulatoryCapitalReportedForFSIValue1301.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1301.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1298));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1302 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1301);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1302);
                                
                            }
                        
                            
                                
                                Unit INR1303 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1303 = createUnitIfNotExist(INR1303, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1307 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1307.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1307.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1305 = DBS01ReportUtil.retrieveValueForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1307);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1307, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1305 = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306 == null ? "" : zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getValue();
                                    if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306 != null ) {
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIFieldDataValue1306.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1304 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIMap1307 );
                                        
                                
                                if(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1305 != null && !"".equals(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1305)) {
                                    
                                    addContext(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1304, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType regulatoryCapitalReportedForFSIValue1308 = new MonetaryItemType();
                                    regulatoryCapitalReportedForFSIValue1308.setContextRef(DBS01FS_Layout3RegulatoryCapitalReportedForFSIContext1304);
                                    
                                    regulatoryCapitalReportedForFSIValue1308.setUnitRef(INR1303);
                                    regulatoryCapitalReportedForFSIValue1308.setDecimals("INF");
                                    regulatoryCapitalReportedForFSIValue1308.setValue(new BigDecimal(zeroDBS01FS_Layout3RegulatoryCapitalReportedForFSIValue1305));
                                    
                                    
                                    JAXBElement<MonetaryItemType> regulatoryCapitalReportedForFSIElement1309 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRegulatoryCapitalReportedForFSI(regulatoryCapitalReportedForFSIValue1308);
                                    bodyElements.add(regulatoryCapitalReportedForFSIElement1309);
                                
                            }
                        
                            
                                
                                Unit INR1310 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1310 = createUnitIfNotExist(INR1310, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RiskWeightedAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1314 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1314.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1312 = DBS01ReportUtil.retrieveValueForElement(field.getRiskWeightedAssetsReportedForFSI(), zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1314);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRiskWeightedAssetsReportedForFSI(), zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1314, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1312 = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313 == null ? "" : zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getValue();
                                    if(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313 != null ) {
                                        if(!zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1313.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RiskWeightedAssetsReportedForFSIContext1311 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1314 );
                                        
                                
                                if(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1312 != null && !"".equals(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1312)) {
                                    
                                    addContext(DBS01FS_Layout3RiskWeightedAssetsReportedForFSIContext1311, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType riskWeightedAssetsReportedForFSIValue1315 = new MonetaryItemType();
                                    riskWeightedAssetsReportedForFSIValue1315.setContextRef(DBS01FS_Layout3RiskWeightedAssetsReportedForFSIContext1311);
                                    
                                    riskWeightedAssetsReportedForFSIValue1315.setUnitRef(INR1310);
                                    riskWeightedAssetsReportedForFSIValue1315.setDecimals("INF");
                                    riskWeightedAssetsReportedForFSIValue1315.setValue(new BigDecimal(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1312));
                                    
                                    
                                    JAXBElement<MonetaryItemType> riskWeightedAssetsReportedForFSIElement1316 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRiskWeightedAssetsReportedForFSI(riskWeightedAssetsReportedForFSIValue1315);
                                    bodyElements.add(riskWeightedAssetsReportedForFSIElement1316);
                                
                            }
                        
                            
                                
                                Unit INR1317 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1317 = createUnitIfNotExist(INR1317, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ValueOfLargeExposureReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1321 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1321.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1319 = DBS01ReportUtil.retrieveValueForElement(field.getValueOfLargeExposureReportedForFSI(), zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1321);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320 = DBS01ReportUtil.retrieveFieldDataForElement(field.getValueOfLargeExposureReportedForFSI(), zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1321, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1319 = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320 == null ? "" : zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getValue();
                                    if(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320 != null ) {
                                        if(!zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1320.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ValueOfLargeExposureReportedForFSIContext1318 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1321 );
                                        
                                
                                if(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1319 != null && !"".equals(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1319)) {
                                    
                                    addContext(DBS01FS_Layout3ValueOfLargeExposureReportedForFSIContext1318, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType valueOfLargeExposureReportedForFSIValue1322 = new MonetaryItemType();
                                    valueOfLargeExposureReportedForFSIValue1322.setContextRef(DBS01FS_Layout3ValueOfLargeExposureReportedForFSIContext1318);
                                    
                                    valueOfLargeExposureReportedForFSIValue1322.setUnitRef(INR1317);
                                    valueOfLargeExposureReportedForFSIValue1322.setDecimals("INF");
                                    valueOfLargeExposureReportedForFSIValue1322.setValue(new BigDecimal(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1319));
                                    
                                    
                                    JAXBElement<MonetaryItemType> valueOfLargeExposureReportedForFSIElement1323 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createValueOfLargeExposureReportedForFSI(valueOfLargeExposureReportedForFSIValue1322);
                                    bodyElements.add(valueOfLargeExposureReportedForFSIElement1323);
                                
                            }
                        
                            
                                
                                Unit INR1324 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1324 = createUnitIfNotExist(INR1324, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiquidAssetsCoreReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1328 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1328.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1326 = DBS01ReportUtil.retrieveValueForElement(field.getLiquidAssetsCoreReportedForFSI(), zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1328);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiquidAssetsCoreReportedForFSI(), zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1328, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1326 = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327 == null ? "" : zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getValue();
                                    if(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327 != null ) {
                                        if(!zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1327.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LiquidAssetsCoreReportedForFSIContext1325 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1328 );
                                        
                                
                                if(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1326 != null && !"".equals(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1326)) {
                                    
                                    addContext(DBS01FS_Layout3LiquidAssetsCoreReportedForFSIContext1325, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liquidAssetsCoreReportedForFSIValue1329 = new MonetaryItemType();
                                    liquidAssetsCoreReportedForFSIValue1329.setContextRef(DBS01FS_Layout3LiquidAssetsCoreReportedForFSIContext1325);
                                    
                                    liquidAssetsCoreReportedForFSIValue1329.setUnitRef(INR1324);
                                    liquidAssetsCoreReportedForFSIValue1329.setDecimals("INF");
                                    liquidAssetsCoreReportedForFSIValue1329.setValue(new BigDecimal(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1326));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liquidAssetsCoreReportedForFSIElement1330 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiquidAssetsCoreReportedForFSI(liquidAssetsCoreReportedForFSIValue1329);
                                    bodyElements.add(liquidAssetsCoreReportedForFSIElement1330);
                                
                            }
                        
                            
                                
                                Unit INR1331 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1331 = createUnitIfNotExist(INR1331, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiquidAssetsBroadMeasureReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIMap1335 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIMap1335.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIValue1333 = DBS01ReportUtil.retrieveValueForElement(field.getLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIMap1335);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIMap1335, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIValue1333 = zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334 == null ? "" : zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getValue();
                                    if(zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334 != null ) {
                                        if(!zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIFieldDataValue1334.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIContext1332 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIMap1335 );
                                        
                                
                                if(zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIValue1333 != null && !"".equals(zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIValue1333)) {
                                    
                                    addContext(DBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIContext1332, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liquidAssetsBroadMeasureReportedForFSIValue1336 = new MonetaryItemType();
                                    liquidAssetsBroadMeasureReportedForFSIValue1336.setContextRef(DBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIContext1332);
                                    
                                    liquidAssetsBroadMeasureReportedForFSIValue1336.setUnitRef(INR1331);
                                    liquidAssetsBroadMeasureReportedForFSIValue1336.setDecimals("INF");
                                    liquidAssetsBroadMeasureReportedForFSIValue1336.setValue(new BigDecimal(zeroDBS01FS_Layout3LiquidAssetsBroadMeasureReportedForFSIValue1333));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liquidAssetsBroadMeasureReportedForFSIElement1337 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiquidAssetsBroadMeasureReportedForFSI(liquidAssetsBroadMeasureReportedForFSIValue1336);
                                    bodyElements.add(liquidAssetsBroadMeasureReportedForFSIElement1337);
                                
                            }
                        
                            
                                
                                Unit INR1338 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1338 = createUnitIfNotExist(INR1338, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ShortTermLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1342 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1342.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1340 = DBS01ReportUtil.retrieveValueForElement(field.getShortTermLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1342);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341 = DBS01ReportUtil.retrieveFieldDataForElement(field.getShortTermLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1342, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1340 = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341 == null ? "" : zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getValue();
                                    if(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341 != null ) {
                                        if(!zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1341.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ShortTermLiabilitiesReportedForFSIContext1339 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1342 );
                                        
                                
                                if(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1340 != null && !"".equals(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1340)) {
                                    
                                    addContext(DBS01FS_Layout3ShortTermLiabilitiesReportedForFSIContext1339, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType shortTermLiabilitiesReportedForFSIValue1343 = new MonetaryItemType();
                                    shortTermLiabilitiesReportedForFSIValue1343.setContextRef(DBS01FS_Layout3ShortTermLiabilitiesReportedForFSIContext1339);
                                    
                                    shortTermLiabilitiesReportedForFSIValue1343.setUnitRef(INR1338);
                                    shortTermLiabilitiesReportedForFSIValue1343.setDecimals("INF");
                                    shortTermLiabilitiesReportedForFSIValue1343.setValue(new BigDecimal(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1340));
                                    
                                    
                                    JAXBElement<MonetaryItemType> shortTermLiabilitiesReportedForFSIElement1344 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createShortTermLiabilitiesReportedForFSI(shortTermLiabilitiesReportedForFSIValue1343);
                                    bodyElements.add(shortTermLiabilitiesReportedForFSIElement1344);
                                
                            }
                        
                            
                                
                                Unit INR1345 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1345 = createUnitIfNotExist(INR1345, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1349 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1349.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1349.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonPerformingAssetsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1349.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1347 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1349);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1349, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1347 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1348.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1346 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1349 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1347 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1347)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1346, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1350 = new MonetaryItemType();
                                    loansReportedForFSIValue1350.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1346);
                                    
                                    loansReportedForFSIValue1350.setUnitRef(INR1345);
                                    loansReportedForFSIValue1350.setDecimals("INF");
                                    loansReportedForFSIValue1350.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1347));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1351 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1350);
                                    bodyElements.add(loansReportedForFSIElement1351);
                                
                            }
                        
                            
                                
                                Unit INR1352 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1352 = createUnitIfNotExist(INR1352, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1356 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1356.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentialRealEstateMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1356.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1354 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1356);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1356, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1354 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1355.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1353 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1356 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1354 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1354)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1353, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1357 = new MonetaryItemType();
                                    loansReportedForFSIValue1357.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1353);
                                    
                                    loansReportedForFSIValue1357.setUnitRef(INR1352);
                                    loansReportedForFSIValue1357.setDecimals("INF");
                                    loansReportedForFSIValue1357.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1354));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1358 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1357);
                                    bodyElements.add(loansReportedForFSIElement1358);
                                
                            }
                        
                            
                                
                                Unit INR1359 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1359 = createUnitIfNotExist(INR1359, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1363 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1363.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:CommercialRealEstateMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1363.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1361 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1363);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1363, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1361 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1362.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1360 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1363 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1361 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1361)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1360, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1364 = new MonetaryItemType();
                                    loansReportedForFSIValue1364.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1360);
                                    
                                    loansReportedForFSIValue1364.setUnitRef(INR1359);
                                    loansReportedForFSIValue1364.setDecimals("INF");
                                    loansReportedForFSIValue1364.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1361));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1365 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1364);
                                    bodyElements.add(loansReportedForFSIElement1365);
                                
                            }
                        
                            
                                
                                Unit INR1366 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1366 = createUnitIfNotExist(INR1366, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1370 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1370.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1370.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DomesticEconomyMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1370.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1368 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1370);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1370, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1368 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1369.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1367 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1370 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1368 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1368)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1367, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1371 = new MonetaryItemType();
                                    loansReportedForFSIValue1371.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1367);
                                    
                                    loansReportedForFSIValue1371.setUnitRef(INR1366);
                                    loansReportedForFSIValue1371.setDecimals("INF");
                                    loansReportedForFSIValue1371.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1368));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1372 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1371);
                                    bodyElements.add(loansReportedForFSIElement1372);
                                
                            }
                        
                            
                                
                                Unit INR1373 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1373 = createUnitIfNotExist(INR1373, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1377 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1377.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1377.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:AdvancedEconomiesExcludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1377.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1375 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1377);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1377, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1375 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1376.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1374 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1377 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1375 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1375)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1374, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1378 = new MonetaryItemType();
                                    loansReportedForFSIValue1378.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1374);
                                    
                                    loansReportedForFSIValue1378.setUnitRef(INR1373);
                                    loansReportedForFSIValue1378.setDecimals("INF");
                                    loansReportedForFSIValue1378.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1375));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1379 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1378);
                                    bodyElements.add(loansReportedForFSIElement1379);
                                
                            }
                        
                            
                                
                                Unit INR1380 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1380 = createUnitIfNotExist(INR1380, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1384 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1384.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1384.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1384.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1382 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1384);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1384, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1382 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1383.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1381 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1384 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1382 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1382)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1381, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1385 = new MonetaryItemType();
                                    loansReportedForFSIValue1385.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1381);
                                    
                                    loansReportedForFSIValue1385.setUnitRef(INR1380);
                                    loansReportedForFSIValue1385.setDecimals("INF");
                                    loansReportedForFSIValue1385.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1382));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1386 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1385);
                                    bodyElements.add(loansReportedForFSIElement1386);
                                
                            }
                        
                            
                                
                                Unit INR1387 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1387 = createUnitIfNotExist(INR1387, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1391 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1391.put("rbi-core:DevelopingCountryListAxis", "rbi-core:AfricaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1391.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1391.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1391.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1389 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1391);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1391, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1389 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1390.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1388 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1391 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1389 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1389)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1388, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1392 = new MonetaryItemType();
                                    loansReportedForFSIValue1392.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1388);
                                    
                                    loansReportedForFSIValue1392.setUnitRef(INR1387);
                                    loansReportedForFSIValue1392.setDecimals("INF");
                                    loansReportedForFSIValue1392.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1389));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1393 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1392);
                                    bodyElements.add(loansReportedForFSIElement1393);
                                
                            }
                        
                            
                                
                                Unit INR1394 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1394 = createUnitIfNotExist(INR1394, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1398 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1398.put("rbi-core:DevelopingCountryListAxis", "rbi-core:AfricaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1398.put("rbi-core:GeographicalLocationAxis", "rbi-core:SubSaharaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1398.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1398.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1398.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1396 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1398);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1398, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1396 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1397.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1395 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1398 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1396 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1396)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1395, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1399 = new MonetaryItemType();
                                    loansReportedForFSIValue1399.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1395);
                                    
                                    loansReportedForFSIValue1399.setUnitRef(INR1394);
                                    loansReportedForFSIValue1399.setDecimals("INF");
                                    loansReportedForFSIValue1399.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1396));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1400 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1399);
                                    bodyElements.add(loansReportedForFSIElement1400);
                                
                            }
                        
                            
                                
                                Unit INR1401 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1401 = createUnitIfNotExist(INR1401, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1405 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1405.put("rbi-core:DevelopingCountryListAxis", "rbi-core:CentralAndEasternEuropeMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1405.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1405.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1405.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1403 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1405);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1405, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1403 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1404.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1402 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1405 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1403 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1403)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1402, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1406 = new MonetaryItemType();
                                    loansReportedForFSIValue1406.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1402);
                                    
                                    loansReportedForFSIValue1406.setUnitRef(INR1401);
                                    loansReportedForFSIValue1406.setDecimals("INF");
                                    loansReportedForFSIValue1406.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1403));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1407 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1406);
                                    bodyElements.add(loansReportedForFSIElement1407);
                                
                            }
                        
                            
                                
                                Unit INR1408 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1408 = createUnitIfNotExist(INR1408, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1412 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1412.put("rbi-core:DevelopingCountryListAxis", "rbi-core:CommonwealthOfIndependentStatesAndMongoliaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1412.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1412.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1412.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1410 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1412);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1412, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1410 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1411.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1409 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1412 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1410 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1410)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1409, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1413 = new MonetaryItemType();
                                    loansReportedForFSIValue1413.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1409);
                                    
                                    loansReportedForFSIValue1413.setUnitRef(INR1408);
                                    loansReportedForFSIValue1413.setDecimals("INF");
                                    loansReportedForFSIValue1413.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1410));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1414 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1413);
                                    bodyElements.add(loansReportedForFSIElement1414);
                                
                            }
                        
                            
                                
                                Unit INR1415 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1415 = createUnitIfNotExist(INR1415, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1419 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1419.put("rbi-core:DevelopingCountryListAxis", "rbi-core:DevelopingAsiaIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1419.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1419.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1419.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1417 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1419);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1419, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1417 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1418.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1416 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1419 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1417 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1417)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1416, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1420 = new MonetaryItemType();
                                    loansReportedForFSIValue1420.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1416);
                                    
                                    loansReportedForFSIValue1420.setUnitRef(INR1415);
                                    loansReportedForFSIValue1420.setDecimals("INF");
                                    loansReportedForFSIValue1420.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1417));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1421 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1420);
                                    bodyElements.add(loansReportedForFSIElement1421);
                                
                            }
                        
                            
                                
                                Unit INR1422 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1422 = createUnitIfNotExist(INR1422, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1426 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1426.put("rbi-core:DevelopingCountryListAxis", "rbi-core:MiddleEastMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1426.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1426.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1426.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1424 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1426);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1426, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1424 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1425.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1423 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1426 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1424 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1424)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1423, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1427 = new MonetaryItemType();
                                    loansReportedForFSIValue1427.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1423);
                                    
                                    loansReportedForFSIValue1427.setUnitRef(INR1422);
                                    loansReportedForFSIValue1427.setDecimals("INF");
                                    loansReportedForFSIValue1427.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1424));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1428 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1427);
                                    bodyElements.add(loansReportedForFSIElement1428);
                                
                            }
                        
                            
                                
                                Unit INR1429 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1429 = createUnitIfNotExist(INR1429, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1433 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1433.put("rbi-core:DevelopingCountryListAxis", "rbi-core:WesternHemisphereMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1433.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1433.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1433.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1431 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1433);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1433, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1431 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1432.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1430 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1433 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1431 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1431)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1430, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1434 = new MonetaryItemType();
                                    loansReportedForFSIValue1434.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1430);
                                    
                                    loansReportedForFSIValue1434.setUnitRef(INR1429);
                                    loansReportedForFSIValue1434.setDecimals("INF");
                                    loansReportedForFSIValue1434.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1431));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1435 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1434);
                                    bodyElements.add(loansReportedForFSIElement1435);
                                
                            }
                        
                            
                                
                                Unit INR1436 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1436 = createUnitIfNotExist(INR1436, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1440 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1440.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1440.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1438 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1440);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1440, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1438 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1439.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1437 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1440 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1438 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1438)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1437, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1441 = new MonetaryItemType();
                                    loansReportedForFSIValue1441.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1437);
                                    
                                    loansReportedForFSIValue1441.setUnitRef(INR1436);
                                    loansReportedForFSIValue1441.setDecimals("INF");
                                    loansReportedForFSIValue1441.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1438));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1442 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1441);
                                    bodyElements.add(loansReportedForFSIElement1442);
                                
                            }
                        
                            
                                
                                Unit INR1443 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1443 = createUnitIfNotExist(INR1443, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ForeignCurrencyLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1447 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1447.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1445 = DBS01ReportUtil.retrieveValueForElement(field.getForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1447);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446 = DBS01ReportUtil.retrieveFieldDataForElement(field.getForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1447, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1445 = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446 == null ? "" : zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getValue();
                                    if(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446 != null ) {
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1446.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ForeignCurrencyLoansReportedForFSIContext1444 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1447 );
                                        
                                
                                if(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1445 != null && !"".equals(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1445)) {
                                    
                                    addContext(DBS01FS_Layout3ForeignCurrencyLoansReportedForFSIContext1444, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType foreignCurrencyLoansReportedForFSIValue1448 = new MonetaryItemType();
                                    foreignCurrencyLoansReportedForFSIValue1448.setContextRef(DBS01FS_Layout3ForeignCurrencyLoansReportedForFSIContext1444);
                                    
                                    foreignCurrencyLoansReportedForFSIValue1448.setUnitRef(INR1443);
                                    foreignCurrencyLoansReportedForFSIValue1448.setDecimals("INF");
                                    foreignCurrencyLoansReportedForFSIValue1448.setValue(new BigDecimal(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1445));
                                    
                                    
                                    JAXBElement<MonetaryItemType> foreignCurrencyLoansReportedForFSIElement1449 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createForeignCurrencyLoansReportedForFSI(foreignCurrencyLoansReportedForFSIValue1448);
                                    bodyElements.add(foreignCurrencyLoansReportedForFSIElement1449);
                                
                            }
                        
                            
                                
                                Unit INR1450 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1450 = createUnitIfNotExist(INR1450, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ForeignCurrencyLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1454 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1454.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1452 = DBS01ReportUtil.retrieveValueForElement(field.getForeignCurrencyLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1454);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453 = DBS01ReportUtil.retrieveFieldDataForElement(field.getForeignCurrencyLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1454, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1452 = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453 == null ? "" : zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getValue();
                                    if(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453 != null ) {
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1453.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIContext1451 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1454 );
                                        
                                
                                if(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1452 != null && !"".equals(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1452)) {
                                    
                                    addContext(DBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIContext1451, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType foreignCurrencyLiabilitiesReportedForFSIValue1455 = new MonetaryItemType();
                                    foreignCurrencyLiabilitiesReportedForFSIValue1455.setContextRef(DBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIContext1451);
                                    
                                    foreignCurrencyLiabilitiesReportedForFSIValue1455.setUnitRef(INR1450);
                                    foreignCurrencyLiabilitiesReportedForFSIValue1455.setDecimals("INF");
                                    foreignCurrencyLiabilitiesReportedForFSIValue1455.setValue(new BigDecimal(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1452));
                                    
                                    
                                    JAXBElement<MonetaryItemType> foreignCurrencyLiabilitiesReportedForFSIElement1456 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createForeignCurrencyLiabilitiesReportedForFSI(foreignCurrencyLiabilitiesReportedForFSIValue1455);
                                    bodyElements.add(foreignCurrencyLiabilitiesReportedForFSIElement1456);
                                
                            }
                        
                            
                                
                                Unit INR1457 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1457 = createUnitIfNotExist(INR1457, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetOpenPositionInEquitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIMap1461 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIMap1461.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIValue1459 = DBS01ReportUtil.retrieveValueForElement(field.getNetOpenPositionInEquitiesReportedForFSI(), zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIMap1461);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetOpenPositionInEquitiesReportedForFSI(), zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIMap1461, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIValue1459 = zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460 == null ? "" : zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getValue();
                                    if(zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460 != null ) {
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIFieldDataValue1460.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIContext1458 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIMap1461 );
                                        
                                
                                if(zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIValue1459 != null && !"".equals(zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIValue1459)) {
                                    
                                    addContext(DBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIContext1458, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netOpenPositionInEquitiesReportedForFSIValue1462 = new MonetaryItemType();
                                    netOpenPositionInEquitiesReportedForFSIValue1462.setContextRef(DBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIContext1458);
                                    
                                    netOpenPositionInEquitiesReportedForFSIValue1462.setUnitRef(INR1457);
                                    netOpenPositionInEquitiesReportedForFSIValue1462.setDecimals("INF");
                                    netOpenPositionInEquitiesReportedForFSIValue1462.setValue(new BigDecimal(zeroDBS01FS_Layout3NetOpenPositionInEquitiesReportedForFSIValue1459));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netOpenPositionInEquitiesReportedForFSIElement1463 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetOpenPositionInEquitiesReportedForFSI(netOpenPositionInEquitiesReportedForFSIValue1462);
                                    bodyElements.add(netOpenPositionInEquitiesReportedForFSIElement1463);
                                
                            }
                        
                            
                                
                                Unit INR1464 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1464 = createUnitIfNotExist(INR1464, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetOpenPositionInForeignCurrencyForOnBalanceSheetItems
                            
                                Map zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1468 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1468.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1466 = DBS01ReportUtil.retrieveValueForElement(field.getNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(), zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1468);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(), zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1468, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1466 = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467 == null ? "" : zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getValue();
                                    if(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467 != null ) {
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1467.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext1465 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1468 );
                                        
                                
                                if(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1466 != null && !"".equals(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1466)) {
                                    
                                    addContext(DBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext1465, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1469 = new MonetaryItemType();
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1469.setContextRef(DBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext1465);
                                    
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1469.setUnitRef(INR1464);
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1469.setDecimals("INF");
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1469.setValue(new BigDecimal(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1466));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netOpenPositionInForeignCurrencyForOnBalanceSheetItemsElement1470 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1469);
                                    bodyElements.add(netOpenPositionInForeignCurrencyForOnBalanceSheetItemsElement1470);
                                
                            }
                        
                            
                                
                                Unit INR1471 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1471 = createUnitIfNotExist(INR1471, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NetOpenPositionInForeignCurrencyForOnBalanceSheetItems
                            
                                Map zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1475 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1475.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1475.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1473 = DBS01ReportUtil.retrieveValueForElement(field.getNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(), zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1475);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(), zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1475, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1473 = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474 == null ? "" : zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getValue();
                                    if(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474 != null ) {
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue1474.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext1472 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap1475 );
                                        
                                
                                if(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1473 != null && !"".equals(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1473)) {
                                    
                                    addContext(DBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext1472, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1476 = new MonetaryItemType();
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1476.setContextRef(DBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext1472);
                                    
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1476.setUnitRef(INR1471);
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1476.setDecimals("INF");
                                    netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1476.setValue(new BigDecimal(zeroDBS01FS_Layout3NetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1473));
                                    
                                    
                                    JAXBElement<MonetaryItemType> netOpenPositionInForeignCurrencyForOnBalanceSheetItemsElement1477 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(netOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue1476);
                                    bodyElements.add(netOpenPositionInForeignCurrencyForOnBalanceSheetItemsElement1477);
                                
                            }
                        
                            
                                
                                Unit INR1478 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1478 = createUnitIfNotExist(INR1478, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap1482 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap1482.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1480 = DBS01ReportUtil.retrieveValueForElement(field.getRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap1482);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap1482, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1480 = zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481 == null ? "" : zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getValue();
                                    if(zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481 != null ) {
                                        if(!zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue1481.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIContext1479 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap1482 );
                                        
                                
                                if(zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1480 != null && !"".equals(zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1480)) {
                                    
                                    addContext(DBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIContext1479, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1483 = new MonetaryItemType();
                                    realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1483.setContextRef(DBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIContext1479);
                                    
                                    realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1483.setUnitRef(INR1478);
                                    realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1483.setDecimals("INF");
                                    realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1483.setValue(new BigDecimal(zeroDBS01FS_Layout3RealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1480));
                                    
                                    
                                    JAXBElement<MonetaryItemType> realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIElement1484 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI(realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue1483);
                                    bodyElements.add(realizedGainsAndLossesOnFinancialInstrumentsReportedForFSIElement1484);
                                
                            }
                        
                            
                                
                                Unit INR1485 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1485 = createUnitIfNotExist(INR1485, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap1489 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap1489.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap1489.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1487 = DBS01ReportUtil.retrieveValueForElement(field.getGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI(), zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap1489);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI(), zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap1489, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1487 = zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488 == null ? "" : zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getValue();
                                    if(zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488 != null ) {
                                        if(!zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue1488.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIContext1486 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap1489 );
                                        
                                
                                if(zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1487 != null && !"".equals(zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1487)) {
                                    
                                    addContext(DBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIContext1486, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1490 = new MonetaryItemType();
                                    gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1490.setContextRef(DBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIContext1486);
                                    
                                    gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1490.setUnitRef(INR1485);
                                    gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1490.setDecimals("INF");
                                    gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1490.setValue(new BigDecimal(zeroDBS01FS_Layout3GainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1487));
                                    
                                    
                                    JAXBElement<MonetaryItemType> gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIElement1491 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI(gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue1490);
                                    bodyElements.add(gainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIElement1491);
                                
                            }
                        
                            
                                
                                Unit INR1492 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1492 = createUnitIfNotExist(INR1492, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - VeryShortTermDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIMap1496 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIMap1496.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIValue1494 = DBS01ReportUtil.retrieveValueForElement(field.getVeryShortTermDepositsReportedForFSI(), zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIMap1496);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495 = DBS01ReportUtil.retrieveFieldDataForElement(field.getVeryShortTermDepositsReportedForFSI(), zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIMap1496, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIValue1494 = zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495 == null ? "" : zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getValue();
                                    if(zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495 != null ) {
                                        if(!zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIFieldDataValue1495.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3VeryShortTermDepositsReportedForFSIContext1493 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIMap1496 );
                                        
                                
                                if(zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIValue1494 != null && !"".equals(zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIValue1494)) {
                                    
                                    addContext(DBS01FS_Layout3VeryShortTermDepositsReportedForFSIContext1493, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType veryShortTermDepositsReportedForFSIValue1497 = new MonetaryItemType();
                                    veryShortTermDepositsReportedForFSIValue1497.setContextRef(DBS01FS_Layout3VeryShortTermDepositsReportedForFSIContext1493);
                                    
                                    veryShortTermDepositsReportedForFSIValue1497.setUnitRef(INR1492);
                                    veryShortTermDepositsReportedForFSIValue1497.setDecimals("INF");
                                    veryShortTermDepositsReportedForFSIValue1497.setValue(new BigDecimal(zeroDBS01FS_Layout3VeryShortTermDepositsReportedForFSIValue1494));
                                    
                                    
                                    JAXBElement<MonetaryItemType> veryShortTermDepositsReportedForFSIElement1498 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createVeryShortTermDepositsReportedForFSI(veryShortTermDepositsReportedForFSIValue1497);
                                    bodyElements.add(veryShortTermDepositsReportedForFSIElement1498);
                                
                            }
                        
                            
                                
                                Unit INR1499 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1499 = createUnitIfNotExist(INR1499, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NewDepositsDuringThePeriodReportedForFSI
                            
                                Map zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIMap1503 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIMap1503.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIMap1503.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIValue1501 = DBS01ReportUtil.retrieveValueForElement(field.getNewDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIMap1503);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNewDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIMap1503, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIValue1501 = zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502 == null ? "" : zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getValue();
                                    if(zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502 != null ) {
                                        if(!zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIFieldDataValue1502.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIContext1500 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIMap1503 );
                                        
                                
                                if(zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIValue1501 != null && !"".equals(zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIValue1501)) {
                                    
                                    addContext(DBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIContext1500, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType newDepositsDuringThePeriodReportedForFSIValue1504 = new MonetaryItemType();
                                    newDepositsDuringThePeriodReportedForFSIValue1504.setContextRef(DBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIContext1500);
                                    
                                    newDepositsDuringThePeriodReportedForFSIValue1504.setUnitRef(INR1499);
                                    newDepositsDuringThePeriodReportedForFSIValue1504.setDecimals("INF");
                                    newDepositsDuringThePeriodReportedForFSIValue1504.setValue(new BigDecimal(zeroDBS01FS_Layout3NewDepositsDuringThePeriodReportedForFSIValue1501));
                                    
                                    
                                    JAXBElement<MonetaryItemType> newDepositsDuringThePeriodReportedForFSIElement1505 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNewDepositsDuringThePeriodReportedForFSI(newDepositsDuringThePeriodReportedForFSIValue1504);
                                    bodyElements.add(newDepositsDuringThePeriodReportedForFSIElement1505);
                                
                            }
                        
                            
                                
                                Unit INR1506 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1506 = createUnitIfNotExist(INR1506, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - WithdrawalOfDepositsDuringThePeriodReportedForFSI
                            
                                Map zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIMap1510 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIMap1510.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIMap1510.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIValue1508 = DBS01ReportUtil.retrieveValueForElement(field.getWithdrawalOfDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIMap1510);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509 = DBS01ReportUtil.retrieveFieldDataForElement(field.getWithdrawalOfDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIMap1510, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIValue1508 = zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509 == null ? "" : zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getValue();
                                    if(zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509 != null ) {
                                        if(!zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue1509.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIContext1507 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIMap1510 );
                                        
                                
                                if(zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIValue1508 != null && !"".equals(zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIValue1508)) {
                                    
                                    addContext(DBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIContext1507, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType withdrawalOfDepositsDuringThePeriodReportedForFSIValue1511 = new MonetaryItemType();
                                    withdrawalOfDepositsDuringThePeriodReportedForFSIValue1511.setContextRef(DBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIContext1507);
                                    
                                    withdrawalOfDepositsDuringThePeriodReportedForFSIValue1511.setUnitRef(INR1506);
                                    withdrawalOfDepositsDuringThePeriodReportedForFSIValue1511.setDecimals("INF");
                                    withdrawalOfDepositsDuringThePeriodReportedForFSIValue1511.setValue(new BigDecimal(zeroDBS01FS_Layout3WithdrawalOfDepositsDuringThePeriodReportedForFSIValue1508));
                                    
                                    
                                    JAXBElement<MonetaryItemType> withdrawalOfDepositsDuringThePeriodReportedForFSIElement1512 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createWithdrawalOfDepositsDuringThePeriodReportedForFSI(withdrawalOfDepositsDuringThePeriodReportedForFSIValue1511);
                                    bodyElements.add(withdrawalOfDepositsDuringThePeriodReportedForFSIElement1512);
                                
                            }
                        
                            
                                
                                Unit INR1513 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1513 = createUnitIfNotExist(INR1513, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap1517 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap1517.put("rbi-core:TypeOfBalanceAxis", "rbi-core:NetMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap1517.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1515 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI(), zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap1517);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI(), zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap1517, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1515 = zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516 == null ? "" : zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getValue();
                                    if(zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516 != null ) {
                                        if(!zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue1516.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIContext1514 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap1517 );
                                        
                                
                                if(zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1515 != null && !"".equals(zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1515)) {
                                    
                                    addContext(DBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIContext1514, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1518 = new MonetaryItemType();
                                    liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1518.setContextRef(DBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIContext1514);
                                    
                                    liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1518.setUnitRef(INR1513);
                                    liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1518.setDecimals("INF");
                                    liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1518.setValue(new BigDecimal(zeroDBS01FS_Layout3LiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1515));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIElement1519 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI(liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue1518);
                                    bodyElements.add(liabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIElement1519);
                                
                            }
                        
                            
                                
                                Unit INR1520 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1520 = createUnitIfNotExist(INR1520, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap1524 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap1524.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1522 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI(), zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap1524);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI(), zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap1524, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1522 = zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523 == null ? "" : zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getValue();
                                    if(zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523 != null ) {
                                        if(!zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue1523.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIContext1521 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap1524 );
                                        
                                
                                if(zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1522 != null && !"".equals(zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1522)) {
                                    
                                    addContext(DBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIContext1521, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1525 = new MonetaryItemType();
                                    sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1525.setContextRef(DBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIContext1521);
                                    
                                    sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1525.setUnitRef(INR1520);
                                    sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1525.setDecimals("INF");
                                    sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1525.setValue(new BigDecimal(zeroDBS01FS_Layout3SharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1522));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIElement1526 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI(sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue1525);
                                    bodyElements.add(sharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIElement1526);
                                
                            }
                        
                            
                                
                                Unit INR1527 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1527 = createUnitIfNotExist(INR1527, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap1531 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap1531.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1529 = DBS01ReportUtil.retrieveValueForElement(field.getInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap1531);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap1531, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1529 = zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530 == null ? "" : zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getValue();
                                    if(zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530 != null ) {
                                        if(!zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue1530.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext1528 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap1531 );
                                        
                                
                                if(zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1529 != null && !"".equals(zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1529)) {
                                    
                                    addContext(DBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext1528, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1532 = new MonetaryItemType();
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1532.setContextRef(DBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext1528);
                                    
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1532.setUnitRef(INR1527);
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1532.setDecimals("INF");
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1532.setValue(new BigDecimal(zeroDBS01FS_Layout3InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1529));
                                    
                                    
                                    JAXBElement<MonetaryItemType> investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement1533 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue1532);
                                    bodyElements.add(investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement1533);
                                
                            }
                        
                            
                                
                                Unit INR1534 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1534 = createUnitIfNotExist(INR1534, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InvestmentInOtherDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIMap1538 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIMap1538.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIValue1536 = DBS01ReportUtil.retrieveValueForElement(field.getInvestmentInOtherDepositTakersReportedForFSI(), zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIMap1538);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInvestmentInOtherDepositTakersReportedForFSI(), zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIMap1538, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIValue1536 = zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537 == null ? "" : zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getValue();
                                    if(zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537 != null ) {
                                        if(!zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIFieldDataValue1537.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIContext1535 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIMap1538 );
                                        
                                
                                if(zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIValue1536 != null && !"".equals(zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIValue1536)) {
                                    
                                    addContext(DBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIContext1535, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType investmentInOtherDepositTakersReportedForFSIValue1539 = new MonetaryItemType();
                                    investmentInOtherDepositTakersReportedForFSIValue1539.setContextRef(DBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIContext1535);
                                    
                                    investmentInOtherDepositTakersReportedForFSIValue1539.setUnitRef(INR1534);
                                    investmentInOtherDepositTakersReportedForFSIValue1539.setDecimals("INF");
                                    investmentInOtherDepositTakersReportedForFSIValue1539.setValue(new BigDecimal(zeroDBS01FS_Layout3InvestmentInOtherDepositTakersReportedForFSIValue1536));
                                    
                                    
                                    JAXBElement<MonetaryItemType> investmentInOtherDepositTakersReportedForFSIElement1540 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInvestmentInOtherDepositTakersReportedForFSI(investmentInOtherDepositTakersReportedForFSIValue1539);
                                    bodyElements.add(investmentInOtherDepositTakersReportedForFSIElement1540);
                                
                            }
                        
                            
                                
                                Unit INR1541 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1541 = createUnitIfNotExist(INR1541, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansToPublicSectorStateAndCentralReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIMap1545 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIMap1545.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIMap1545.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIValue1543 = DBS01ReportUtil.retrieveValueForElement(field.getLoansToPublicSectorStateAndCentralReportedForFSI(), zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIMap1545);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansToPublicSectorStateAndCentralReportedForFSI(), zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIMap1545, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIValue1543 = zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544 == null ? "" : zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getValue();
                                    if(zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue1544.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIContext1542 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIMap1545 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIValue1543 != null && !"".equals(zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIValue1543)) {
                                    
                                    addContext(DBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIContext1542, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansToPublicSectorStateAndCentralReportedForFSIValue1546 = new MonetaryItemType();
                                    loansToPublicSectorStateAndCentralReportedForFSIValue1546.setContextRef(DBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIContext1542);
                                    
                                    loansToPublicSectorStateAndCentralReportedForFSIValue1546.setUnitRef(INR1541);
                                    loansToPublicSectorStateAndCentralReportedForFSIValue1546.setDecimals("INF");
                                    loansToPublicSectorStateAndCentralReportedForFSIValue1546.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansToPublicSectorStateAndCentralReportedForFSIValue1543));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansToPublicSectorStateAndCentralReportedForFSIElement1547 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansToPublicSectorStateAndCentralReportedForFSI(loansToPublicSectorStateAndCentralReportedForFSIValue1546);
                                    bodyElements.add(loansToPublicSectorStateAndCentralReportedForFSIElement1547);
                                
                            }
                        
                            
                                
                                Unit INR1548 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1548 = createUnitIfNotExist(INR1548, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI
                            
                                Map zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap1552 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap1552.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1550 = DBS01ReportUtil.retrieveValueForElement(field.getDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI(), zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap1552);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI(), zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap1552, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1550 = zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551 == null ? "" : zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getValue();
                                    if(zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551 != null ) {
                                        if(!zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue1551.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIContext1549 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap1552 );
                                        
                                
                                if(zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1550 != null && !"".equals(zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1550)) {
                                    
                                    addContext(DBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIContext1549, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1553 = new MonetaryItemType();
                                    domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1553.setContextRef(DBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIContext1549);
                                    
                                    domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1553.setUnitRef(INR1548);
                                    domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1553.setDecimals("INF");
                                    domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1553.setValue(new BigDecimal(zeroDBS01FS_Layout3DomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1550));
                                    
                                    
                                    JAXBElement<MonetaryItemType> domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIElement1554 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI(domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue1553);
                                    bodyElements.add(domesticGovernmentSecuritiesOwnedMarketValueReportedForFSIElement1554);
                                
                            }
                        
                            
                                
                                Unit INR1555 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1555 = createUnitIfNotExist(INR1555, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1559 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1559.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1557 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1559);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1559, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1557 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1558.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1556 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1559 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1557 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1557)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1556, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1560 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1560.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1556);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1560.setUnitRef(INR1555);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1560.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1560.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1557));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1561 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1560);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1561);
                                
                            }
                        
                            
                                
                                Unit INR1562 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1562 = createUnitIfNotExist(INR1562, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1566 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1566.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1566.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1564 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1566);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1566, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1564 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1565.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1563 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1566 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1564 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1564)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1563, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1567 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1567.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1563);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1567.setUnitRef(INR1562);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1567.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1567.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1564));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1568 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1567);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1568);
                                
                            }
                        
                            
                                
                                Unit INR1569 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1569 = createUnitIfNotExist(INR1569, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573.put("rbi-core:CounterPartyAxis", "rbi-core:DepositTakersMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1571 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1571 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1572.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1570 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1573 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1571 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1571)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1570, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1574 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1574.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1570);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1574.setUnitRef(INR1569);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1574.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1574.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1571));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1575 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1574);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1575);
                                
                            }
                        
                            
                                
                                Unit INR1576 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1576 = createUnitIfNotExist(INR1576, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580.put("rbi-core:CounterPartyAxis", "rbi-core:CentralBankMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1578 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1578 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1579.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1577 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1580 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1578 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1578)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1577, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1581 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1581.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1577);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1581.setUnitRef(INR1576);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1581.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1581.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1578));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1582 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1581);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1582);
                                
                            }
                        
                            
                                
                                Unit INR1583 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1583 = createUnitIfNotExist(INR1583, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587.put("rbi-core:CounterPartyAxis", "rbi-core:OtherFinancialCorporationsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1585 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1585 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1586.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1584 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1587 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1585 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1585)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1584, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1588 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1588.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1584);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1588.setUnitRef(INR1583);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1588.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1588.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1585));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1589 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1588);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1589);
                                
                            }
                        
                            
                                
                                Unit INR1590 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1590 = createUnitIfNotExist(INR1590, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594.put("rbi-core:CounterPartyAxis", "rbi-core:GovernmentSourcesMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1592 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1592 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1593.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1591 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1594 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1592 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1592)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1591, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1595 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1595.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1591);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1595.setUnitRef(INR1590);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1595.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1595.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1592));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1596 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1595);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1596);
                                
                            }
                        
                            
                                
                                Unit INR1597 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1597 = createUnitIfNotExist(INR1597, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601.put("rbi-core:CounterPartyAxis", "rbi-core:NonfinancialCorporationsInclPSUsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1599 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1599 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1600.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1598 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1601 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1599 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1599)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1598, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1602 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1602.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1598);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1602.setUnitRef(INR1597);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1602.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1602.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1599));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1603 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1602);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1603);
                                
                            }
                        
                            
                                
                                Unit INR1604 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1604 = createUnitIfNotExist(INR1604, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608.put("rbi-core:CounterPartyAxis", "rbi-core:OtherDomesticSectorsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1606 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1606 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1607.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1605 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1608 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1606 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1606)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1605, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1609 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1609.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1605);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1609.setUnitRef(INR1604);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1609.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1609.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1606));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1610 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1609);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1610);
                                
                            }
                        
                            
                                
                                Unit INR1611 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1611 = createUnitIfNotExist(INR1611, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1615 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1615.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1615.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1613 = DBS01ReportUtil.retrieveValueForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1615);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1615, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1613 = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614 == null ? "" : zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getValue();
                                    if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614 != null ) {
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue1614.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1612 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIMap1615 );
                                        
                                
                                if(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1613 != null && !"".equals(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1613)) {
                                    
                                    addContext(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1612, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sectoralDistributionOfNonperformingLoansReportedForFSIValue1616 = new MonetaryItemType();
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1616.setContextRef(DBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIContext1612);
                                    
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1616.setUnitRef(INR1611);
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1616.setDecimals("INF");
                                    sectoralDistributionOfNonperformingLoansReportedForFSIValue1616.setValue(new BigDecimal(zeroDBS01FS_Layout3SectoralDistributionOfNonperformingLoansReportedForFSIValue1613));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sectoralDistributionOfNonperformingLoansReportedForFSIElement1617 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSectoralDistributionOfNonperformingLoansReportedForFSI(sectoralDistributionOfNonperformingLoansReportedForFSIValue1616);
                                    bodyElements.add(sectoralDistributionOfNonperformingLoansReportedForFSIElement1617);
                                
                            }
                        
                            
                                
                                Unit INR1618 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1618 = createUnitIfNotExist(INR1618, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ReplacementLoansReportedForFSIMap1622 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ReplacementLoansReportedForFSIMap1622.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3ReplacementLoansReportedForFSIMap1622.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ReplacementLoansReportedForFSIValue1620 = DBS01ReportUtil.retrieveValueForElement(field.getReplacementLoansReportedForFSI(), zeroDBS01FS_Layout3ReplacementLoansReportedForFSIMap1622);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621 = DBS01ReportUtil.retrieveFieldDataForElement(field.getReplacementLoansReportedForFSI(), zeroDBS01FS_Layout3ReplacementLoansReportedForFSIMap1622, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ReplacementLoansReportedForFSIValue1620 = zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621 == null ? "" : zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getValue();
                                    if(zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621 != null ) {
                                        if(!zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ReplacementLoansReportedForFSIFieldDataValue1621.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ReplacementLoansReportedForFSIContext1619 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ReplacementLoansReportedForFSIMap1622 );
                                        
                                
                                if(zeroDBS01FS_Layout3ReplacementLoansReportedForFSIValue1620 != null && !"".equals(zeroDBS01FS_Layout3ReplacementLoansReportedForFSIValue1620)) {
                                    
                                    addContext(DBS01FS_Layout3ReplacementLoansReportedForFSIContext1619, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementLoansReportedForFSIValue1623 = new MonetaryItemType();
                                    replacementLoansReportedForFSIValue1623.setContextRef(DBS01FS_Layout3ReplacementLoansReportedForFSIContext1619);
                                    
                                    replacementLoansReportedForFSIValue1623.setUnitRef(INR1618);
                                    replacementLoansReportedForFSIValue1623.setDecimals("INF");
                                    replacementLoansReportedForFSIValue1623.setValue(new BigDecimal(zeroDBS01FS_Layout3ReplacementLoansReportedForFSIValue1620));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementLoansReportedForFSIElement1624 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReplacementLoansReportedForFSI(replacementLoansReportedForFSIValue1623);
                                    bodyElements.add(replacementLoansReportedForFSIElement1624);
                                
                            }
                        
                            
                                
                                Unit INR1625 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1625 = createUnitIfNotExist(INR1625, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherNonPerformingAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIMap1629 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIMap1629.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIMap1629.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIValue1627 = DBS01ReportUtil.retrieveValueForElement(field.getOtherNonPerformingAssetsReportedForFSI(), zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIMap1629);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherNonPerformingAssetsReportedForFSI(), zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIMap1629, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIValue1627 = zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628 == null ? "" : zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getValue();
                                    if(zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628 != null ) {
                                        if(!zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIFieldDataValue1628.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIContext1626 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIMap1629 );
                                        
                                
                                if(zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIValue1627 != null && !"".equals(zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIValue1627)) {
                                    
                                    addContext(DBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIContext1626, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherNonPerformingAssetsReportedForFSIValue1630 = new MonetaryItemType();
                                    otherNonPerformingAssetsReportedForFSIValue1630.setContextRef(DBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIContext1626);
                                    
                                    otherNonPerformingAssetsReportedForFSIValue1630.setUnitRef(INR1625);
                                    otherNonPerformingAssetsReportedForFSIValue1630.setDecimals("INF");
                                    otherNonPerformingAssetsReportedForFSIValue1630.setValue(new BigDecimal(zeroDBS01FS_Layout3OtherNonPerformingAssetsReportedForFSIValue1627));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherNonPerformingAssetsReportedForFSIElement1631 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherNonPerformingAssetsReportedForFSI(otherNonPerformingAssetsReportedForFSIValue1630);
                                    bodyElements.add(otherNonPerformingAssetsReportedForFSIElement1631);
                                
                            }
                        
                            
                                
                                Unit INR1632 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1632 = createUnitIfNotExist(INR1632, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoanLossReservesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoanLossReservesReportedForFSIMap1636 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoanLossReservesReportedForFSIMap1636.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoanLossReservesReportedForFSIValue1634 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossReservesReportedForFSI(), zeroDBS01FS_Layout3LoanLossReservesReportedForFSIMap1636);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoanLossReservesReportedForFSI(), zeroDBS01FS_Layout3LoanLossReservesReportedForFSIMap1636, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoanLossReservesReportedForFSIValue1634 = zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635 == null ? "" : zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getValue();
                                    if(zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635 != null ) {
                                        if(!zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoanLossReservesReportedForFSIFieldDataValue1635.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoanLossReservesReportedForFSIContext1633 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoanLossReservesReportedForFSIMap1636 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoanLossReservesReportedForFSIValue1634 != null && !"".equals(zeroDBS01FS_Layout3LoanLossReservesReportedForFSIValue1634)) {
                                    
                                    addContext(DBS01FS_Layout3LoanLossReservesReportedForFSIContext1633, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loanLossReservesReportedForFSIValue1637 = new MonetaryItemType();
                                    loanLossReservesReportedForFSIValue1637.setContextRef(DBS01FS_Layout3LoanLossReservesReportedForFSIContext1633);
                                    
                                    loanLossReservesReportedForFSIValue1637.setUnitRef(INR1632);
                                    loanLossReservesReportedForFSIValue1637.setDecimals("INF");
                                    loanLossReservesReportedForFSIValue1637.setValue(new BigDecimal(zeroDBS01FS_Layout3LoanLossReservesReportedForFSIValue1634));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loanLossReservesReportedForFSIElement1638 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoanLossReservesReportedForFSI(loanLossReservesReportedForFSIValue1637);
                                    bodyElements.add(loanLossReservesReportedForFSIElement1638);
                                
                            }
                        
                            
                                
                                Unit INR1639 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1639 = createUnitIfNotExist(INR1639, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SpecificProvisionsAgainstTotalDebtClaimsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap1643 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap1643.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1641 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI(), zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap1643);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI(), zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap1643, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1641 = zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642 == null ? "" : zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getValue();
                                    if(zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642 != null ) {
                                        if(!zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue1642.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIContext1640 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap1643 );
                                        
                                
                                if(zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1641 != null && !"".equals(zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1641)) {
                                    
                                    addContext(DBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIContext1640, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType specificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1644 = new MonetaryItemType();
                                    specificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1644.setContextRef(DBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIContext1640);
                                    
                                    specificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1644.setUnitRef(INR1639);
                                    specificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1644.setDecimals("INF");
                                    specificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1644.setValue(new BigDecimal(zeroDBS01FS_Layout3SpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1641));
                                    
                                    
                                    JAXBElement<MonetaryItemType> specificProvisionsAgainstTotalDebtClaimsReportedForFSIElement1645 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI(specificProvisionsAgainstTotalDebtClaimsReportedForFSIValue1644);
                                    bodyElements.add(specificProvisionsAgainstTotalDebtClaimsReportedForFSIElement1645);
                                
                            }
                        
                            
                                
                                Unit INR1646 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1646 = createUnitIfNotExist(INR1646, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap1650 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap1650.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1648 = DBS01ReportUtil.retrieveValueForElement(field.getShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI(), zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap1650);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649 = DBS01ReportUtil.retrieveFieldDataForElement(field.getShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI(), zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap1650, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1648 = zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649 == null ? "" : zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getValue();
                                    if(zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649 != null ) {
                                        if(!zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue1649.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIContext1647 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap1650 );
                                        
                                
                                if(zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1648 != null && !"".equals(zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1648)) {
                                    
                                    addContext(DBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIContext1647, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1651 = new MonetaryItemType();
                                    shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1651.setContextRef(DBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIContext1647);
                                    
                                    shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1651.setUnitRef(INR1646);
                                    shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1651.setDecimals("INF");
                                    shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1651.setValue(new BigDecimal(zeroDBS01FS_Layout3ShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1648));
                                    
                                    
                                    JAXBElement<MonetaryItemType> shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIElement1652 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI(shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue1651);
                                    bodyElements.add(shortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIElement1652);
                                
                            }
                        
                            
                                
                                Unit INR1653 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1653 = createUnitIfNotExist(INR1653, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ArrearsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ArrearsReportedForFSIMap1657 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ArrearsReportedForFSIMap1657.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ArrearsReportedForFSIValue1655 = DBS01ReportUtil.retrieveValueForElement(field.getArrearsReportedForFSI(), zeroDBS01FS_Layout3ArrearsReportedForFSIMap1657);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656 = DBS01ReportUtil.retrieveFieldDataForElement(field.getArrearsReportedForFSI(), zeroDBS01FS_Layout3ArrearsReportedForFSIMap1657, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ArrearsReportedForFSIValue1655 = zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656 == null ? "" : zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getValue();
                                    if(zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656 != null ) {
                                        if(!zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ArrearsReportedForFSIFieldDataValue1656.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ArrearsReportedForFSIContext1654 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ArrearsReportedForFSIMap1657 );
                                        
                                
                                if(zeroDBS01FS_Layout3ArrearsReportedForFSIValue1655 != null && !"".equals(zeroDBS01FS_Layout3ArrearsReportedForFSIValue1655)) {
                                    
                                    addContext(DBS01FS_Layout3ArrearsReportedForFSIContext1654, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType arrearsReportedForFSIValue1658 = new MonetaryItemType();
                                    arrearsReportedForFSIValue1658.setContextRef(DBS01FS_Layout3ArrearsReportedForFSIContext1654);
                                    
                                    arrearsReportedForFSIValue1658.setUnitRef(INR1653);
                                    arrearsReportedForFSIValue1658.setDecimals("INF");
                                    arrearsReportedForFSIValue1658.setValue(new BigDecimal(zeroDBS01FS_Layout3ArrearsReportedForFSIValue1655));
                                    
                                    
                                    JAXBElement<MonetaryItemType> arrearsReportedForFSIElement1659 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createArrearsReportedForFSI(arrearsReportedForFSIValue1658);
                                    bodyElements.add(arrearsReportedForFSIElement1659);
                                
                            }
                        
                            
                                
                                Unit INR1660 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1660 = createUnitIfNotExist(INR1660, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ArrearsOfDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIMap1664 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIMap1664.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIValue1662 = DBS01ReportUtil.retrieveValueForElement(field.getArrearsOfDepositTakersReportedForFSI(), zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIMap1664);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663 = DBS01ReportUtil.retrieveFieldDataForElement(field.getArrearsOfDepositTakersReportedForFSI(), zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIMap1664, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIValue1662 = zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663 == null ? "" : zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getValue();
                                    if(zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663 != null ) {
                                        if(!zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIFieldDataValue1663.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIContext1661 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIMap1664 );
                                        
                                
                                if(zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIValue1662 != null && !"".equals(zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIValue1662)) {
                                    
                                    addContext(DBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIContext1661, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType arrearsOfDepositTakersReportedForFSIValue1665 = new MonetaryItemType();
                                    arrearsOfDepositTakersReportedForFSIValue1665.setContextRef(DBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIContext1661);
                                    
                                    arrearsOfDepositTakersReportedForFSIValue1665.setUnitRef(INR1660);
                                    arrearsOfDepositTakersReportedForFSIValue1665.setDecimals("INF");
                                    arrearsOfDepositTakersReportedForFSIValue1665.setValue(new BigDecimal(zeroDBS01FS_Layout3ArrearsOfDepositTakersReportedForFSIValue1662));
                                    
                                    
                                    JAXBElement<MonetaryItemType> arrearsOfDepositTakersReportedForFSIElement1666 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createArrearsOfDepositTakersReportedForFSI(arrearsOfDepositTakersReportedForFSIValue1665);
                                    bodyElements.add(arrearsOfDepositTakersReportedForFSIElement1666);
                                
                            }
                        
                            
                                
                                Unit INR1667 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1667 = createUnitIfNotExist(INR1667, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - AssetsTransferredToSpecialPurposeEntitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap1671 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap1671.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1669 = DBS01ReportUtil.retrieveValueForElement(field.getAssetsTransferredToSpecialPurposeEntitiesReportedForFSI(), zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap1671);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670 = DBS01ReportUtil.retrieveFieldDataForElement(field.getAssetsTransferredToSpecialPurposeEntitiesReportedForFSI(), zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap1671, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1669 = zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670 == null ? "" : zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getValue();
                                    if(zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670 != null ) {
                                        if(!zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue1670.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIContext1668 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap1671 );
                                        
                                
                                if(zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1669 != null && !"".equals(zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1669)) {
                                    
                                    addContext(DBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIContext1668, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType assetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1672 = new MonetaryItemType();
                                    assetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1672.setContextRef(DBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIContext1668);
                                    
                                    assetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1672.setUnitRef(INR1667);
                                    assetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1672.setDecimals("INF");
                                    assetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1672.setValue(new BigDecimal(zeroDBS01FS_Layout3AssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1669));
                                    
                                    
                                    JAXBElement<MonetaryItemType> assetsTransferredToSpecialPurposeEntitiesReportedForFSIElement1673 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createAssetsTransferredToSpecialPurposeEntitiesReportedForFSI(assetsTransferredToSpecialPurposeEntitiesReportedForFSIValue1672);
                                    bodyElements.add(assetsTransferredToSpecialPurposeEntitiesReportedForFSIElement1673);
                                
                            }
                        
                            
                                
                                Unit INR1674 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1674 = createUnitIfNotExist(INR1674, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GuaranteesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1678 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1678.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1676 = DBS01ReportUtil.retrieveValueForElement(field.getGuaranteesReportedForFSI(), zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1678);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGuaranteesReportedForFSI(), zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1678, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1676 = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677 == null ? "" : zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getValue();
                                    if(zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677 != null ) {
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1677.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3GuaranteesReportedForFSIContext1675 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1678 );
                                        
                                
                                if(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1676 != null && !"".equals(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1676)) {
                                    
                                    addContext(DBS01FS_Layout3GuaranteesReportedForFSIContext1675, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType guaranteesReportedForFSIValue1679 = new MonetaryItemType();
                                    guaranteesReportedForFSIValue1679.setContextRef(DBS01FS_Layout3GuaranteesReportedForFSIContext1675);
                                    
                                    guaranteesReportedForFSIValue1679.setUnitRef(INR1674);
                                    guaranteesReportedForFSIValue1679.setDecimals("INF");
                                    guaranteesReportedForFSIValue1679.setValue(new BigDecimal(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1676));
                                    
                                    
                                    JAXBElement<MonetaryItemType> guaranteesReportedForFSIElement1680 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGuaranteesReportedForFSI(guaranteesReportedForFSIValue1679);
                                    bodyElements.add(guaranteesReportedForFSIElement1680);
                                
                            }
                        
                            
                                
                                Unit INR1681 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1681 = createUnitIfNotExist(INR1681, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GuaranteesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1685 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1685.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1685.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1683 = DBS01ReportUtil.retrieveValueForElement(field.getGuaranteesReportedForFSI(), zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1685);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGuaranteesReportedForFSI(), zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1685, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1683 = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684 == null ? "" : zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getValue();
                                    if(zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684 != null ) {
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1684.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3GuaranteesReportedForFSIContext1682 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1685 );
                                        
                                
                                if(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1683 != null && !"".equals(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1683)) {
                                    
                                    addContext(DBS01FS_Layout3GuaranteesReportedForFSIContext1682, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType guaranteesReportedForFSIValue1686 = new MonetaryItemType();
                                    guaranteesReportedForFSIValue1686.setContextRef(DBS01FS_Layout3GuaranteesReportedForFSIContext1682);
                                    
                                    guaranteesReportedForFSIValue1686.setUnitRef(INR1681);
                                    guaranteesReportedForFSIValue1686.setDecimals("INF");
                                    guaranteesReportedForFSIValue1686.setValue(new BigDecimal(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1683));
                                    
                                    
                                    JAXBElement<MonetaryItemType> guaranteesReportedForFSIElement1687 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGuaranteesReportedForFSI(guaranteesReportedForFSIValue1686);
                                    bodyElements.add(guaranteesReportedForFSIElement1687);
                                
                            }
                        
                            
                                
                                Unit INR1688 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1688 = createUnitIfNotExist(INR1688, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - GuaranteesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1692 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1692.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1692.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1690 = DBS01ReportUtil.retrieveValueForElement(field.getGuaranteesReportedForFSI(), zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1692);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691 = DBS01ReportUtil.retrieveFieldDataForElement(field.getGuaranteesReportedForFSI(), zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1692, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1690 = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691 == null ? "" : zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getValue();
                                    if(zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691 != null ) {
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3GuaranteesReportedForFSIFieldDataValue1691.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3GuaranteesReportedForFSIContext1689 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3GuaranteesReportedForFSIMap1692 );
                                        
                                
                                if(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1690 != null && !"".equals(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1690)) {
                                    
                                    addContext(DBS01FS_Layout3GuaranteesReportedForFSIContext1689, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType guaranteesReportedForFSIValue1693 = new MonetaryItemType();
                                    guaranteesReportedForFSIValue1693.setContextRef(DBS01FS_Layout3GuaranteesReportedForFSIContext1689);
                                    
                                    guaranteesReportedForFSIValue1693.setUnitRef(INR1688);
                                    guaranteesReportedForFSIValue1693.setDecimals("INF");
                                    guaranteesReportedForFSIValue1693.setValue(new BigDecimal(zeroDBS01FS_Layout3GuaranteesReportedForFSIValue1690));
                                    
                                    
                                    JAXBElement<MonetaryItemType> guaranteesReportedForFSIElement1694 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createGuaranteesReportedForFSI(guaranteesReportedForFSIValue1693);
                                    bodyElements.add(guaranteesReportedForFSIElement1694);
                                
                            }
                        
                            
                                
                                Unit INR1695 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1695 = createUnitIfNotExist(INR1695, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CreditCommitmentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1699 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1699.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1697 = DBS01ReportUtil.retrieveValueForElement(field.getCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1699);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1699, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1697 = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698 == null ? "" : zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getValue();
                                    if(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698 != null ) {
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1698.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1696 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1699 );
                                        
                                
                                if(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1697 != null && !"".equals(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1697)) {
                                    
                                    addContext(DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1696, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType creditCommitmentsReportedForFSIValue1700 = new MonetaryItemType();
                                    creditCommitmentsReportedForFSIValue1700.setContextRef(DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1696);
                                    
                                    creditCommitmentsReportedForFSIValue1700.setUnitRef(INR1695);
                                    creditCommitmentsReportedForFSIValue1700.setDecimals("INF");
                                    creditCommitmentsReportedForFSIValue1700.setValue(new BigDecimal(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1697));
                                    
                                    
                                    JAXBElement<MonetaryItemType> creditCommitmentsReportedForFSIElement1701 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCreditCommitmentsReportedForFSI(creditCommitmentsReportedForFSIValue1700);
                                    bodyElements.add(creditCommitmentsReportedForFSIElement1701);
                                
                            }
                        
                            
                                
                                Unit INR1702 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1702 = createUnitIfNotExist(INR1702, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CreditCommitmentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1706 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1706.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1706.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1704 = DBS01ReportUtil.retrieveValueForElement(field.getCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1706);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1706, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1704 = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705 == null ? "" : zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getValue();
                                    if(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705 != null ) {
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1705.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1703 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1706 );
                                        
                                
                                if(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1704 != null && !"".equals(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1704)) {
                                    
                                    addContext(DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1703, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType creditCommitmentsReportedForFSIValue1707 = new MonetaryItemType();
                                    creditCommitmentsReportedForFSIValue1707.setContextRef(DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1703);
                                    
                                    creditCommitmentsReportedForFSIValue1707.setUnitRef(INR1702);
                                    creditCommitmentsReportedForFSIValue1707.setDecimals("INF");
                                    creditCommitmentsReportedForFSIValue1707.setValue(new BigDecimal(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1704));
                                    
                                    
                                    JAXBElement<MonetaryItemType> creditCommitmentsReportedForFSIElement1708 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCreditCommitmentsReportedForFSI(creditCommitmentsReportedForFSIValue1707);
                                    bodyElements.add(creditCommitmentsReportedForFSIElement1708);
                                
                            }
                        
                            
                                
                                Unit INR1709 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1709 = createUnitIfNotExist(INR1709, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CreditCommitmentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1713 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1713.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1713.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1711 = DBS01ReportUtil.retrieveValueForElement(field.getCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1713);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1713, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1711 = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712 == null ? "" : zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getValue();
                                    if(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712 != null ) {
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIFieldDataValue1712.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1710 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIMap1713 );
                                        
                                
                                if(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1711 != null && !"".equals(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1711)) {
                                    
                                    addContext(DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1710, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType creditCommitmentsReportedForFSIValue1714 = new MonetaryItemType();
                                    creditCommitmentsReportedForFSIValue1714.setContextRef(DBS01FS_Layout3CreditCommitmentsReportedForFSIContext1710);
                                    
                                    creditCommitmentsReportedForFSIValue1714.setUnitRef(INR1709);
                                    creditCommitmentsReportedForFSIValue1714.setDecimals("INF");
                                    creditCommitmentsReportedForFSIValue1714.setValue(new BigDecimal(zeroDBS01FS_Layout3CreditCommitmentsReportedForFSIValue1711));
                                    
                                    
                                    JAXBElement<MonetaryItemType> creditCommitmentsReportedForFSIElement1715 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCreditCommitmentsReportedForFSI(creditCommitmentsReportedForFSIValue1714);
                                    bodyElements.add(creditCommitmentsReportedForFSIElement1715);
                                
                            }
                        
                            
                                
                                Unit INR1716 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1716 = createUnitIfNotExist(INR1716, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap1720 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap1720.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1718 = DBS01ReportUtil.retrieveValueForElement(field.getAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI(), zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap1720);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719 = DBS01ReportUtil.retrieveFieldDataForElement(field.getAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI(), zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap1720, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1718 = zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719 == null ? "" : zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getValue();
                                    if(zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719 != null ) {
                                        if(!zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue1719.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIContext1717 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap1720 );
                                        
                                
                                if(zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1718 != null && !"".equals(zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1718)) {
                                    
                                    addContext(DBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIContext1717, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1721 = new MonetaryItemType();
                                    assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1721.setContextRef(DBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIContext1717);
                                    
                                    assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1721.setUnitRef(INR1716);
                                    assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1721.setDecimals("INF");
                                    assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1721.setValue(new BigDecimal(zeroDBS01FS_Layout3AssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1718));
                                    
                                    
                                    JAXBElement<MonetaryItemType> assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIElement1722 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI(assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue1721);
                                    bodyElements.add(assetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIElement1722);
                                
                            }
                        
                            
                            Unit pure1723 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1723 = createUnitIfNotExist(pure1723, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - DurationOfAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIMap1727 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIMap1727.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIValue1725 = DBS01ReportUtil.retrieveValueForElement(field.getDurationOfAssetsReportedForFSI(), zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIMap1727);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDurationOfAssetsReportedForFSI(), zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIMap1727, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIValue1725 = zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726 == null ? "" : zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getValue();
                                    if(zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726 != null ) {
                                        if(!zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIFieldDataValue1726.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3DurationOfAssetsReportedForFSIContext1724 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIMap1727 );
                                        
                                
                                if(zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIValue1725 != null && !"".equals(zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIValue1725)) {
                                    
                                    addContext(DBS01FS_Layout3DurationOfAssetsReportedForFSIContext1724, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    IntegerItemType durationOfAssetsReportedForFSIValue1728 = new IntegerItemType();
                                    durationOfAssetsReportedForFSIValue1728.setContextRef(DBS01FS_Layout3DurationOfAssetsReportedForFSIContext1724);
                                    
                                    durationOfAssetsReportedForFSIValue1728.setUnitRef(pure1723);
                                    durationOfAssetsReportedForFSIValue1728.setDecimals("INF");
                                    durationOfAssetsReportedForFSIValue1728.setValue(new BigInteger(zeroDBS01FS_Layout3DurationOfAssetsReportedForFSIValue1725));
                                    
                                    
                                    JAXBElement<IntegerItemType> durationOfAssetsReportedForFSIElement1729 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDurationOfAssetsReportedForFSI(durationOfAssetsReportedForFSIValue1728);
                                    bodyElements.add(durationOfAssetsReportedForFSIElement1729);
                                
                            }
                        
                            
                            Unit pure1730 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1730 = createUnitIfNotExist(pure1730, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - DurationOfLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIMap1734 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIMap1734.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIValue1732 = DBS01ReportUtil.retrieveValueForElement(field.getDurationOfLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIMap1734);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDurationOfLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIMap1734, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIValue1732 = zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733 == null ? "" : zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getValue();
                                    if(zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733 != null ) {
                                        if(!zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIFieldDataValue1733.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3DurationOfLiabilitiesReportedForFSIContext1731 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIMap1734 );
                                        
                                
                                if(zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIValue1732 != null && !"".equals(zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIValue1732)) {
                                    
                                    addContext(DBS01FS_Layout3DurationOfLiabilitiesReportedForFSIContext1731, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    IntegerItemType durationOfLiabilitiesReportedForFSIValue1735 = new IntegerItemType();
                                    durationOfLiabilitiesReportedForFSIValue1735.setContextRef(DBS01FS_Layout3DurationOfLiabilitiesReportedForFSIContext1731);
                                    
                                    durationOfLiabilitiesReportedForFSIValue1735.setUnitRef(pure1730);
                                    durationOfLiabilitiesReportedForFSIValue1735.setDecimals("INF");
                                    durationOfLiabilitiesReportedForFSIValue1735.setValue(new BigInteger(zeroDBS01FS_Layout3DurationOfLiabilitiesReportedForFSIValue1732));
                                    
                                    
                                    JAXBElement<IntegerItemType> durationOfLiabilitiesReportedForFSIElement1736 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDurationOfLiabilitiesReportedForFSI(durationOfLiabilitiesReportedForFSIValue1735);
                                    bodyElements.add(durationOfLiabilitiesReportedForFSIElement1736);
                                
                            }
                        
                            
                            Unit pure1737 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1737 = createUnitIfNotExist(pure1737, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NumberOfLargeExposuresReportedForFSI
                            
                                Map zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1741 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1741.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1739 = DBS01ReportUtil.retrieveValueForElement(field.getNumberOfLargeExposuresReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1741);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNumberOfLargeExposuresReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1741, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1739 = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740 == null ? "" : zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getValue();
                                    if(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740 != null ) {
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1740.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NumberOfLargeExposuresReportedForFSIContext1738 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1741 );
                                        
                                
                                if(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1739 != null && !"".equals(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1739)) {
                                    
                                    addContext(DBS01FS_Layout3NumberOfLargeExposuresReportedForFSIContext1738, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    IntegerItemType numberOfLargeExposuresReportedForFSIValue1742 = new IntegerItemType();
                                    numberOfLargeExposuresReportedForFSIValue1742.setContextRef(DBS01FS_Layout3NumberOfLargeExposuresReportedForFSIContext1738);
                                    
                                    numberOfLargeExposuresReportedForFSIValue1742.setUnitRef(pure1737);
                                    numberOfLargeExposuresReportedForFSIValue1742.setDecimals("INF");
                                    numberOfLargeExposuresReportedForFSIValue1742.setValue(new BigInteger(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1739));
                                    
                                    
                                    JAXBElement<IntegerItemType> numberOfLargeExposuresReportedForFSIElement1743 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNumberOfLargeExposuresReportedForFSI(numberOfLargeExposuresReportedForFSIValue1742);
                                    bodyElements.add(numberOfLargeExposuresReportedForFSIElement1743);
                                
                            }
                        
                            
                            Unit pure1744 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1744 = createUnitIfNotExist(pure1744, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NumberOfLargeExposureByIndividualReportedForFSI
                            
                                Map zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIMap1748 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIMap1748.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIValue1746 = DBS01ReportUtil.retrieveValueForElement(field.getNumberOfLargeExposureByIndividualReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIMap1748);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNumberOfLargeExposureByIndividualReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIMap1748, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIValue1746 = zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747 == null ? "" : zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getValue();
                                    if(zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747 != null ) {
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIFieldDataValue1747.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIContext1745 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIMap1748 );
                                        
                                
                                if(zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIValue1746 != null && !"".equals(zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIValue1746)) {
                                    
                                    addContext(DBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIContext1745, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    IntegerItemType numberOfLargeExposureByIndividualReportedForFSIValue1749 = new IntegerItemType();
                                    numberOfLargeExposureByIndividualReportedForFSIValue1749.setContextRef(DBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIContext1745);
                                    
                                    numberOfLargeExposureByIndividualReportedForFSIValue1749.setUnitRef(pure1744);
                                    numberOfLargeExposureByIndividualReportedForFSIValue1749.setDecimals("INF");
                                    numberOfLargeExposureByIndividualReportedForFSIValue1749.setValue(new BigInteger(zeroDBS01FS_Layout3NumberOfLargeExposureByIndividualReportedForFSIValue1746));
                                    
                                    
                                    JAXBElement<IntegerItemType> numberOfLargeExposureByIndividualReportedForFSIElement1750 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNumberOfLargeExposureByIndividualReportedForFSI(numberOfLargeExposureByIndividualReportedForFSIValue1749);
                                    bodyElements.add(numberOfLargeExposureByIndividualReportedForFSIElement1750);
                                
                            }
                        
                            
                            Unit pure1751 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1751 = createUnitIfNotExist(pure1751, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NumberOfLargeExposureByGroupReportedForFSI
                            
                                Map zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIMap1755 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIMap1755.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIValue1753 = DBS01ReportUtil.retrieveValueForElement(field.getNumberOfLargeExposureByGroupReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIMap1755);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNumberOfLargeExposureByGroupReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIMap1755, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIValue1753 = zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754 == null ? "" : zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getValue();
                                    if(zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754 != null ) {
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIFieldDataValue1754.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIContext1752 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIMap1755 );
                                        
                                
                                if(zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIValue1753 != null && !"".equals(zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIValue1753)) {
                                    
                                    addContext(DBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIContext1752, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    IntegerItemType numberOfLargeExposureByGroupReportedForFSIValue1756 = new IntegerItemType();
                                    numberOfLargeExposureByGroupReportedForFSIValue1756.setContextRef(DBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIContext1752);
                                    
                                    numberOfLargeExposureByGroupReportedForFSIValue1756.setUnitRef(pure1751);
                                    numberOfLargeExposureByGroupReportedForFSIValue1756.setDecimals("INF");
                                    numberOfLargeExposureByGroupReportedForFSIValue1756.setValue(new BigInteger(zeroDBS01FS_Layout3NumberOfLargeExposureByGroupReportedForFSIValue1753));
                                    
                                    
                                    JAXBElement<IntegerItemType> numberOfLargeExposureByGroupReportedForFSIElement1757 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNumberOfLargeExposureByGroupReportedForFSI(numberOfLargeExposureByGroupReportedForFSIValue1756);
                                    bodyElements.add(numberOfLargeExposureByGroupReportedForFSIElement1757);
                                
                            }
                        
                            
                                
                                Unit INR1758 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1758 = createUnitIfNotExist(INR1758, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap1762 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap1762.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1760 = DBS01ReportUtil.retrieveValueForElement(field.getExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI(), zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap1762);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761 = DBS01ReportUtil.retrieveFieldDataForElement(field.getExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI(), zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap1762, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1760 = zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761 == null ? "" : zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getValue();
                                    if(zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761 != null ) {
                                        if(!zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue1761.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIContext1759 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap1762 );
                                        
                                
                                if(zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1760 != null && !"".equals(zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1760)) {
                                    
                                    addContext(DBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIContext1759, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1763 = new MonetaryItemType();
                                    exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1763.setContextRef(DBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIContext1759);
                                    
                                    exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1763.setUnitRef(INR1758);
                                    exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1763.setDecimals("INF");
                                    exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1763.setValue(new BigDecimal(zeroDBS01FS_Layout3ExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1760));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIElement1764 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI(exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue1763);
                                    bodyElements.add(exposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIElement1764);
                                
                            }
                        
                            
                                
                                Unit INR1765 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1765 = createUnitIfNotExist(INR1765, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3FinancialAssetsReportedForFSIValue1767 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3FinancialAssetsReportedForFSIValue1767 = zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768 == null ? "" : zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getValue();
                                    if(zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768 != null ) {
                                        if(!zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3FinancialAssetsReportedForFSIFieldDataValue1768.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3FinancialAssetsReportedForFSIContext1766 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3FinancialAssetsReportedForFSIMap1769 );
                                        
                                
                                if(zeroDBS01FS_Layout3FinancialAssetsReportedForFSIValue1767 != null && !"".equals(zeroDBS01FS_Layout3FinancialAssetsReportedForFSIValue1767)) {
                                    
                                    addContext(DBS01FS_Layout3FinancialAssetsReportedForFSIContext1766, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialAssetsReportedForFSIValue1770 = new MonetaryItemType();
                                    financialAssetsReportedForFSIValue1770.setContextRef(DBS01FS_Layout3FinancialAssetsReportedForFSIContext1766);
                                    
                                    financialAssetsReportedForFSIValue1770.setUnitRef(INR1765);
                                    financialAssetsReportedForFSIValue1770.setDecimals("INF");
                                    financialAssetsReportedForFSIValue1770.setValue(new BigDecimal(zeroDBS01FS_Layout3FinancialAssetsReportedForFSIValue1767));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialAssetsReportedForFSIElement1771 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialAssetsReportedForFSI(financialAssetsReportedForFSIValue1770);
                                    bodyElements.add(financialAssetsReportedForFSIElement1771);
                                
                            }
                        
                            
                                
                                Unit INR1772 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1772 = createUnitIfNotExist(INR1772, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIMap1776 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIMap1776.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIMap1776.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIValue1774 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIMap1776);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIMap1776, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIValue1774 = zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775 == null ? "" : zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getValue();
                                    if(zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775 != null ) {
                                        if(!zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIFieldDataValue1775.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3CurrencyAndDepositsReportedForFSIContext1773 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIMap1776 );
                                        
                                
                                if(zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIValue1774 != null && !"".equals(zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIValue1774)) {
                                    
                                    addContext(DBS01FS_Layout3CurrencyAndDepositsReportedForFSIContext1773, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue1777 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue1777.setContextRef(DBS01FS_Layout3CurrencyAndDepositsReportedForFSIContext1773);
                                    
                                    currencyAndDepositsReportedForFSIValue1777.setUnitRef(INR1772);
                                    currencyAndDepositsReportedForFSIValue1777.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue1777.setValue(new BigDecimal(zeroDBS01FS_Layout3CurrencyAndDepositsReportedForFSIValue1774));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement1778 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue1777);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement1778);
                                
                            }
                        
                            
                                
                                Unit INR1779 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1779 = createUnitIfNotExist(INR1779, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoansReportedForFSIMap1783 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1783.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoansReportedForFSIMap1783.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoansReportedForFSIValue1781 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1783);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01FS_Layout3LoansReportedForFSIMap1783, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoansReportedForFSIValue1781 = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782 == null ? "" : zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getValue();
                                    if(zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782 != null ) {
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoansReportedForFSIFieldDataValue1782.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoansReportedForFSIContext1780 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoansReportedForFSIMap1783 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoansReportedForFSIValue1781 != null && !"".equals(zeroDBS01FS_Layout3LoansReportedForFSIValue1781)) {
                                    
                                    addContext(DBS01FS_Layout3LoansReportedForFSIContext1780, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue1784 = new MonetaryItemType();
                                    loansReportedForFSIValue1784.setContextRef(DBS01FS_Layout3LoansReportedForFSIContext1780);
                                    
                                    loansReportedForFSIValue1784.setUnitRef(INR1779);
                                    loansReportedForFSIValue1784.setDecimals("INF");
                                    loansReportedForFSIValue1784.setValue(new BigDecimal(zeroDBS01FS_Layout3LoansReportedForFSIValue1781));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement1785 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue1784);
                                    bodyElements.add(loansReportedForFSIElement1785);
                                
                            }
                        
                            
                                
                                Unit INR1786 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1786 = createUnitIfNotExist(INR1786, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ForeignCurrencyLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1790 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1790.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1790.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1788 = DBS01ReportUtil.retrieveValueForElement(field.getForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1790);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789 = DBS01ReportUtil.retrieveFieldDataForElement(field.getForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1790, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1788 = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789 == null ? "" : zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getValue();
                                    if(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789 != null ) {
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIFieldDataValue1789.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ForeignCurrencyLoansReportedForFSIContext1787 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIMap1790 );
                                        
                                
                                if(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1788 != null && !"".equals(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1788)) {
                                    
                                    addContext(DBS01FS_Layout3ForeignCurrencyLoansReportedForFSIContext1787, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType foreignCurrencyLoansReportedForFSIValue1791 = new MonetaryItemType();
                                    foreignCurrencyLoansReportedForFSIValue1791.setContextRef(DBS01FS_Layout3ForeignCurrencyLoansReportedForFSIContext1787);
                                    
                                    foreignCurrencyLoansReportedForFSIValue1791.setUnitRef(INR1786);
                                    foreignCurrencyLoansReportedForFSIValue1791.setDecimals("INF");
                                    foreignCurrencyLoansReportedForFSIValue1791.setValue(new BigDecimal(zeroDBS01FS_Layout3ForeignCurrencyLoansReportedForFSIValue1788));
                                    
                                    
                                    JAXBElement<MonetaryItemType> foreignCurrencyLoansReportedForFSIElement1792 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createForeignCurrencyLoansReportedForFSI(foreignCurrencyLoansReportedForFSIValue1791);
                                    bodyElements.add(foreignCurrencyLoansReportedForFSIElement1792);
                                
                            }
                        
                            
                                
                                Unit INR1793 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1793 = createUnitIfNotExist(INR1793, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIMap1797 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIMap1797.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIMap1797.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIValue1795 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIMap1797);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIMap1797, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIValue1795 = zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796 == null ? "" : zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getValue();
                                    if(zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796 != null ) {
                                        if(!zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIFieldDataValue1796.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3DebtSecuritiesReportedForFSIContext1794 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIMap1797 );
                                        
                                
                                if(zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIValue1795 != null && !"".equals(zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIValue1795)) {
                                    
                                    addContext(DBS01FS_Layout3DebtSecuritiesReportedForFSIContext1794, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue1798 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue1798.setContextRef(DBS01FS_Layout3DebtSecuritiesReportedForFSIContext1794);
                                    
                                    debtSecuritiesReportedForFSIValue1798.setUnitRef(INR1793);
                                    debtSecuritiesReportedForFSIValue1798.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue1798.setValue(new BigDecimal(zeroDBS01FS_Layout3DebtSecuritiesReportedForFSIValue1795));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement1799 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue1798);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement1799);
                                
                            }
                        
                            
                                
                                Unit INR1800 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1800 = createUnitIfNotExist(INR1800, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIMap1804 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIMap1804.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIMap1804.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIValue1802 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIMap1804);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIMap1804, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIValue1802 = zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803 == null ? "" : zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getValue();
                                    if(zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803 != null ) {
                                        if(!zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIFieldDataValue1803.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3SharesAndOtherEquityReportedForFSIContext1801 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIMap1804 );
                                        
                                
                                if(zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIValue1802 != null && !"".equals(zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIValue1802)) {
                                    
                                    addContext(DBS01FS_Layout3SharesAndOtherEquityReportedForFSIContext1801, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityReportedForFSIValue1805 = new MonetaryItemType();
                                    sharesAndOtherEquityReportedForFSIValue1805.setContextRef(DBS01FS_Layout3SharesAndOtherEquityReportedForFSIContext1801);
                                    
                                    sharesAndOtherEquityReportedForFSIValue1805.setUnitRef(INR1800);
                                    sharesAndOtherEquityReportedForFSIValue1805.setDecimals("INF");
                                    sharesAndOtherEquityReportedForFSIValue1805.setValue(new BigDecimal(zeroDBS01FS_Layout3SharesAndOtherEquityReportedForFSIValue1802));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityReportedForFSIElement1806 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityReportedForFSI(sharesAndOtherEquityReportedForFSIValue1805);
                                    bodyElements.add(sharesAndOtherEquityReportedForFSIElement1806);
                                
                            }
                        
                            
                                
                                Unit INR1807 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1807 = createUnitIfNotExist(INR1807, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3OtherAssetsReportedForFSIMap1811 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3OtherAssetsReportedForFSIMap1811.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3OtherAssetsReportedForFSIMap1811.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3OtherAssetsReportedForFSIValue1809 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01FS_Layout3OtherAssetsReportedForFSIMap1811);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01FS_Layout3OtherAssetsReportedForFSIMap1811, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3OtherAssetsReportedForFSIValue1809 = zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810 == null ? "" : zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getValue();
                                    if(zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810 != null ) {
                                        if(!zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3OtherAssetsReportedForFSIFieldDataValue1810.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3OtherAssetsReportedForFSIContext1808 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3OtherAssetsReportedForFSIMap1811 );
                                        
                                
                                if(zeroDBS01FS_Layout3OtherAssetsReportedForFSIValue1809 != null && !"".equals(zeroDBS01FS_Layout3OtherAssetsReportedForFSIValue1809)) {
                                    
                                    addContext(DBS01FS_Layout3OtherAssetsReportedForFSIContext1808, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherAssetsReportedForFSIValue1812 = new MonetaryItemType();
                                    otherAssetsReportedForFSIValue1812.setContextRef(DBS01FS_Layout3OtherAssetsReportedForFSIContext1808);
                                    
                                    otherAssetsReportedForFSIValue1812.setUnitRef(INR1807);
                                    otherAssetsReportedForFSIValue1812.setDecimals("INF");
                                    otherAssetsReportedForFSIValue1812.setValue(new BigDecimal(zeroDBS01FS_Layout3OtherAssetsReportedForFSIValue1809));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherAssetsReportedForFSIElement1813 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherAssetsReportedForFSI(otherAssetsReportedForFSIValue1812);
                                    bodyElements.add(otherAssetsReportedForFSIElement1813);
                                
                            }
                        
                            
                                
                                Unit INR1814 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1814 = createUnitIfNotExist(INR1814, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LiabilitiesReportedForFSIValue1816 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LiabilitiesReportedForFSIValue1816 = zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817 == null ? "" : zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getValue();
                                    if(zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817 != null ) {
                                        if(!zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LiabilitiesReportedForFSIFieldDataValue1817.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LiabilitiesReportedForFSIContext1815 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LiabilitiesReportedForFSIMap1818 );
                                        
                                
                                if(zeroDBS01FS_Layout3LiabilitiesReportedForFSIValue1816 != null && !"".equals(zeroDBS01FS_Layout3LiabilitiesReportedForFSIValue1816)) {
                                    
                                    addContext(DBS01FS_Layout3LiabilitiesReportedForFSIContext1815, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liabilitiesReportedForFSIValue1819 = new MonetaryItemType();
                                    liabilitiesReportedForFSIValue1819.setContextRef(DBS01FS_Layout3LiabilitiesReportedForFSIContext1815);
                                    
                                    liabilitiesReportedForFSIValue1819.setUnitRef(INR1814);
                                    liabilitiesReportedForFSIValue1819.setDecimals("INF");
                                    liabilitiesReportedForFSIValue1819.setValue(new BigDecimal(zeroDBS01FS_Layout3LiabilitiesReportedForFSIValue1816));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liabilitiesReportedForFSIElement1820 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiabilitiesReportedForFSI(liabilitiesReportedForFSIValue1819);
                                    bodyElements.add(liabilitiesReportedForFSIElement1820);
                                
                            }
                        
                            
                                
                                Unit INR1821 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1821 = createUnitIfNotExist(INR1821, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIMap1825 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIMap1825.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIMap1825.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIValue1823 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIMap1825);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIMap1825, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIValue1823 = zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824 == null ? "" : zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getValue();
                                    if(zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824 != null ) {
                                        if(!zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue1824.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIContext1822 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIMap1825 );
                                        
                                
                                if(zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIValue1823 != null && !"".equals(zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIValue1823)) {
                                    
                                    addContext(DBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIContext1822, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositLiabilitiesReportedForFSIValue1826 = new MonetaryItemType();
                                    currencyAndDepositLiabilitiesReportedForFSIValue1826.setContextRef(DBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIContext1822);
                                    
                                    currencyAndDepositLiabilitiesReportedForFSIValue1826.setUnitRef(INR1821);
                                    currencyAndDepositLiabilitiesReportedForFSIValue1826.setDecimals("INF");
                                    currencyAndDepositLiabilitiesReportedForFSIValue1826.setValue(new BigDecimal(zeroDBS01FS_Layout3CurrencyAndDepositLiabilitiesReportedForFSIValue1823));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositLiabilitiesReportedForFSIElement1827 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositLiabilitiesReportedForFSI(currencyAndDepositLiabilitiesReportedForFSIValue1826);
                                    bodyElements.add(currencyAndDepositLiabilitiesReportedForFSIElement1827);
                                
                            }
                        
                            
                                
                                Unit INR1828 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1828 = createUnitIfNotExist(INR1828, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CustomerDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3CustomerDepositsReportedForFSIMap1832 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3CustomerDepositsReportedForFSIMap1832.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3CustomerDepositsReportedForFSIMap1832.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3CustomerDepositsReportedForFSIValue1830 = DBS01ReportUtil.retrieveValueForElement(field.getCustomerDepositsReportedForFSI(), zeroDBS01FS_Layout3CustomerDepositsReportedForFSIMap1832);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCustomerDepositsReportedForFSI(), zeroDBS01FS_Layout3CustomerDepositsReportedForFSIMap1832, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3CustomerDepositsReportedForFSIValue1830 = zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831 == null ? "" : zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getValue();
                                    if(zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831 != null ) {
                                        if(!zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3CustomerDepositsReportedForFSIFieldDataValue1831.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3CustomerDepositsReportedForFSIContext1829 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3CustomerDepositsReportedForFSIMap1832 );
                                        
                                
                                if(zeroDBS01FS_Layout3CustomerDepositsReportedForFSIValue1830 != null && !"".equals(zeroDBS01FS_Layout3CustomerDepositsReportedForFSIValue1830)) {
                                    
                                    addContext(DBS01FS_Layout3CustomerDepositsReportedForFSIContext1829, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType customerDepositsReportedForFSIValue1833 = new MonetaryItemType();
                                    customerDepositsReportedForFSIValue1833.setContextRef(DBS01FS_Layout3CustomerDepositsReportedForFSIContext1829);
                                    
                                    customerDepositsReportedForFSIValue1833.setUnitRef(INR1828);
                                    customerDepositsReportedForFSIValue1833.setDecimals("INF");
                                    customerDepositsReportedForFSIValue1833.setValue(new BigDecimal(zeroDBS01FS_Layout3CustomerDepositsReportedForFSIValue1830));
                                    
                                    
                                    JAXBElement<MonetaryItemType> customerDepositsReportedForFSIElement1834 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCustomerDepositsReportedForFSI(customerDepositsReportedForFSIValue1833);
                                    bodyElements.add(customerDepositsReportedForFSIElement1834);
                                
                            }
                        
                            
                                
                                Unit INR1835 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1835 = createUnitIfNotExist(INR1835, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InterbankDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3InterbankDepositsReportedForFSIMap1839 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3InterbankDepositsReportedForFSIMap1839.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3InterbankDepositsReportedForFSIMap1839.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3InterbankDepositsReportedForFSIValue1837 = DBS01ReportUtil.retrieveValueForElement(field.getInterbankDepositsReportedForFSI(), zeroDBS01FS_Layout3InterbankDepositsReportedForFSIMap1839);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInterbankDepositsReportedForFSI(), zeroDBS01FS_Layout3InterbankDepositsReportedForFSIMap1839, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3InterbankDepositsReportedForFSIValue1837 = zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838 == null ? "" : zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getValue();
                                    if(zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838 != null ) {
                                        if(!zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3InterbankDepositsReportedForFSIFieldDataValue1838.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3InterbankDepositsReportedForFSIContext1836 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3InterbankDepositsReportedForFSIMap1839 );
                                        
                                
                                if(zeroDBS01FS_Layout3InterbankDepositsReportedForFSIValue1837 != null && !"".equals(zeroDBS01FS_Layout3InterbankDepositsReportedForFSIValue1837)) {
                                    
                                    addContext(DBS01FS_Layout3InterbankDepositsReportedForFSIContext1836, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType interbankDepositsReportedForFSIValue1840 = new MonetaryItemType();
                                    interbankDepositsReportedForFSIValue1840.setContextRef(DBS01FS_Layout3InterbankDepositsReportedForFSIContext1836);
                                    
                                    interbankDepositsReportedForFSIValue1840.setUnitRef(INR1835);
                                    interbankDepositsReportedForFSIValue1840.setDecimals("INF");
                                    interbankDepositsReportedForFSIValue1840.setValue(new BigDecimal(zeroDBS01FS_Layout3InterbankDepositsReportedForFSIValue1837));
                                    
                                    
                                    JAXBElement<MonetaryItemType> interbankDepositsReportedForFSIElement1841 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInterbankDepositsReportedForFSI(interbankDepositsReportedForFSIValue1840);
                                    bodyElements.add(interbankDepositsReportedForFSIElement1841);
                                
                            }
                        
                            
                                
                                Unit INR1842 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1842 = createUnitIfNotExist(INR1842, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIMap1846 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIMap1846.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIMap1846.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIValue1844 = DBS01ReportUtil.retrieveValueForElement(field.getOtherCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIMap1846);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIMap1846, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIValue1844 = zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845 == null ? "" : zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getValue();
                                    if(zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845 != null ) {
                                        if(!zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIFieldDataValue1845.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIContext1843 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIMap1846 );
                                        
                                
                                if(zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIValue1844 != null && !"".equals(zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIValue1844)) {
                                    
                                    addContext(DBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIContext1843, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherCurrencyAndDepositsReportedForFSIValue1847 = new MonetaryItemType();
                                    otherCurrencyAndDepositsReportedForFSIValue1847.setContextRef(DBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIContext1843);
                                    
                                    otherCurrencyAndDepositsReportedForFSIValue1847.setUnitRef(INR1842);
                                    otherCurrencyAndDepositsReportedForFSIValue1847.setDecimals("INF");
                                    otherCurrencyAndDepositsReportedForFSIValue1847.setValue(new BigDecimal(zeroDBS01FS_Layout3OtherCurrencyAndDepositsReportedForFSIValue1844));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherCurrencyAndDepositsReportedForFSIElement1848 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherCurrencyAndDepositsReportedForFSI(otherCurrencyAndDepositsReportedForFSIValue1847);
                                    bodyElements.add(otherCurrencyAndDepositsReportedForFSIElement1848);
                                
                            }
                        
                            
                                
                                Unit INR1849 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1849 = createUnitIfNotExist(INR1849, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoanLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIMap1853 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIMap1853.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIMap1853.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIValue1851 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIMap1853);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoanLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIMap1853, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIValue1851 = zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852 == null ? "" : zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getValue();
                                    if(zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852 != null ) {
                                        if(!zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIFieldDataValue1852.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LoanLiabilitiesReportedForFSIContext1850 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIMap1853 );
                                        
                                
                                if(zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIValue1851 != null && !"".equals(zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIValue1851)) {
                                    
                                    addContext(DBS01FS_Layout3LoanLiabilitiesReportedForFSIContext1850, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loanLiabilitiesReportedForFSIValue1854 = new MonetaryItemType();
                                    loanLiabilitiesReportedForFSIValue1854.setContextRef(DBS01FS_Layout3LoanLiabilitiesReportedForFSIContext1850);
                                    
                                    loanLiabilitiesReportedForFSIValue1854.setUnitRef(INR1849);
                                    loanLiabilitiesReportedForFSIValue1854.setDecimals("INF");
                                    loanLiabilitiesReportedForFSIValue1854.setValue(new BigDecimal(zeroDBS01FS_Layout3LoanLiabilitiesReportedForFSIValue1851));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loanLiabilitiesReportedForFSIElement1855 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoanLiabilitiesReportedForFSI(loanLiabilitiesReportedForFSIValue1854);
                                    bodyElements.add(loanLiabilitiesReportedForFSIElement1855);
                                
                            }
                        
                            
                                
                                Unit INR1856 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1856 = createUnitIfNotExist(INR1856, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIMap1860 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIMap1860.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIMap1860.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIValue1858 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIMap1860);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIMap1860, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIValue1858 = zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859 == null ? "" : zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getValue();
                                    if(zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859 != null ) {
                                        if(!zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIFieldDataValue1859.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIContext1857 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIMap1860 );
                                        
                                
                                if(zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIValue1858 != null && !"".equals(zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIValue1858)) {
                                    
                                    addContext(DBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIContext1857, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesLiabilitiesReportedForFSIValue1861 = new MonetaryItemType();
                                    debtSecuritiesLiabilitiesReportedForFSIValue1861.setContextRef(DBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIContext1857);
                                    
                                    debtSecuritiesLiabilitiesReportedForFSIValue1861.setUnitRef(INR1856);
                                    debtSecuritiesLiabilitiesReportedForFSIValue1861.setDecimals("INF");
                                    debtSecuritiesLiabilitiesReportedForFSIValue1861.setValue(new BigDecimal(zeroDBS01FS_Layout3DebtSecuritiesLiabilitiesReportedForFSIValue1858));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesLiabilitiesReportedForFSIElement1862 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesLiabilitiesReportedForFSI(debtSecuritiesLiabilitiesReportedForFSIValue1861);
                                    bodyElements.add(debtSecuritiesLiabilitiesReportedForFSIElement1862);
                                
                            }
                        
                            
                                
                                Unit INR1863 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1863 = createUnitIfNotExist(INR1863, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIMap1867 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIMap1867.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIMap1867.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIValue1865 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIMap1867);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIMap1867, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIValue1865 = zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866 == null ? "" : zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getValue();
                                    if(zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866 != null ) {
                                        if(!zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIFieldDataValue1866.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3OtherLiabilitiesReportedForFSIContext1864 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIMap1867 );
                                        
                                
                                if(zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIValue1865 != null && !"".equals(zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIValue1865)) {
                                    
                                    addContext(DBS01FS_Layout3OtherLiabilitiesReportedForFSIContext1864, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherLiabilitiesReportedForFSIValue1868 = new MonetaryItemType();
                                    otherLiabilitiesReportedForFSIValue1868.setContextRef(DBS01FS_Layout3OtherLiabilitiesReportedForFSIContext1864);
                                    
                                    otherLiabilitiesReportedForFSIValue1868.setUnitRef(INR1863);
                                    otherLiabilitiesReportedForFSIValue1868.setDecimals("INF");
                                    otherLiabilitiesReportedForFSIValue1868.setValue(new BigDecimal(zeroDBS01FS_Layout3OtherLiabilitiesReportedForFSIValue1865));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherLiabilitiesReportedForFSIElement1869 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherLiabilitiesReportedForFSI(otherLiabilitiesReportedForFSIValue1868);
                                    bodyElements.add(otherLiabilitiesReportedForFSIElement1869);
                                
                            }
                        
                            
                                
                                Unit INR1870 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1870 = createUnitIfNotExist(INR1870, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ForeignCurrencyLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1874 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1874.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1874.put("in-rbi-rep:ParameterAxis", "rbi-core:ConsolidatedEntityIncludingInternationalOperationsMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1872 = DBS01ReportUtil.retrieveValueForElement(field.getForeignCurrencyLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1874);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873 = DBS01ReportUtil.retrieveFieldDataForElement(field.getForeignCurrencyLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1874, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1872 = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873 == null ? "" : zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getValue();
                                    if(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873 != null ) {
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIFieldDataValue1873.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIContext1871 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIMap1874 );
                                        
                                
                                if(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1872 != null && !"".equals(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1872)) {
                                    
                                    addContext(DBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIContext1871, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType foreignCurrencyLiabilitiesReportedForFSIValue1875 = new MonetaryItemType();
                                    foreignCurrencyLiabilitiesReportedForFSIValue1875.setContextRef(DBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIContext1871);
                                    
                                    foreignCurrencyLiabilitiesReportedForFSIValue1875.setUnitRef(INR1870);
                                    foreignCurrencyLiabilitiesReportedForFSIValue1875.setDecimals("INF");
                                    foreignCurrencyLiabilitiesReportedForFSIValue1875.setValue(new BigDecimal(zeroDBS01FS_Layout3ForeignCurrencyLiabilitiesReportedForFSIValue1872));
                                    
                                    
                                    JAXBElement<MonetaryItemType> foreignCurrencyLiabilitiesReportedForFSIElement1876 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createForeignCurrencyLiabilitiesReportedForFSI(foreignCurrencyLiabilitiesReportedForFSIValue1875);
                                    bodyElements.add(foreignCurrencyLiabilitiesReportedForFSIElement1876);
                                
                            }
                        
                            
                                
                                Unit INR1877 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1877 = createUnitIfNotExist(INR1877, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - RiskWeightedAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1881 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1881.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1879 = DBS01ReportUtil.retrieveValueForElement(field.getRiskWeightedAssetsReportedForFSI(), zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1881);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRiskWeightedAssetsReportedForFSI(), zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1881, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1879 = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880 == null ? "" : zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getValue();
                                    if(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880 != null ) {
                                        if(!zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIFieldDataValue1880.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RiskWeightedAssetsReportedForFSIContext1878 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIMap1881 );
                                        
                                
                                if(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1879 != null && !"".equals(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1879)) {
                                    
                                    addContext(DBS01FS_Layout3RiskWeightedAssetsReportedForFSIContext1878, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType riskWeightedAssetsReportedForFSIValue1882 = new MonetaryItemType();
                                    riskWeightedAssetsReportedForFSIValue1882.setContextRef(DBS01FS_Layout3RiskWeightedAssetsReportedForFSIContext1878);
                                    
                                    riskWeightedAssetsReportedForFSIValue1882.setUnitRef(INR1877);
                                    riskWeightedAssetsReportedForFSIValue1882.setDecimals("INF");
                                    riskWeightedAssetsReportedForFSIValue1882.setValue(new BigDecimal(zeroDBS01FS_Layout3RiskWeightedAssetsReportedForFSIValue1879));
                                    
                                    
                                    JAXBElement<MonetaryItemType> riskWeightedAssetsReportedForFSIElement1883 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRiskWeightedAssetsReportedForFSI(riskWeightedAssetsReportedForFSIValue1882);
                                    bodyElements.add(riskWeightedAssetsReportedForFSIElement1883);
                                
                            }
                        
                            
                                
                                Unit INR1884 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1884 = createUnitIfNotExist(INR1884, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ValueOfLargeExposureReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1888 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1888.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1886 = DBS01ReportUtil.retrieveValueForElement(field.getValueOfLargeExposureReportedForFSI(), zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1888);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887 = DBS01ReportUtil.retrieveFieldDataForElement(field.getValueOfLargeExposureReportedForFSI(), zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1888, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1886 = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887 == null ? "" : zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getValue();
                                    if(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887 != null ) {
                                        if(!zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIFieldDataValue1887.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ValueOfLargeExposureReportedForFSIContext1885 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIMap1888 );
                                        
                                
                                if(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1886 != null && !"".equals(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1886)) {
                                    
                                    addContext(DBS01FS_Layout3ValueOfLargeExposureReportedForFSIContext1885, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType valueOfLargeExposureReportedForFSIValue1889 = new MonetaryItemType();
                                    valueOfLargeExposureReportedForFSIValue1889.setContextRef(DBS01FS_Layout3ValueOfLargeExposureReportedForFSIContext1885);
                                    
                                    valueOfLargeExposureReportedForFSIValue1889.setUnitRef(INR1884);
                                    valueOfLargeExposureReportedForFSIValue1889.setDecimals("INF");
                                    valueOfLargeExposureReportedForFSIValue1889.setValue(new BigDecimal(zeroDBS01FS_Layout3ValueOfLargeExposureReportedForFSIValue1886));
                                    
                                    
                                    JAXBElement<MonetaryItemType> valueOfLargeExposureReportedForFSIElement1890 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createValueOfLargeExposureReportedForFSI(valueOfLargeExposureReportedForFSIValue1889);
                                    bodyElements.add(valueOfLargeExposureReportedForFSIElement1890);
                                
                            }
                        
                            
                                
                                Unit INR1891 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1891 = createUnitIfNotExist(INR1891, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiquidAssetsCoreReportedForFSI
                            
                                Map zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1895 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1895.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1893 = DBS01ReportUtil.retrieveValueForElement(field.getLiquidAssetsCoreReportedForFSI(), zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1895);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiquidAssetsCoreReportedForFSI(), zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1895, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1893 = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894 == null ? "" : zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getValue();
                                    if(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894 != null ) {
                                        if(!zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIFieldDataValue1894.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3LiquidAssetsCoreReportedForFSIContext1892 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIMap1895 );
                                        
                                
                                if(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1893 != null && !"".equals(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1893)) {
                                    
                                    addContext(DBS01FS_Layout3LiquidAssetsCoreReportedForFSIContext1892, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liquidAssetsCoreReportedForFSIValue1896 = new MonetaryItemType();
                                    liquidAssetsCoreReportedForFSIValue1896.setContextRef(DBS01FS_Layout3LiquidAssetsCoreReportedForFSIContext1892);
                                    
                                    liquidAssetsCoreReportedForFSIValue1896.setUnitRef(INR1891);
                                    liquidAssetsCoreReportedForFSIValue1896.setDecimals("INF");
                                    liquidAssetsCoreReportedForFSIValue1896.setValue(new BigDecimal(zeroDBS01FS_Layout3LiquidAssetsCoreReportedForFSIValue1893));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liquidAssetsCoreReportedForFSIElement1897 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiquidAssetsCoreReportedForFSI(liquidAssetsCoreReportedForFSIValue1896);
                                    bodyElements.add(liquidAssetsCoreReportedForFSIElement1897);
                                
                            }
                        
                            
                                
                                Unit INR1898 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1898 = createUnitIfNotExist(INR1898, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ShortTermLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1902 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1902.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1900 = DBS01ReportUtil.retrieveValueForElement(field.getShortTermLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1902);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901 = DBS01ReportUtil.retrieveFieldDataForElement(field.getShortTermLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1902, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1900 = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901 == null ? "" : zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getValue();
                                    if(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901 != null ) {
                                        if(!zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIFieldDataValue1901.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3ShortTermLiabilitiesReportedForFSIContext1899 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIMap1902 );
                                        
                                
                                if(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1900 != null && !"".equals(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1900)) {
                                    
                                    addContext(DBS01FS_Layout3ShortTermLiabilitiesReportedForFSIContext1899, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType shortTermLiabilitiesReportedForFSIValue1903 = new MonetaryItemType();
                                    shortTermLiabilitiesReportedForFSIValue1903.setContextRef(DBS01FS_Layout3ShortTermLiabilitiesReportedForFSIContext1899);
                                    
                                    shortTermLiabilitiesReportedForFSIValue1903.setUnitRef(INR1898);
                                    shortTermLiabilitiesReportedForFSIValue1903.setDecimals("INF");
                                    shortTermLiabilitiesReportedForFSIValue1903.setValue(new BigDecimal(zeroDBS01FS_Layout3ShortTermLiabilitiesReportedForFSIValue1900));
                                    
                                    
                                    JAXBElement<MonetaryItemType> shortTermLiabilitiesReportedForFSIElement1904 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createShortTermLiabilitiesReportedForFSI(shortTermLiabilitiesReportedForFSIValue1903);
                                    bodyElements.add(shortTermLiabilitiesReportedForFSIElement1904);
                                
                            }
                        
                            
                            Unit pure1905 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1905 = createUnitIfNotExist(pure1905, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NumberOfLargeExposuresReportedForFSI
                            
                                Map zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1909 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1909.put("in-rbi-rep:ParameterAxis", "rbi-core:OtherBanksOrDepositTakersMembers");
                                    
                                    
                                    String zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1907 = DBS01ReportUtil.retrieveValueForElement(field.getNumberOfLargeExposuresReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1909);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNumberOfLargeExposuresReportedForFSI(), zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1909, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1907 = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908 == null ? "" : zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getValue();
                                    if(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908 != null ) {
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIFieldDataValue1908.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3NumberOfLargeExposuresReportedForFSIContext1906 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIMap1909 );
                                        
                                
                                if(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1907 != null && !"".equals(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1907)) {
                                    
                                    addContext(DBS01FS_Layout3NumberOfLargeExposuresReportedForFSIContext1906, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    IntegerItemType numberOfLargeExposuresReportedForFSIValue1910 = new IntegerItemType();
                                    numberOfLargeExposuresReportedForFSIValue1910.setContextRef(DBS01FS_Layout3NumberOfLargeExposuresReportedForFSIContext1906);
                                    
                                    numberOfLargeExposuresReportedForFSIValue1910.setUnitRef(pure1905);
                                    numberOfLargeExposuresReportedForFSIValue1910.setDecimals("INF");
                                    numberOfLargeExposuresReportedForFSIValue1910.setValue(new BigInteger(zeroDBS01FS_Layout3NumberOfLargeExposuresReportedForFSIValue1907));
                                    
                                    
                                    JAXBElement<IntegerItemType> numberOfLargeExposuresReportedForFSIElement1911 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNumberOfLargeExposuresReportedForFSI(numberOfLargeExposuresReportedForFSIValue1910);
                                    bodyElements.add(numberOfLargeExposuresReportedForFSIElement1911);
                                
                            }
                        
                            
                            Unit pure1912 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1912 = createUnitIfNotExist(pure1912, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1916 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1916.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1916.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1914 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1916);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1916, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1914 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1915.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1913 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1916 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1914 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1914)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1913, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1917 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1917.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1913);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1917.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1914);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1918 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1917);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1918);
                                
                            }
                        
                            
                            Unit pure1919 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1919 = createUnitIfNotExist(pure1919, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1921 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1921 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1922.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1920 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1923 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1921 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1921)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1920, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1924 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1924.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1920);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1924.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1921);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1925 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1924);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1925);
                                
                            }
                        
                            
                            Unit pure1926 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1926 = createUnitIfNotExist(pure1926, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930.put("rbi-core:TierCapitalClassificationAxis", "rbi-core:SupervisoryDeductionsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1928 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1928 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1929.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1927 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1930 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1928 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1928)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1927, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1931 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1931.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1927);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1931.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1928);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1932 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1931);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1932);
                                
                            }
                        
                            
                            Unit pure1933 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1933 = createUnitIfNotExist(pure1933, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1937 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1937.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1937.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1935 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1937);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1937, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1935 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1936.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1934 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1937 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1935 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1935)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1934, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1938 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1938.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1934);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1938.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1935);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1939 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1938);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1939);
                                
                            }
                        
                            
                            Unit pure1940 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1940 = createUnitIfNotExist(pure1940, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1942 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1942 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1943.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1941 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1944 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1942 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1942)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1941, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1945 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1945.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1941);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1945.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1942);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1946 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1945);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1946);
                                
                            }
                        
                            
                            Unit pure1947 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1947 = createUnitIfNotExist(pure1947, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951.put("rbi-core:TierCapitalClassificationAxis", "rbi-core:SupervisoryDeductionsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951.put("in-rbi-rep:TierCapitalDimension", "in-rbi-rep:TierIIMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1949 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1949 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1950.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1948 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1951 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1949 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1949)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1948, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1952 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1952.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1948);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1952.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1949);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1953 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1952);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1953);
                                
                            }
                        
                            
                            Unit pure1954 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1954 = createUnitIfNotExist(pure1954, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1958 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1958.put("rbi-core:TierCapitalClassificationAxis", "rbi-core:SupervisoryDeductionsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1958.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1956 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1958);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1958, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1956 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1957.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1955 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1958 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1956 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1956)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1955, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1959 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1959.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1955);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1959.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1956);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1960 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1959);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1960);
                                
                            }
                        
                            
                            Unit pure1961 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1961 = createUnitIfNotExist(pure1961, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRegulatoryCapitalReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1965 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1965.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1965.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1963 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1965);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRegulatoryCapitalReportedForFSI(), zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1965, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1963 = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964 == null ? "" : zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIFieldDataValue1964.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1962 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIMap1965 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1963 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1963)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1962, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRegulatoryCapitalReportedForFSIValue1966 = new RemarkForFSI();
                                    remarkForRegulatoryCapitalReportedForFSIValue1966.setContextRef(DBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIContext1962);
                                    
                                    remarkForRegulatoryCapitalReportedForFSIValue1966.setValue(zeroDBS01FS_Layout3RemarkForRegulatoryCapitalReportedForFSIValue1963);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRegulatoryCapitalReportedForFSIElement1967 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRegulatoryCapitalReportedForFSI(remarkForRegulatoryCapitalReportedForFSIValue1966);
                                    bodyElements.add(remarkForRegulatoryCapitalReportedForFSIElement1967);
                                
                            }
                        
                            
                            Unit pure1968 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1968 = createUnitIfNotExist(pure1968, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRiskWeightedAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIMap1972 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIMap1972.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIValue1970 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRiskWeightedAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIMap1972);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRiskWeightedAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIMap1972, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIValue1970 = zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971 == null ? "" : zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIFieldDataValue1971.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIContext1969 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIMap1972 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIValue1970 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIValue1970)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIContext1969, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRiskWeightedAssetsReportedForFSIValue1973 = new RemarkForFSI();
                                    remarkForRiskWeightedAssetsReportedForFSIValue1973.setContextRef(DBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIContext1969);
                                    
                                    remarkForRiskWeightedAssetsReportedForFSIValue1973.setValue(zeroDBS01FS_Layout3RemarkForRiskWeightedAssetsReportedForFSIValue1970);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRiskWeightedAssetsReportedForFSIElement1974 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRiskWeightedAssetsReportedForFSI(remarkForRiskWeightedAssetsReportedForFSIValue1973);
                                    bodyElements.add(remarkForRiskWeightedAssetsReportedForFSIElement1974);
                                
                            }
                        
                            
                            Unit pure1975 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1975 = createUnitIfNotExist(pure1975, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForValueOfLargeExposureReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIMap1979 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIMap1979.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIValue1977 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForValueOfLargeExposureReportedForFSI(), zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIMap1979);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForValueOfLargeExposureReportedForFSI(), zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIMap1979, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIValue1977 = zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978 == null ? "" : zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIFieldDataValue1978.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIContext1976 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIMap1979 );
                                        
                                
                                if(zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIValue1977 != null && !"".equals(zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIValue1977)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIContext1976, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForValueOfLargeExposureReportedForFSIValue1980 = new RemarkForFSI();
                                    remarkForValueOfLargeExposureReportedForFSIValue1980.setContextRef(DBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIContext1976);
                                    
                                    remarkForValueOfLargeExposureReportedForFSIValue1980.setValue(zeroDBS01FS_Layout3RemarkForValueOfLargeExposureReportedForFSIValue1977);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForValueOfLargeExposureReportedForFSIElement1981 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForValueOfLargeExposureReportedForFSI(remarkForValueOfLargeExposureReportedForFSIValue1980);
                                    bodyElements.add(remarkForValueOfLargeExposureReportedForFSIElement1981);
                                
                            }
                        
                            
                            Unit pure1982 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1982 = createUnitIfNotExist(pure1982, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiquidAssetsCoreReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIMap1986 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIMap1986.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIValue1984 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiquidAssetsCoreReportedForFSI(), zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIMap1986);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiquidAssetsCoreReportedForFSI(), zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIMap1986, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIValue1984 = zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985 == null ? "" : zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue1985.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIContext1983 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIMap1986 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIValue1984 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIValue1984)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIContext1983, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiquidAssetsCoreReportedForFSIValue1987 = new RemarkForFSI();
                                    remarkForLiquidAssetsCoreReportedForFSIValue1987.setContextRef(DBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIContext1983);
                                    
                                    remarkForLiquidAssetsCoreReportedForFSIValue1987.setValue(zeroDBS01FS_Layout3RemarkForLiquidAssetsCoreReportedForFSIValue1984);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiquidAssetsCoreReportedForFSIElement1988 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiquidAssetsCoreReportedForFSI(remarkForLiquidAssetsCoreReportedForFSIValue1987);
                                    bodyElements.add(remarkForLiquidAssetsCoreReportedForFSIElement1988);
                                
                            }
                        
                            
                            Unit pure1989 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1989 = createUnitIfNotExist(pure1989, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiquidAssetsBroadMeasureReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIMap1993 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIMap1993.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIValue1991 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIMap1993);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIMap1993, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIValue1991 = zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992 == null ? "" : zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue1992.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIContext1990 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIMap1993 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIValue1991 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIValue1991)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIContext1990, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiquidAssetsBroadMeasureReportedForFSIValue1994 = new RemarkForFSI();
                                    remarkForLiquidAssetsBroadMeasureReportedForFSIValue1994.setContextRef(DBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIContext1990);
                                    
                                    remarkForLiquidAssetsBroadMeasureReportedForFSIValue1994.setValue(zeroDBS01FS_Layout3RemarkForLiquidAssetsBroadMeasureReportedForFSIValue1991);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiquidAssetsBroadMeasureReportedForFSIElement1995 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiquidAssetsBroadMeasureReportedForFSI(remarkForLiquidAssetsBroadMeasureReportedForFSIValue1994);
                                    bodyElements.add(remarkForLiquidAssetsBroadMeasureReportedForFSIElement1995);
                                
                            }
                        
                            
                            Unit pure1996 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1996 = createUnitIfNotExist(pure1996, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForShortTermLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIMap2000 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIMap2000.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIValue1998 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForShortTermLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIMap2000);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForShortTermLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIMap2000, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIValue1998 = zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999 == null ? "" : zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue1999.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIContext1997 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIMap2000 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIValue1998 != null && !"".equals(zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIValue1998)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIContext1997, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForShortTermLiabilitiesReportedForFSIValue2001 = new RemarkForFSI();
                                    remarkForShortTermLiabilitiesReportedForFSIValue2001.setContextRef(DBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIContext1997);
                                    
                                    remarkForShortTermLiabilitiesReportedForFSIValue2001.setValue(zeroDBS01FS_Layout3RemarkForShortTermLiabilitiesReportedForFSIValue1998);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForShortTermLiabilitiesReportedForFSIElement2002 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForShortTermLiabilitiesReportedForFSI(remarkForShortTermLiabilitiesReportedForFSIValue2001);
                                    bodyElements.add(remarkForShortTermLiabilitiesReportedForFSIElement2002);
                                
                            }
                        
                            
                            Unit pure2003 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2003 = createUnitIfNotExist(pure2003, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonPerformingAssetsMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2005 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2005 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2006.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2004 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2007 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2005 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2005)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2004, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2008 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2008.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2004);
                                    
                                    remarkForLoansReportedForFSIValue2008.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2005);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2009 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2008);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2009);
                                
                            }
                        
                            
                            Unit pure2010 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2010 = createUnitIfNotExist(pure2010, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2014 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2014.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "rbi-core:ResidentialRealEstateMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2014.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2012 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2014);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2014, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2012 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2013.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2011 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2014 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2012 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2012)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2011, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2015 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2015.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2011);
                                    
                                    remarkForLoansReportedForFSIValue2015.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2012);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2016 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2015);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2016);
                                
                            }
                        
                            
                            Unit pure2017 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2017 = createUnitIfNotExist(pure2017, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2021 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2021.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:CommercialRealEstateMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2021.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2019 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2021);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2021, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2019 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2020.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2018 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2021 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2019 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2019)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2018, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2022 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2022.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2018);
                                    
                                    remarkForLoansReportedForFSIValue2022.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2019);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2023 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2022);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2023);
                                
                            }
                        
                            
                            Unit pure2024 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2024 = createUnitIfNotExist(pure2024, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DomesticEconomyMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2026 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2026 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2027.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2025 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2028 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2026 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2026)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2025, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2029 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2029.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2025);
                                    
                                    remarkForLoansReportedForFSIValue2029.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2026);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2030 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2029);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2030);
                                
                            }
                        
                            
                            Unit pure2031 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2031 = createUnitIfNotExist(pure2031, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:AdvancedEconomiesExcludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2033 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2033 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2034.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2032 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2035 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2033 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2033)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2032, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2036 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2036.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2032);
                                    
                                    remarkForLoansReportedForFSIValue2036.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2033);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2037 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2036);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2037);
                                
                            }
                        
                            
                            Unit pure2038 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2038 = createUnitIfNotExist(pure2038, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2040 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2040 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2041.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2039 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2042 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2040 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2040)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2039, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2043 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2043.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2039);
                                    
                                    remarkForLoansReportedForFSIValue2043.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2040);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2044 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2043);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2044);
                                
                            }
                        
                            
                            Unit pure2045 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2045 = createUnitIfNotExist(pure2045, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049.put("rbi-core:DevelopingCountryListAxis", "rbi-core:AfricaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2047 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2047 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2048.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2046 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2049 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2047 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2047)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2046, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2050 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2050.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2046);
                                    
                                    remarkForLoansReportedForFSIValue2050.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2047);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2051 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2050);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2051);
                                
                            }
                        
                            
                            Unit pure2052 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2052 = createUnitIfNotExist(pure2052, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056.put("rbi-core:DevelopingCountryListAxis", "rbi-core:AfricaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056.put("rbi-core:GeographicalLocationAxis", "rbi-core:SubSaharaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2054 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2054 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2055.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2053 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2056 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2054 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2054)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2053, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2057 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2057.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2053);
                                    
                                    remarkForLoansReportedForFSIValue2057.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2054);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2058 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2057);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2058);
                                
                            }
                        
                            
                            Unit pure2059 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2059 = createUnitIfNotExist(pure2059, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063.put("rbi-core:DevelopingCountryListAxis", "rbi-core:CentralAndEasternEuropeMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2061 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2061 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2062.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2060 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2063 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2061 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2061)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2060, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2064 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2064.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2060);
                                    
                                    remarkForLoansReportedForFSIValue2064.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2061);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2065 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2064);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2065);
                                
                            }
                        
                            
                            Unit pure2066 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2066 = createUnitIfNotExist(pure2066, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070.put("rbi-core:DevelopingCountryListAxis", "rbi-core:CommonwealthOfIndependentStatesAndMongoliaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2068 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2068 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2069.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2067 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2070 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2068 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2068)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2067, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2071 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2071.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2067);
                                    
                                    remarkForLoansReportedForFSIValue2071.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2068);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2072 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2071);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2072);
                                
                            }
                        
                            
                            Unit pure2073 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2073 = createUnitIfNotExist(pure2073, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077.put("rbi-core:DevelopingCountryListAxis", "rbi-core:DevelopingAsiaIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2075 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2075 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2076.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2074 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2077 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2075 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2075)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2074, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2078 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2078.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2074);
                                    
                                    remarkForLoansReportedForFSIValue2078.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2075);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2079 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2078);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2079);
                                
                            }
                        
                            
                            Unit pure2080 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2080 = createUnitIfNotExist(pure2080, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084.put("rbi-core:DevelopingCountryListAxis", "rbi-core:MiddleEastMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2082 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2082 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2083.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2081 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2084 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2082 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2082)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2081, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2085 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2085.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2081);
                                    
                                    remarkForLoansReportedForFSIValue2085.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2082);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2086 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2085);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2086);
                                
                            }
                        
                            
                            Unit pure2087 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2087 = createUnitIfNotExist(pure2087, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091.put("rbi-core:DevelopingCountryListAxis", "rbi-core:WesternHemisphereMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091.put("rbi-core:TypeOfEconomiesAxis", "rbi-core:DevelopingCountriesIncludingChinaMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2089 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2089 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2090.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2088 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2091 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2089 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2089)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2088, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2092 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2092.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2088);
                                    
                                    remarkForLoansReportedForFSIValue2092.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2089);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2093 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2092);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2093);
                                
                            }
                        
                            
                            Unit pure2094 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2094 = createUnitIfNotExist(pure2094, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2098 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2098.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2098.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2096 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2098);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2098, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2096 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2097.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2095 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2098 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2096 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2096)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2095, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2099 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2099.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2095);
                                    
                                    remarkForLoansReportedForFSIValue2099.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2096);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2100 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2099);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2100);
                                
                            }
                        
                            
                            Unit pure2101 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2101 = createUnitIfNotExist(pure2101, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForForeignCurrencyLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2105 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2105.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2103 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2105);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2105, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2103 = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104 == null ? "" : zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2104.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIContext2102 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2105 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2103 != null && !"".equals(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2103)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIContext2102, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForForeignCurrencyLoansReportedForFSIValue2106 = new RemarkForFSI();
                                    remarkForForeignCurrencyLoansReportedForFSIValue2106.setContextRef(DBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIContext2102);
                                    
                                    remarkForForeignCurrencyLoansReportedForFSIValue2106.setValue(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2103);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForForeignCurrencyLoansReportedForFSIElement2107 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForForeignCurrencyLoansReportedForFSI(remarkForForeignCurrencyLoansReportedForFSIValue2106);
                                    bodyElements.add(remarkForForeignCurrencyLoansReportedForFSIElement2107);
                                
                            }
                        
                            
                            Unit pure2108 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2108 = createUnitIfNotExist(pure2108, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForForeignCurrencyLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIMap2112 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIMap2112.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIValue2110 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForForeignCurrencyLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIMap2112);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForForeignCurrencyLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIMap2112, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIValue2110 = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111 == null ? "" : zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIFieldDataValue2111.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIContext2109 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIMap2112 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIValue2110 != null && !"".equals(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIValue2110)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIContext2109, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForForeignCurrencyLiabilitiesReportedForFSIValue2113 = new RemarkForFSI();
                                    remarkForForeignCurrencyLiabilitiesReportedForFSIValue2113.setContextRef(DBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIContext2109);
                                    
                                    remarkForForeignCurrencyLiabilitiesReportedForFSIValue2113.setValue(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesReportedForFSIValue2110);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForForeignCurrencyLiabilitiesReportedForFSIElement2114 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForForeignCurrencyLiabilitiesReportedForFSI(remarkForForeignCurrencyLiabilitiesReportedForFSIValue2113);
                                    bodyElements.add(remarkForForeignCurrencyLiabilitiesReportedForFSIElement2114);
                                
                            }
                        
                            
                            Unit pure2115 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2115 = createUnitIfNotExist(pure2115, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetOpenPositionInEquitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIMap2119 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIMap2119.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIValue2117 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetOpenPositionInEquitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIMap2119);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetOpenPositionInEquitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIMap2119, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIValue2117 = zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118 == null ? "" : zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIFieldDataValue2118.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIContext2116 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIMap2119 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIValue2117 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIValue2117)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIContext2116, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetOpenPositionInEquitiesReportedForFSIValue2120 = new RemarkForFSI();
                                    remarkForNetOpenPositionInEquitiesReportedForFSIValue2120.setContextRef(DBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIContext2116);
                                    
                                    remarkForNetOpenPositionInEquitiesReportedForFSIValue2120.setValue(zeroDBS01FS_Layout3RemarkForNetOpenPositionInEquitiesReportedForFSIValue2117);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetOpenPositionInEquitiesReportedForFSIElement2121 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetOpenPositionInEquitiesReportedForFSI(remarkForNetOpenPositionInEquitiesReportedForFSIValue2120);
                                    bodyElements.add(remarkForNetOpenPositionInEquitiesReportedForFSIElement2121);
                                
                            }
                        
                            
                            Unit pure2122 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2122 = createUnitIfNotExist(pure2122, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItems
                            
                                Map zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap2126 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap2126.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2124 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(), zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap2126);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(), zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap2126, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2124 = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125 == null ? "" : zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsFieldDataValue2125.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext2123 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsMap2126 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2124 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2124)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext2123, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2127 = new RemarkForFSI();
                                    remarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2127.setContextRef(DBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsContext2123);
                                    
                                    remarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2127.setValue(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2124);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsElement2128 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItems(remarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsValue2127);
                                    bodyElements.add(remarkForNetOpenPositionInForeignCurrencyForOnBalanceSheetItemsElement2128);
                                
                            }
                        
                            
                            Unit pure2129 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2129 = createUnitIfNotExist(pure2129, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetOpenPositionInForeignCurrencyReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIMap2133 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIMap2133.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIMap2133.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2131 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetOpenPositionInForeignCurrencyReportedForFSI(), zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIMap2133);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetOpenPositionInForeignCurrencyReportedForFSI(), zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIMap2133, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2131 = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132 == null ? "" : zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIFieldDataValue2132.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIContext2130 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIMap2133 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2131 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2131)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIContext2130, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2134 = new RemarkForFSI();
                                    remarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2134.setContextRef(DBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIContext2130);
                                    
                                    remarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2134.setValue(zeroDBS01FS_Layout3RemarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2131);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetOpenPositionInForeignCurrencyReportedForFSIElement2135 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetOpenPositionInForeignCurrencyReportedForFSI(remarkForNetOpenPositionInForeignCurrencyReportedForFSIValue2134);
                                    bodyElements.add(remarkForNetOpenPositionInForeignCurrencyReportedForFSIElement2135);
                                
                            }
                        
                            
                            Unit pure2136 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2136 = createUnitIfNotExist(pure2136, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap2140 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap2140.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2138 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap2140);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap2140, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2138 = zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139 == null ? "" : zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIFieldDataValue2139.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIContext2137 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIMap2140 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2138 != null && !"".equals(zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2138)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIContext2137, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2141 = new RemarkForFSI();
                                    remarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2141.setContextRef(DBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIContext2137);
                                    
                                    remarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2141.setValue(zeroDBS01FS_Layout3RemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2138);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIElement2142 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSI(remarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIValue2141);
                                    bodyElements.add(remarkForRealizedGainsAndLossesOnFinancialInstrumentsReportedForFSIElement2142);
                                
                            }
                        
                            
                            Unit pure2143 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2143 = createUnitIfNotExist(pure2143, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap2147 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap2147.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap2147.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2145 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap2147);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap2147, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2145 = zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146 == null ? "" : zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIFieldDataValue2146.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIContext2144 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIMap2147 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2145 != null && !"".equals(zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2145)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIContext2144, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2148 = new RemarkForFSI();
                                    remarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2148.setContextRef(DBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIContext2144);
                                    
                                    remarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2148.setValue(zeroDBS01FS_Layout3RemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2145);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIElement2149 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSI(remarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIValue2148);
                                    bodyElements.add(remarkForGainsAndLossesOnTheSaleOfFixedAssetsReportedForFSIElement2149);
                                
                            }
                        
                            
                            Unit pure2150 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2150 = createUnitIfNotExist(pure2150, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForVeryShortTermDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIMap2154 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIMap2154.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIValue2152 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForVeryShortTermDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIMap2154);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForVeryShortTermDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIMap2154, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIValue2152 = zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153 == null ? "" : zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIFieldDataValue2153.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIContext2151 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIMap2154 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIValue2152 != null && !"".equals(zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIValue2152)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIContext2151, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForVeryShortTermDepositsReportedForFSIValue2155 = new RemarkForFSI();
                                    remarkForVeryShortTermDepositsReportedForFSIValue2155.setContextRef(DBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIContext2151);
                                    
                                    remarkForVeryShortTermDepositsReportedForFSIValue2155.setValue(zeroDBS01FS_Layout3RemarkForVeryShortTermDepositsReportedForFSIValue2152);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForVeryShortTermDepositsReportedForFSIElement2156 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForVeryShortTermDepositsReportedForFSI(remarkForVeryShortTermDepositsReportedForFSIValue2155);
                                    bodyElements.add(remarkForVeryShortTermDepositsReportedForFSIElement2156);
                                
                            }
                        
                            
                            Unit pure2157 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2157 = createUnitIfNotExist(pure2157, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNewDepositsDuringThePeriodReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIMap2161 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIMap2161.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIMap2161.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIValue2159 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNewDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIMap2161);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNewDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIMap2161, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIValue2159 = zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160 == null ? "" : zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIFieldDataValue2160.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIContext2158 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIMap2161 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIValue2159 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIValue2159)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIContext2158, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNewDepositsDuringThePeriodReportedForFSIValue2162 = new RemarkForFSI();
                                    remarkForNewDepositsDuringThePeriodReportedForFSIValue2162.setContextRef(DBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIContext2158);
                                    
                                    remarkForNewDepositsDuringThePeriodReportedForFSIValue2162.setValue(zeroDBS01FS_Layout3RemarkForNewDepositsDuringThePeriodReportedForFSIValue2159);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNewDepositsDuringThePeriodReportedForFSIElement2163 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNewDepositsDuringThePeriodReportedForFSI(remarkForNewDepositsDuringThePeriodReportedForFSIValue2162);
                                    bodyElements.add(remarkForNewDepositsDuringThePeriodReportedForFSIElement2163);
                                
                            }
                        
                            
                            Unit pure2164 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2164 = createUnitIfNotExist(pure2164, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIMap2168 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIMap2168.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIMap2168.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2166 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIMap2168);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSI(), zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIMap2168, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2166 = zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167 == null ? "" : zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIFieldDataValue2167.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIContext2165 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIMap2168 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2166 != null && !"".equals(zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2166)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIContext2165, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2169 = new RemarkForFSI();
                                    remarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2169.setContextRef(DBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIContext2165);
                                    
                                    remarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2169.setValue(zeroDBS01FS_Layout3RemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2166);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIElement2170 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForWithdrawalOfDepositsDuringThePeriodReportedForFSI(remarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIValue2169);
                                    bodyElements.add(remarkForWithdrawalOfDepositsDuringThePeriodReportedForFSIElement2170);
                                
                            }
                        
                            
                            Unit pure2171 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2171 = createUnitIfNotExist(pure2171, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap2175 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap2175.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2173 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap2175);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap2175, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2173 = zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174 == null ? "" : zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIFieldDataValue2174.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIContext2172 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIMap2175 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2173 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2173)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIContext2172, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2176 = new RemarkForFSI();
                                    remarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2176.setContextRef(DBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIContext2172);
                                    
                                    remarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2176.setValue(zeroDBS01FS_Layout3RemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2173);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIElement2177 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSI(remarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIValue2176);
                                    bodyElements.add(remarkForNetLiabilitiesOfBranchesOfForeignDepositTakersToTheirParentsReportedForFSIElement2177);
                                
                            }
                        
                            
                            Unit pure2178 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2178 = createUnitIfNotExist(pure2178, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap2182 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap2182.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2180 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI(), zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap2182);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI(), zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap2182, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2180 = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181 == null ? "" : zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIFieldDataValue2181.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIContext2179 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIMap2182 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2180 != null && !"".equals(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2180)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIContext2179, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2183 = new RemarkForFSI();
                                    remarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2183.setContextRef(DBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIContext2179);
                                    
                                    remarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2183.setValue(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2180);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIElement2184 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSI(remarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIValue2183);
                                    bodyElements.add(remarkForSharesAndOtherEquityInvestmentsInDepositTakersInTheReportingPopulationReportedForFSIElement2184);
                                
                            }
                        
                            
                            Unit pure2185 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2185 = createUnitIfNotExist(pure2185, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2189 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2189.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2187 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2189);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2189, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2187 = zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188 == null ? "" : zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2188.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2186 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2189 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2187 != null && !"".equals(zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2187)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2186, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2190 = new RemarkForFSI();
                                    remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2190.setContextRef(DBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2186);
                                    
                                    remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2190.setValue(zeroDBS01FS_Layout3RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2187);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement2191 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2190);
                                    bodyElements.add(remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement2191);
                                
                            }
                        
                            
                            Unit pure2192 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2192 = createUnitIfNotExist(pure2192, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInvestmentInOtherDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIMap2196 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIMap2196.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIValue2194 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInvestmentInOtherDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIMap2196);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInvestmentInOtherDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIMap2196, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIValue2194 = zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195 == null ? "" : zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIFieldDataValue2195.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIContext2193 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIMap2196 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIValue2194 != null && !"".equals(zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIValue2194)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIContext2193, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInvestmentInOtherDepositTakersReportedForFSIValue2197 = new RemarkForFSI();
                                    remarkForInvestmentInOtherDepositTakersReportedForFSIValue2197.setContextRef(DBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIContext2193);
                                    
                                    remarkForInvestmentInOtherDepositTakersReportedForFSIValue2197.setValue(zeroDBS01FS_Layout3RemarkForInvestmentInOtherDepositTakersReportedForFSIValue2194);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInvestmentInOtherDepositTakersReportedForFSIElement2198 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInvestmentInOtherDepositTakersReportedForFSI(remarkForInvestmentInOtherDepositTakersReportedForFSIValue2197);
                                    bodyElements.add(remarkForInvestmentInOtherDepositTakersReportedForFSIElement2198);
                                
                            }
                        
                            
                            Unit pure2199 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2199 = createUnitIfNotExist(pure2199, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansToPublicSectorStateAndCentralReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIMap2203 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIMap2203.put("rbi-core:TypeOfBalanceAxis", "rbi-core:GrossMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIMap2203.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2201 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansToPublicSectorStateAndCentralReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIMap2203);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansToPublicSectorStateAndCentralReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIMap2203, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2201 = zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIFieldDataValue2202.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIContext2200 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIMap2203 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2201 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2201)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIContext2200, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2204 = new RemarkForFSI();
                                    remarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2204.setContextRef(DBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIContext2200);
                                    
                                    remarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2204.setValue(zeroDBS01FS_Layout3RemarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2201);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansToPublicSectorStateAndCentralReportedForFSIElement2205 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansToPublicSectorStateAndCentralReportedForFSI(remarkForLoansToPublicSectorStateAndCentralReportedForFSIValue2204);
                                    bodyElements.add(remarkForLoansToPublicSectorStateAndCentralReportedForFSIElement2205);
                                
                            }
                        
                            
                            Unit pure2206 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2206 = createUnitIfNotExist(pure2206, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap2210 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap2210.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2208 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI(), zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap2210);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI(), zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap2210, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2208 = zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209 == null ? "" : zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIFieldDataValue2209.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIContext2207 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIMap2210 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2208 != null && !"".equals(zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2208)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIContext2207, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2211 = new RemarkForFSI();
                                    remarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2211.setContextRef(DBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIContext2207);
                                    
                                    remarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2211.setValue(zeroDBS01FS_Layout3RemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2208);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIElement2212 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSI(remarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIValue2211);
                                    bodyElements.add(remarkForDomesticGovernmentSecuritiesOwnedMarketValueReportedForFSIElement2212);
                                
                            }
                        
                            
                            Unit pure2213 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2213 = createUnitIfNotExist(pure2213, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSectoralDistributionOfNonperformingLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIMap2217 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIMap2217.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2215 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIMap2217);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSectoralDistributionOfNonperformingLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIMap2217, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2215 = zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216 == null ? "" : zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIFieldDataValue2216.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIContext2214 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIMap2217 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2215 != null && !"".equals(zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2215)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIContext2214, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2218 = new RemarkForFSI();
                                    remarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2218.setContextRef(DBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIContext2214);
                                    
                                    remarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2218.setValue(zeroDBS01FS_Layout3RemarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2215);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSectoralDistributionOfNonperformingLoansReportedForFSIElement2219 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSectoralDistributionOfNonperformingLoansReportedForFSI(remarkForSectoralDistributionOfNonperformingLoansReportedForFSIValue2218);
                                    bodyElements.add(remarkForSectoralDistributionOfNonperformingLoansReportedForFSIElement2219);
                                
                            }
                        
                            
                            Unit pure2220 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2220 = createUnitIfNotExist(pure2220, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForResidentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIMap2224 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIMap2224.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIValue2222 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForResidentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIMap2224);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForResidentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIMap2224, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIValue2222 = zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223 == null ? "" : zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIFieldDataValue2223.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForResidentsReportedForFSIContext2221 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIMap2224 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIValue2222 != null && !"".equals(zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIValue2222)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForResidentsReportedForFSIContext2221, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForResidentsReportedForFSIValue2225 = new RemarkForFSI();
                                    remarkForResidentsReportedForFSIValue2225.setContextRef(DBS01FS_Layout3RemarkForResidentsReportedForFSIContext2221);
                                    
                                    remarkForResidentsReportedForFSIValue2225.setValue(zeroDBS01FS_Layout3RemarkForResidentsReportedForFSIValue2222);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForResidentsReportedForFSIElement2226 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForResidentsReportedForFSI(remarkForResidentsReportedForFSIValue2225);
                                    bodyElements.add(remarkForResidentsReportedForFSIElement2226);
                                
                            }
                        
                            
                            Unit pure2227 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2227 = createUnitIfNotExist(pure2227, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIMap2231 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIMap2231.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIValue2229 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIMap2231);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIMap2231, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIValue2229 = zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230 == null ? "" : zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIFieldDataValue2230.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForDepositTakersReportedForFSIContext2228 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIMap2231 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIValue2229 != null && !"".equals(zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIValue2229)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForDepositTakersReportedForFSIContext2228, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDepositTakersReportedForFSIValue2232 = new RemarkForFSI();
                                    remarkForDepositTakersReportedForFSIValue2232.setContextRef(DBS01FS_Layout3RemarkForDepositTakersReportedForFSIContext2228);
                                    
                                    remarkForDepositTakersReportedForFSIValue2232.setValue(zeroDBS01FS_Layout3RemarkForDepositTakersReportedForFSIValue2229);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDepositTakersReportedForFSIElement2233 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDepositTakersReportedForFSI(remarkForDepositTakersReportedForFSIValue2232);
                                    bodyElements.add(remarkForDepositTakersReportedForFSIElement2233);
                                
                            }
                        
                            
                            Unit pure2234 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2234 = createUnitIfNotExist(pure2234, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCentralBankReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIMap2238 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIMap2238.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIValue2236 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCentralBankReportedForFSI(), zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIMap2238);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCentralBankReportedForFSI(), zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIMap2238, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIValue2236 = zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237 == null ? "" : zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIFieldDataValue2237.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCentralBankReportedForFSIContext2235 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIMap2238 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIValue2236 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIValue2236)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCentralBankReportedForFSIContext2235, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCentralBankReportedForFSIValue2239 = new RemarkForFSI();
                                    remarkForCentralBankReportedForFSIValue2239.setContextRef(DBS01FS_Layout3RemarkForCentralBankReportedForFSIContext2235);
                                    
                                    remarkForCentralBankReportedForFSIValue2239.setValue(zeroDBS01FS_Layout3RemarkForCentralBankReportedForFSIValue2236);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCentralBankReportedForFSIElement2240 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCentralBankReportedForFSI(remarkForCentralBankReportedForFSIValue2239);
                                    bodyElements.add(remarkForCentralBankReportedForFSIElement2240);
                                
                            }
                        
                            
                            Unit pure2241 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2241 = createUnitIfNotExist(pure2241, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherFinancialCorporationsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIMap2245 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIMap2245.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIValue2243 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialCorporationsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIMap2245);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherFinancialCorporationsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIMap2245, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIValue2243 = zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244 == null ? "" : zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIFieldDataValue2244.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIContext2242 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIMap2245 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIValue2243 != null && !"".equals(zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIValue2243)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIContext2242, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherFinancialCorporationsReportedForFSIValue2246 = new RemarkForFSI();
                                    remarkForOtherFinancialCorporationsReportedForFSIValue2246.setContextRef(DBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIContext2242);
                                    
                                    remarkForOtherFinancialCorporationsReportedForFSIValue2246.setValue(zeroDBS01FS_Layout3RemarkForOtherFinancialCorporationsReportedForFSIValue2243);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherFinancialCorporationsReportedForFSIElement2247 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherFinancialCorporationsReportedForFSI(remarkForOtherFinancialCorporationsReportedForFSIValue2246);
                                    bodyElements.add(remarkForOtherFinancialCorporationsReportedForFSIElement2247);
                                
                            }
                        
                            
                            Unit pure2248 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2248 = createUnitIfNotExist(pure2248, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGeneralGovernmentReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIMap2252 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIMap2252.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIValue2250 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGeneralGovernmentReportedForFSI(), zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIMap2252);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGeneralGovernmentReportedForFSI(), zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIMap2252, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIValue2250 = zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251 == null ? "" : zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIFieldDataValue2251.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIContext2249 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIMap2252 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIValue2250 != null && !"".equals(zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIValue2250)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIContext2249, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGeneralGovernmentReportedForFSIValue2253 = new RemarkForFSI();
                                    remarkForGeneralGovernmentReportedForFSIValue2253.setContextRef(DBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIContext2249);
                                    
                                    remarkForGeneralGovernmentReportedForFSIValue2253.setValue(zeroDBS01FS_Layout3RemarkForGeneralGovernmentReportedForFSIValue2250);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGeneralGovernmentReportedForFSIElement2254 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGeneralGovernmentReportedForFSI(remarkForGeneralGovernmentReportedForFSIValue2253);
                                    bodyElements.add(remarkForGeneralGovernmentReportedForFSIElement2254);
                                
                            }
                        
                            
                            Unit pure2255 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2255 = createUnitIfNotExist(pure2255, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNonfinancialCorporationsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIMap2259 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIMap2259.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIValue2257 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialCorporationsReportedForFSI(), zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIMap2259);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNonfinancialCorporationsReportedForFSI(), zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIMap2259, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIValue2257 = zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258 == null ? "" : zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIFieldDataValue2258.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIContext2256 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIMap2259 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIValue2257 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIValue2257)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIContext2256, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNonfinancialCorporationsReportedForFSIValue2260 = new RemarkForFSI();
                                    remarkForNonfinancialCorporationsReportedForFSIValue2260.setContextRef(DBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIContext2256);
                                    
                                    remarkForNonfinancialCorporationsReportedForFSIValue2260.setValue(zeroDBS01FS_Layout3RemarkForNonfinancialCorporationsReportedForFSIValue2257);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNonfinancialCorporationsReportedForFSIElement2261 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNonfinancialCorporationsReportedForFSI(remarkForNonfinancialCorporationsReportedForFSIValue2260);
                                    bodyElements.add(remarkForNonfinancialCorporationsReportedForFSIElement2261);
                                
                            }
                        
                            
                            Unit pure2262 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2262 = createUnitIfNotExist(pure2262, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherDomesticSectorsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIMap2266 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIMap2266.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIValue2264 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherDomesticSectorsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIMap2266);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherDomesticSectorsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIMap2266, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIValue2264 = zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265 == null ? "" : zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIFieldDataValue2265.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIContext2263 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIMap2266 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIValue2264 != null && !"".equals(zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIValue2264)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIContext2263, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherDomesticSectorsReportedForFSIValue2267 = new RemarkForFSI();
                                    remarkForOtherDomesticSectorsReportedForFSIValue2267.setContextRef(DBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIContext2263);
                                    
                                    remarkForOtherDomesticSectorsReportedForFSIValue2267.setValue(zeroDBS01FS_Layout3RemarkForOtherDomesticSectorsReportedForFSIValue2264);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherDomesticSectorsReportedForFSIElement2268 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherDomesticSectorsReportedForFSI(remarkForOtherDomesticSectorsReportedForFSIValue2267);
                                    bodyElements.add(remarkForOtherDomesticSectorsReportedForFSIElement2268);
                                
                            }
                        
                            
                            Unit pure2269 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2269 = createUnitIfNotExist(pure2269, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNonresidentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIMap2273 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIMap2273.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIValue2271 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonresidentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIMap2273);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNonresidentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIMap2273, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIValue2271 = zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272 == null ? "" : zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIFieldDataValue2272.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNonresidentsReportedForFSIContext2270 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIMap2273 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIValue2271 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIValue2271)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNonresidentsReportedForFSIContext2270, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNonresidentsReportedForFSIValue2274 = new RemarkForFSI();
                                    remarkForNonresidentsReportedForFSIValue2274.setContextRef(DBS01FS_Layout3RemarkForNonresidentsReportedForFSIContext2270);
                                    
                                    remarkForNonresidentsReportedForFSIValue2274.setValue(zeroDBS01FS_Layout3RemarkForNonresidentsReportedForFSIValue2271);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNonresidentsReportedForFSIElement2275 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNonresidentsReportedForFSI(remarkForNonresidentsReportedForFSIValue2274);
                                    bodyElements.add(remarkForNonresidentsReportedForFSIElement2275);
                                
                            }
                        
                            
                            Unit pure2276 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2276 = createUnitIfNotExist(pure2276, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForReplacementLoansOutOfTotalLoanReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIMap2280 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIMap2280.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2278 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForReplacementLoansOutOfTotalLoanReportedForFSI(), zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIMap2280);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForReplacementLoansOutOfTotalLoanReportedForFSI(), zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIMap2280, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2278 = zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279 == null ? "" : zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIFieldDataValue2279.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIContext2277 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIMap2280 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2278 != null && !"".equals(zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2278)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIContext2277, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2281 = new RemarkForFSI();
                                    remarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2281.setContextRef(DBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIContext2277);
                                    
                                    remarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2281.setValue(zeroDBS01FS_Layout3RemarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2278);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForReplacementLoansOutOfTotalLoanReportedForFSIElement2282 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForReplacementLoansOutOfTotalLoanReportedForFSI(remarkForReplacementLoansOutOfTotalLoanReportedForFSIValue2281);
                                    bodyElements.add(remarkForReplacementLoansOutOfTotalLoanReportedForFSIElement2282);
                                
                            }
                        
                            
                            Unit pure2283 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2283 = createUnitIfNotExist(pure2283, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherNonperformingAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIMap2287 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIMap2287.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIValue2285 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIMap2287);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherNonperformingAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIMap2287, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIValue2285 = zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286 == null ? "" : zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIFieldDataValue2286.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIContext2284 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIMap2287 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIValue2285 != null && !"".equals(zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIValue2285)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIContext2284, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherNonperformingAssetsReportedForFSIValue2288 = new RemarkForFSI();
                                    remarkForOtherNonperformingAssetsReportedForFSIValue2288.setContextRef(DBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIContext2284);
                                    
                                    remarkForOtherNonperformingAssetsReportedForFSIValue2288.setValue(zeroDBS01FS_Layout3RemarkForOtherNonperformingAssetsReportedForFSIValue2285);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherNonperformingAssetsReportedForFSIElement2289 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherNonperformingAssetsReportedForFSI(remarkForOtherNonperformingAssetsReportedForFSIValue2288);
                                    bodyElements.add(remarkForOtherNonperformingAssetsReportedForFSIElement2289);
                                
                            }
                        
                            
                            Unit pure2290 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2290 = createUnitIfNotExist(pure2290, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoanLossReservesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIMap2294 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIMap2294.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIValue2292 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossReservesReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIMap2294);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoanLossReservesReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIMap2294, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIValue2292 = zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293 == null ? "" : zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIFieldDataValue2293.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIContext2291 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIMap2294 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIValue2292 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIValue2292)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIContext2291, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoanLossReservesReportedForFSIValue2295 = new RemarkForFSI();
                                    remarkForLoanLossReservesReportedForFSIValue2295.setContextRef(DBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIContext2291);
                                    
                                    remarkForLoanLossReservesReportedForFSIValue2295.setValue(zeroDBS01FS_Layout3RemarkForLoanLossReservesReportedForFSIValue2292);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoanLossReservesReportedForFSIElement2296 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoanLossReservesReportedForFSI(remarkForLoanLossReservesReportedForFSIValue2295);
                                    bodyElements.add(remarkForLoanLossReservesReportedForFSIElement2296);
                                
                            }
                        
                            
                            Unit pure2297 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2297 = createUnitIfNotExist(pure2297, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap2301 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap2301.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2299 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI(), zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap2301);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI(), zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap2301, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2299 = zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300 == null ? "" : zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIFieldDataValue2300.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIContext2298 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIMap2301 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2299 != null && !"".equals(zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2299)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIContext2298, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2302 = new RemarkForFSI();
                                    remarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2302.setContextRef(DBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIContext2298);
                                    
                                    remarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2302.setValue(zeroDBS01FS_Layout3RemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2299);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIElement2303 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSI(remarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIValue2302);
                                    bodyElements.add(remarkForSpecificProvisionsAgainstTotalDebtClaimsReportedForFSIElement2303);
                                
                            }
                        
                            
                            Unit pure2304 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2304 = createUnitIfNotExist(pure2304, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap2308 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap2308.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2306 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI(), zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap2308);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI(), zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap2308, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2306 = zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307 == null ? "" : zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIFieldDataValue2307.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIContext2305 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIMap2308 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2306 != null && !"".equals(zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2306)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIContext2305, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2309 = new RemarkForFSI();
                                    remarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2309.setContextRef(DBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIContext2305);
                                    
                                    remarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2309.setValue(zeroDBS01FS_Layout3RemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2306);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIElement2310 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSI(remarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIValue2309);
                                    bodyElements.add(remarkForShortfallInProvisionsUnderTheIrbApproachOfBaselIiReportedForFSIElement2310);
                                
                            }
                        
                            
                            Unit pure2311 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2311 = createUnitIfNotExist(pure2311, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForArrearsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIMap2315 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIMap2315.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIValue2313 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForArrearsReportedForFSI(), zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIMap2315);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForArrearsReportedForFSI(), zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIMap2315, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIValue2313 = zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314 == null ? "" : zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIFieldDataValue2314.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForArrearsReportedForFSIContext2312 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIMap2315 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIValue2313 != null && !"".equals(zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIValue2313)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForArrearsReportedForFSIContext2312, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForArrearsReportedForFSIValue2316 = new RemarkForFSI();
                                    remarkForArrearsReportedForFSIValue2316.setContextRef(DBS01FS_Layout3RemarkForArrearsReportedForFSIContext2312);
                                    
                                    remarkForArrearsReportedForFSIValue2316.setValue(zeroDBS01FS_Layout3RemarkForArrearsReportedForFSIValue2313);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForArrearsReportedForFSIElement2317 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForArrearsReportedForFSI(remarkForArrearsReportedForFSIValue2316);
                                    bodyElements.add(remarkForArrearsReportedForFSIElement2317);
                                
                            }
                        
                            
                            Unit pure2318 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2318 = createUnitIfNotExist(pure2318, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForArrearsOfDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIMap2322 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIMap2322.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIValue2320 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForArrearsOfDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIMap2322);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForArrearsOfDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIMap2322, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIValue2320 = zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321 == null ? "" : zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIFieldDataValue2321.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIContext2319 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIMap2322 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIValue2320 != null && !"".equals(zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIValue2320)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIContext2319, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForArrearsOfDepositTakersReportedForFSIValue2323 = new RemarkForFSI();
                                    remarkForArrearsOfDepositTakersReportedForFSIValue2323.setContextRef(DBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIContext2319);
                                    
                                    remarkForArrearsOfDepositTakersReportedForFSIValue2323.setValue(zeroDBS01FS_Layout3RemarkForArrearsOfDepositTakersReportedForFSIValue2320);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForArrearsOfDepositTakersReportedForFSIElement2324 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForArrearsOfDepositTakersReportedForFSI(remarkForArrearsOfDepositTakersReportedForFSIValue2323);
                                    bodyElements.add(remarkForArrearsOfDepositTakersReportedForFSIElement2324);
                                
                            }
                        
                            
                            Unit pure2325 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2325 = createUnitIfNotExist(pure2325, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap2329 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap2329.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2327 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap2329);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap2329, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2327 = zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328 == null ? "" : zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIFieldDataValue2328.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIContext2326 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIMap2329 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2327 != null && !"".equals(zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2327)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIContext2326, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2330 = new RemarkForFSI();
                                    remarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2330.setContextRef(DBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIContext2326);
                                    
                                    remarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2330.setValue(zeroDBS01FS_Layout3RemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2327);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIElement2331 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSI(remarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIValue2330);
                                    bodyElements.add(remarkForAssetsTransferredToSpecialPurposeEntitiesReportedForFSIElement2331);
                                
                            }
                        
                            
                            Unit pure2332 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2332 = createUnitIfNotExist(pure2332, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGuaranteesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2336 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2336.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2334 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGuaranteesReportedForFSI(), zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2336);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGuaranteesReportedForFSI(), zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2336, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2334 = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335 == null ? "" : zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2335.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2333 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2336 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2334 != null && !"".equals(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2334)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2333, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGuaranteesReportedForFSIValue2337 = new RemarkForFSI();
                                    remarkForGuaranteesReportedForFSIValue2337.setContextRef(DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2333);
                                    
                                    remarkForGuaranteesReportedForFSIValue2337.setValue(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2334);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGuaranteesReportedForFSIElement2338 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGuaranteesReportedForFSI(remarkForGuaranteesReportedForFSIValue2337);
                                    bodyElements.add(remarkForGuaranteesReportedForFSIElement2338);
                                
                            }
                        
                            
                            Unit pure2339 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2339 = createUnitIfNotExist(pure2339, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGuaranteesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2343 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2343.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2343.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2341 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGuaranteesReportedForFSI(), zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2343);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGuaranteesReportedForFSI(), zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2343, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2341 = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342 == null ? "" : zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2342.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2340 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2343 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2341 != null && !"".equals(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2341)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2340, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGuaranteesReportedForFSIValue2344 = new RemarkForFSI();
                                    remarkForGuaranteesReportedForFSIValue2344.setContextRef(DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2340);
                                    
                                    remarkForGuaranteesReportedForFSIValue2344.setValue(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2341);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGuaranteesReportedForFSIElement2345 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGuaranteesReportedForFSI(remarkForGuaranteesReportedForFSIValue2344);
                                    bodyElements.add(remarkForGuaranteesReportedForFSIElement2345);
                                
                            }
                        
                            
                            Unit pure2346 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2346 = createUnitIfNotExist(pure2346, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForGuaranteesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2350 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2350.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2350.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2348 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGuaranteesReportedForFSI(), zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2350);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForGuaranteesReportedForFSI(), zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2350, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2348 = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349 == null ? "" : zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIFieldDataValue2349.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2347 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIMap2350 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2348 != null && !"".equals(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2348)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2347, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForGuaranteesReportedForFSIValue2351 = new RemarkForFSI();
                                    remarkForGuaranteesReportedForFSIValue2351.setContextRef(DBS01FS_Layout3RemarkForGuaranteesReportedForFSIContext2347);
                                    
                                    remarkForGuaranteesReportedForFSIValue2351.setValue(zeroDBS01FS_Layout3RemarkForGuaranteesReportedForFSIValue2348);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForGuaranteesReportedForFSIElement2352 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForGuaranteesReportedForFSI(remarkForGuaranteesReportedForFSIValue2351);
                                    bodyElements.add(remarkForGuaranteesReportedForFSIElement2352);
                                
                            }
                        
                            
                            Unit pure2353 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2353 = createUnitIfNotExist(pure2353, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCreditCommitmentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2357 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2357.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2355 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2357);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2357, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2355 = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356 == null ? "" : zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2356.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2354 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2357 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2355 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2355)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2354, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCreditCommitmentsReportedForFSIValue2358 = new RemarkForFSI();
                                    remarkForCreditCommitmentsReportedForFSIValue2358.setContextRef(DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2354);
                                    
                                    remarkForCreditCommitmentsReportedForFSIValue2358.setValue(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2355);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCreditCommitmentsReportedForFSIElement2359 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCreditCommitmentsReportedForFSI(remarkForCreditCommitmentsReportedForFSIValue2358);
                                    bodyElements.add(remarkForCreditCommitmentsReportedForFSIElement2359);
                                
                            }
                        
                            
                            Unit pure2360 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2360 = createUnitIfNotExist(pure2360, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCreditCommitmentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2364 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2364.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:ResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2364.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2362 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2364);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2364, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2362 = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363 == null ? "" : zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2363.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2361 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2364 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2362 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2362)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2361, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCreditCommitmentsReportedForFSIValue2365 = new RemarkForFSI();
                                    remarkForCreditCommitmentsReportedForFSIValue2365.setContextRef(DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2361);
                                    
                                    remarkForCreditCommitmentsReportedForFSIValue2365.setValue(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2362);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCreditCommitmentsReportedForFSIElement2366 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCreditCommitmentsReportedForFSI(remarkForCreditCommitmentsReportedForFSIValue2365);
                                    bodyElements.add(remarkForCreditCommitmentsReportedForFSIElement2366);
                                
                            }
                        
                            
                            Unit pure2367 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2367 = createUnitIfNotExist(pure2367, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCreditCommitmentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2371 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2371.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2371.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2369 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2371);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCreditCommitmentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2371, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2369 = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370 == null ? "" : zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIFieldDataValue2370.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2368 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIMap2371 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2369 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2369)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2368, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCreditCommitmentsReportedForFSIValue2372 = new RemarkForFSI();
                                    remarkForCreditCommitmentsReportedForFSIValue2372.setContextRef(DBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIContext2368);
                                    
                                    remarkForCreditCommitmentsReportedForFSIValue2372.setValue(zeroDBS01FS_Layout3RemarkForCreditCommitmentsReportedForFSIValue2369);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCreditCommitmentsReportedForFSIElement2373 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCreditCommitmentsReportedForFSI(remarkForCreditCommitmentsReportedForFSIValue2372);
                                    bodyElements.add(remarkForCreditCommitmentsReportedForFSIElement2373);
                                
                            }
                        
                            
                            Unit pure2374 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2374 = createUnitIfNotExist(pure2374, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap2378 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap2378.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2376 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap2378);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI(), zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap2378, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2376 = zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377 == null ? "" : zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIFieldDataValue2377.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIContext2375 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIMap2378 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2376 != null && !"".equals(zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2376)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIContext2375, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2379 = new RemarkForFSI();
                                    remarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2379.setContextRef(DBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIContext2375);
                                    
                                    remarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2379.setValue(zeroDBS01FS_Layout3RemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2376);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIElement2380 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSI(remarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIValue2379);
                                    bodyElements.add(remarkForAssetsManagedButNotOwnedByBanksOrDepositTakersReportedForFSIElement2380);
                                
                            }
                        
                            
                            Unit pure2381 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2381 = createUnitIfNotExist(pure2381, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDurationOfAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIMap2385 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIMap2385.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIValue2383 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDurationOfAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIMap2385);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDurationOfAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIMap2385, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIValue2383 = zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384 == null ? "" : zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIFieldDataValue2384.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIContext2382 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIMap2385 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIValue2383 != null && !"".equals(zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIValue2383)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIContext2382, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDurationOfAssetsReportedForFSIValue2386 = new RemarkForFSI();
                                    remarkForDurationOfAssetsReportedForFSIValue2386.setContextRef(DBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIContext2382);
                                    
                                    remarkForDurationOfAssetsReportedForFSIValue2386.setValue(zeroDBS01FS_Layout3RemarkForDurationOfAssetsReportedForFSIValue2383);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDurationOfAssetsReportedForFSIElement2387 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDurationOfAssetsReportedForFSI(remarkForDurationOfAssetsReportedForFSIValue2386);
                                    bodyElements.add(remarkForDurationOfAssetsReportedForFSIElement2387);
                                
                            }
                        
                            
                            Unit pure2388 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2388 = createUnitIfNotExist(pure2388, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDurationOfLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIMap2392 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIMap2392.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIValue2390 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDurationOfLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIMap2392);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDurationOfLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIMap2392, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIValue2390 = zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391 == null ? "" : zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIFieldDataValue2391.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIContext2389 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIMap2392 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIValue2390 != null && !"".equals(zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIValue2390)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIContext2389, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDurationOfLiabilitiesReportedForFSIValue2393 = new RemarkForFSI();
                                    remarkForDurationOfLiabilitiesReportedForFSIValue2393.setContextRef(DBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIContext2389);
                                    
                                    remarkForDurationOfLiabilitiesReportedForFSIValue2393.setValue(zeroDBS01FS_Layout3RemarkForDurationOfLiabilitiesReportedForFSIValue2390);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDurationOfLiabilitiesReportedForFSIElement2394 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDurationOfLiabilitiesReportedForFSI(remarkForDurationOfLiabilitiesReportedForFSIValue2393);
                                    bodyElements.add(remarkForDurationOfLiabilitiesReportedForFSIElement2394);
                                
                            }
                        
                            
                            Unit pure2395 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2395 = createUnitIfNotExist(pure2395, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNumberOfLargeExposuresReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIMap2399 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIMap2399.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIValue2397 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNumberOfLargeExposuresReportedForFSI(), zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIMap2399);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNumberOfLargeExposuresReportedForFSI(), zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIMap2399, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIValue2397 = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398 == null ? "" : zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIFieldDataValue2398.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIContext2396 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIMap2399 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIValue2397 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIValue2397)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIContext2396, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNumberOfLargeExposuresReportedForFSIValue2400 = new RemarkForFSI();
                                    remarkForNumberOfLargeExposuresReportedForFSIValue2400.setContextRef(DBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIContext2396);
                                    
                                    remarkForNumberOfLargeExposuresReportedForFSIValue2400.setValue(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresReportedForFSIValue2397);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNumberOfLargeExposuresReportedForFSIElement2401 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNumberOfLargeExposuresReportedForFSI(remarkForNumberOfLargeExposuresReportedForFSIValue2400);
                                    bodyElements.add(remarkForNumberOfLargeExposuresReportedForFSIElement2401);
                                
                            }
                        
                            
                            Unit pure2402 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2402 = createUnitIfNotExist(pure2402, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNumberOfLargeExposuresByIndividualReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIMap2406 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIMap2406.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2404 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNumberOfLargeExposuresByIndividualReportedForFSI(), zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIMap2406);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNumberOfLargeExposuresByIndividualReportedForFSI(), zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIMap2406, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2404 = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405 == null ? "" : zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIFieldDataValue2405.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIContext2403 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIMap2406 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2404 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2404)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIContext2403, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2407 = new RemarkForFSI();
                                    remarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2407.setContextRef(DBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIContext2403);
                                    
                                    remarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2407.setValue(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2404);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNumberOfLargeExposuresByIndividualReportedForFSIElement2408 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNumberOfLargeExposuresByIndividualReportedForFSI(remarkForNumberOfLargeExposuresByIndividualReportedForFSIValue2407);
                                    bodyElements.add(remarkForNumberOfLargeExposuresByIndividualReportedForFSIElement2408);
                                
                            }
                        
                            
                            Unit pure2409 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2409 = createUnitIfNotExist(pure2409, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNumberOfLargeExposuresByGroupReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIMap2413 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIMap2413.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIValue2411 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNumberOfLargeExposuresByGroupReportedForFSI(), zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIMap2413);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNumberOfLargeExposuresByGroupReportedForFSI(), zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIMap2413, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIValue2411 = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412 == null ? "" : zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIFieldDataValue2412.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIContext2410 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIMap2413 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIValue2411 != null && !"".equals(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIValue2411)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIContext2410, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNumberOfLargeExposuresByGroupReportedForFSIValue2414 = new RemarkForFSI();
                                    remarkForNumberOfLargeExposuresByGroupReportedForFSIValue2414.setContextRef(DBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIContext2410);
                                    
                                    remarkForNumberOfLargeExposuresByGroupReportedForFSIValue2414.setValue(zeroDBS01FS_Layout3RemarkForNumberOfLargeExposuresByGroupReportedForFSIValue2411);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNumberOfLargeExposuresByGroupReportedForFSIElement2415 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNumberOfLargeExposuresByGroupReportedForFSI(remarkForNumberOfLargeExposuresByGroupReportedForFSIValue2414);
                                    bodyElements.add(remarkForNumberOfLargeExposuresByGroupReportedForFSIElement2415);
                                
                            }
                        
                            
                            Unit pure2416 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2416 = createUnitIfNotExist(pure2416, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap2420 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap2420.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2418 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap2420);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap2420, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2418 = zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419 == null ? "" : zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIFieldDataValue2419.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIContext2417 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIMap2420 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2418 != null && !"".equals(zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2418)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIContext2417, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2421 = new RemarkForFSI();
                                    remarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2421.setContextRef(DBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIContext2417);
                                    
                                    remarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2421.setValue(zeroDBS01FS_Layout3RemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2418);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIElement2422 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSI(remarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIValue2421);
                                    bodyElements.add(remarkForExposuresToAffiliatedEntitiesAndOtherConnectedCounterpartiesReportedForFSIElement2422);
                                
                            }
                        
                            
                            Unit pure2423 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2423 = createUnitIfNotExist(pure2423, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIMap2427 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIMap2427.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIMap2427.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIValue2425 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIMap2427);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIMap2427, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIValue2425 = zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426 == null ? "" : zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIFieldDataValue2426.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIContext2424 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIMap2427 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIValue2425 != null && !"".equals(zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIValue2425)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIContext2424, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialAssetsReportedForFSIValue2428 = new RemarkForFSI();
                                    remarkForFinancialAssetsReportedForFSIValue2428.setContextRef(DBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIContext2424);
                                    
                                    remarkForFinancialAssetsReportedForFSIValue2428.setValue(zeroDBS01FS_Layout3RemarkForFinancialAssetsReportedForFSIValue2425);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialAssetsReportedForFSIElement2429 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialAssetsReportedForFSI(remarkForFinancialAssetsReportedForFSIValue2428);
                                    bodyElements.add(remarkForFinancialAssetsReportedForFSIElement2429);
                                
                            }
                        
                            
                            Unit pure2430 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2430 = createUnitIfNotExist(pure2430, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIMap2434 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIMap2434.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIMap2434.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIValue2432 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIMap2434);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIMap2434, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIValue2432 = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433 == null ? "" : zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2433.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIContext2431 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIMap2434 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIValue2432 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIValue2432)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIContext2431, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositsReportedForFSIValue2435 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositsReportedForFSIValue2435.setContextRef(DBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIContext2431);
                                    
                                    remarkForCurrencyAndDepositsReportedForFSIValue2435.setValue(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositsReportedForFSIValue2432);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositsReportedForFSIElement2436 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositsReportedForFSI(remarkForCurrencyAndDepositsReportedForFSIValue2435);
                                    bodyElements.add(remarkForCurrencyAndDepositsReportedForFSIElement2436);
                                
                            }
                        
                            
                            Unit pure2437 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2437 = createUnitIfNotExist(pure2437, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2441 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2441.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2441.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2439 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2441);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2441, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2439 = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440 == null ? "" : zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoansReportedForFSIFieldDataValue2440.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoansReportedForFSIContext2438 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoansReportedForFSIMap2441 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2439 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2439)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2438, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2442 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2442.setContextRef(DBS01FS_Layout3RemarkForLoansReportedForFSIContext2438);
                                    
                                    remarkForLoansReportedForFSIValue2442.setValue(zeroDBS01FS_Layout3RemarkForLoansReportedForFSIValue2439);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2443 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2442);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2443);
                                
                            }
                        
                            
                            Unit pure2444 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2444 = createUnitIfNotExist(pure2444, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForForeignCurrencyLoansReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2448 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2448.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2448.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2446 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2448);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForForeignCurrencyLoansReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2448, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2446 = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447 == null ? "" : zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIFieldDataValue2447.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIContext2445 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIMap2448 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2446 != null && !"".equals(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2446)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIContext2445, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForForeignCurrencyLoansReportedForFSIValue2449 = new RemarkForFSI();
                                    remarkForForeignCurrencyLoansReportedForFSIValue2449.setContextRef(DBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIContext2445);
                                    
                                    remarkForForeignCurrencyLoansReportedForFSIValue2449.setValue(zeroDBS01FS_Layout3RemarkForForeignCurrencyLoansReportedForFSIValue2446);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForForeignCurrencyLoansReportedForFSIElement2450 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForForeignCurrencyLoansReportedForFSI(remarkForForeignCurrencyLoansReportedForFSIValue2449);
                                    bodyElements.add(remarkForForeignCurrencyLoansReportedForFSIElement2450);
                                
                            }
                        
                            
                            Unit pure2451 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2451 = createUnitIfNotExist(pure2451, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIMap2455 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIMap2455.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIMap2455.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIValue2453 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIMap2455);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIMap2455, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIValue2453 = zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454 == null ? "" : zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIFieldDataValue2454.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIContext2452 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIMap2455 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIValue2453 != null && !"".equals(zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIValue2453)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIContext2452, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesReportedForFSIValue2456 = new RemarkForFSI();
                                    remarkForDebtSecuritiesReportedForFSIValue2456.setContextRef(DBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIContext2452);
                                    
                                    remarkForDebtSecuritiesReportedForFSIValue2456.setValue(zeroDBS01FS_Layout3RemarkForDebtSecuritiesReportedForFSIValue2453);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesReportedForFSIElement2457 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesReportedForFSI(remarkForDebtSecuritiesReportedForFSIValue2456);
                                    bodyElements.add(remarkForDebtSecuritiesReportedForFSIElement2457);
                                
                            }
                        
                            
                            Unit pure2458 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2458 = createUnitIfNotExist(pure2458, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIMap2462 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIMap2462.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIMap2462.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIValue2460 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIMap2462);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIMap2462, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIValue2460 = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461 == null ? "" : zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2461.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIContext2459 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIMap2462 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIValue2460 != null && !"".equals(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIValue2460)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIContext2459, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesAndOtherEquityReportedForFSIValue2463 = new RemarkForFSI();
                                    remarkForSharesAndOtherEquityReportedForFSIValue2463.setContextRef(DBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIContext2459);
                                    
                                    remarkForSharesAndOtherEquityReportedForFSIValue2463.setValue(zeroDBS01FS_Layout3RemarkForSharesAndOtherEquityReportedForFSIValue2460);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesAndOtherEquityReportedForFSIElement2464 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesAndOtherEquityReportedForFSI(remarkForSharesAndOtherEquityReportedForFSIValue2463);
                                    bodyElements.add(remarkForSharesAndOtherEquityReportedForFSIElement2464);
                                
                            }
                        
                            
                            Unit pure2465 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2465 = createUnitIfNotExist(pure2465, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherAssetsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIMap2469 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIMap2469.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIMap2469.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIValue2467 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIMap2469);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIMap2469, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIValue2467 = zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468 == null ? "" : zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIFieldDataValue2468.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForOtherAssetsReportedForFSIContext2466 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIMap2469 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIValue2467 != null && !"".equals(zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIValue2467)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForOtherAssetsReportedForFSIContext2466, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherAssetsReportedForFSIValue2470 = new RemarkForFSI();
                                    remarkForOtherAssetsReportedForFSIValue2470.setContextRef(DBS01FS_Layout3RemarkForOtherAssetsReportedForFSIContext2466);
                                    
                                    remarkForOtherAssetsReportedForFSIValue2470.setValue(zeroDBS01FS_Layout3RemarkForOtherAssetsReportedForFSIValue2467);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherAssetsReportedForFSIElement2471 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherAssetsReportedForFSI(remarkForOtherAssetsReportedForFSIValue2470);
                                    bodyElements.add(remarkForOtherAssetsReportedForFSIElement2471);
                                
                            }
                        
                            
                            Unit pure2472 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2472 = createUnitIfNotExist(pure2472, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476.put("rbi-core:TypeOfBalanceAxis", "in-rbi-rep:TotalMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIValue2474 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIValue2474 = zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475 == null ? "" : zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIFieldDataValue2475.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLiabilitiesReportedForFSIContext2473 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIMap2476 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIValue2474 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIValue2474)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLiabilitiesReportedForFSIContext2473, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiabilitiesReportedForFSIValue2477 = new RemarkForFSI();
                                    remarkForLiabilitiesReportedForFSIValue2477.setContextRef(DBS01FS_Layout3RemarkForLiabilitiesReportedForFSIContext2473);
                                    
                                    remarkForLiabilitiesReportedForFSIValue2477.setValue(zeroDBS01FS_Layout3RemarkForLiabilitiesReportedForFSIValue2474);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiabilitiesReportedForFSIElement2478 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiabilitiesReportedForFSI(remarkForLiabilitiesReportedForFSIValue2477);
                                    bodyElements.add(remarkForLiabilitiesReportedForFSIElement2478);
                                
                            }
                        
                            
                            Unit pure2479 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2479 = createUnitIfNotExist(pure2479, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIMap2483 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIMap2483.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIMap2483.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2481 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIMap2483);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIMap2483, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2481 = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482 == null ? "" : zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIFieldDataValue2482.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIContext2480 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIMap2483 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2481 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2481)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIContext2480, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2484 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2484.setContextRef(DBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIContext2480);
                                    
                                    remarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2484.setValue(zeroDBS01FS_Layout3RemarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2481);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositLiabilitiesReportedForFSIElement2485 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositLiabilitiesReportedForFSI(remarkForCurrencyAndDepositLiabilitiesReportedForFSIValue2484);
                                    bodyElements.add(remarkForCurrencyAndDepositLiabilitiesReportedForFSIElement2485);
                                
                            }
                        
                            
                            Unit pure2486 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2486 = createUnitIfNotExist(pure2486, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCustomerDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIMap2490 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIMap2490.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIMap2490.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIValue2488 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCustomerDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIMap2490);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCustomerDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIMap2490, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIValue2488 = zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489 == null ? "" : zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIFieldDataValue2489.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIContext2487 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIMap2490 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIValue2488 != null && !"".equals(zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIValue2488)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIContext2487, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCustomerDepositsReportedForFSIValue2491 = new RemarkForFSI();
                                    remarkForCustomerDepositsReportedForFSIValue2491.setContextRef(DBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIContext2487);
                                    
                                    remarkForCustomerDepositsReportedForFSIValue2491.setValue(zeroDBS01FS_Layout3RemarkForCustomerDepositsReportedForFSIValue2488);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCustomerDepositsReportedForFSIElement2492 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCustomerDepositsReportedForFSI(remarkForCustomerDepositsReportedForFSIValue2491);
                                    bodyElements.add(remarkForCustomerDepositsReportedForFSIElement2492);
                                
                            }
                        
                            
                            Unit pure2493 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2493 = createUnitIfNotExist(pure2493, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInterbankDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIMap2497 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIMap2497.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIMap2497.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIValue2495 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterbankDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIMap2497);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInterbankDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIMap2497, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIValue2495 = zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496 == null ? "" : zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIFieldDataValue2496.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIContext2494 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIMap2497 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIValue2495 != null && !"".equals(zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIValue2495)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIContext2494, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInterbankDepositsReportedForFSIValue2498 = new RemarkForFSI();
                                    remarkForInterbankDepositsReportedForFSIValue2498.setContextRef(DBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIContext2494);
                                    
                                    remarkForInterbankDepositsReportedForFSIValue2498.setValue(zeroDBS01FS_Layout3RemarkForInterbankDepositsReportedForFSIValue2495);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInterbankDepositsReportedForFSIElement2499 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInterbankDepositsReportedForFSI(remarkForInterbankDepositsReportedForFSIValue2498);
                                    bodyElements.add(remarkForInterbankDepositsReportedForFSIElement2499);
                                
                            }
                        
                            
                            Unit pure2500 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2500 = createUnitIfNotExist(pure2500, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIMap2504 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIMap2504.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIMap2504.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIValue2502 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIMap2504);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherCurrencyAndDepositsReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIMap2504, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIValue2502 = zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503 == null ? "" : zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIFieldDataValue2503.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIContext2501 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIMap2504 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIValue2502 != null && !"".equals(zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIValue2502)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIContext2501, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherCurrencyAndDepositsReportedForFSIValue2505 = new RemarkForFSI();
                                    remarkForOtherCurrencyAndDepositsReportedForFSIValue2505.setContextRef(DBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIContext2501);
                                    
                                    remarkForOtherCurrencyAndDepositsReportedForFSIValue2505.setValue(zeroDBS01FS_Layout3RemarkForOtherCurrencyAndDepositsReportedForFSIValue2502);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherCurrencyAndDepositsReportedForFSIElement2506 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherCurrencyAndDepositsReportedForFSI(remarkForOtherCurrencyAndDepositsReportedForFSIValue2505);
                                    bodyElements.add(remarkForOtherCurrencyAndDepositsReportedForFSIElement2506);
                                
                            }
                        
                            
                            Unit pure2507 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2507 = createUnitIfNotExist(pure2507, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoanLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIMap2511 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIMap2511.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIMap2511.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIValue2509 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIMap2511);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoanLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIMap2511, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIValue2509 = zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510 == null ? "" : zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIFieldDataValue2510.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIContext2508 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIMap2511 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIValue2509 != null && !"".equals(zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIValue2509)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIContext2508, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoanLiabilitiesReportedForFSIValue2512 = new RemarkForFSI();
                                    remarkForLoanLiabilitiesReportedForFSIValue2512.setContextRef(DBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIContext2508);
                                    
                                    remarkForLoanLiabilitiesReportedForFSIValue2512.setValue(zeroDBS01FS_Layout3RemarkForLoanLiabilitiesReportedForFSIValue2509);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoanLiabilitiesReportedForFSIElement2513 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoanLiabilitiesReportedForFSI(remarkForLoanLiabilitiesReportedForFSIValue2512);
                                    bodyElements.add(remarkForLoanLiabilitiesReportedForFSIElement2513);
                                
                            }
                        
                            
                            Unit pure2514 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2514 = createUnitIfNotExist(pure2514, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecurityLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIMap2518 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIMap2518.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIMap2518.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIValue2516 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecurityLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIMap2518);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecurityLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIMap2518, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIValue2516 = zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517 == null ? "" : zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIFieldDataValue2517.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIContext2515 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIMap2518 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIValue2516 != null && !"".equals(zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIValue2516)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIContext2515, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecurityLiabilitiesReportedForFSIValue2519 = new RemarkForFSI();
                                    remarkForDebtSecurityLiabilitiesReportedForFSIValue2519.setContextRef(DBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIContext2515);
                                    
                                    remarkForDebtSecurityLiabilitiesReportedForFSIValue2519.setValue(zeroDBS01FS_Layout3RemarkForDebtSecurityLiabilitiesReportedForFSIValue2516);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecurityLiabilitiesReportedForFSIElement2520 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecurityLiabilitiesReportedForFSI(remarkForDebtSecurityLiabilitiesReportedForFSIValue2519);
                                    bodyElements.add(remarkForDebtSecurityLiabilitiesReportedForFSIElement2520);
                                
                            }
                        
                            
                            Unit pure2521 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2521 = createUnitIfNotExist(pure2521, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIMap2525 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIMap2525.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIMap2525.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIValue2523 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIMap2525);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIMap2525, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIValue2523 = zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524 == null ? "" : zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2524.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIContext2522 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIMap2525 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIValue2523 != null && !"".equals(zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIValue2523)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIContext2522, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherLiabilitiesReportedForFSIValue2526 = new RemarkForFSI();
                                    remarkForOtherLiabilitiesReportedForFSIValue2526.setContextRef(DBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIContext2522);
                                    
                                    remarkForOtherLiabilitiesReportedForFSIValue2526.setValue(zeroDBS01FS_Layout3RemarkForOtherLiabilitiesReportedForFSIValue2523);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherLiabilitiesReportedForFSIElement2527 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherLiabilitiesReportedForFSI(remarkForOtherLiabilitiesReportedForFSIValue2526);
                                    bodyElements.add(remarkForOtherLiabilitiesReportedForFSIElement2527);
                                
                            }
                        
                            
                            Unit pure2528 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2528 = createUnitIfNotExist(pure2528, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSI
                            
                                Map zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIMap2532 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIMap2532.put("in-rbi-rep:ParameterAxis", "rbi-core:FSMember");
                                    
                                    
                                    String zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2530 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIMap2532);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSI(), zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIMap2532, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2530 = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531 == null ? "" : zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getValue();
                                    if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531 != null ) {
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getStartDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getEndDateValue();
                                        if(!zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIFieldDataValue2531.getInstantDateValue();
                                    }

                                    
                                            Context DBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIContext2529 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIMap2532 );
                                            
                                
                                if(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2530 != null && !"".equals(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2530)) {
                                    
                                    addContext(DBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIContext2529, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2533 = new RemarkForFSI();
                                    remarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2533.setContextRef(DBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIContext2529);
                                    
                                    remarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2533.setValue(zeroDBS01FS_Layout3RemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2530);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIElement2534 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSI(remarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIValue2533);
                                    bodyElements.add(remarkForForeignCurrencyLiabilitiesToNonresidentsReportedForFSIElement2534);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01OFC_Layout1 if any typeMembers then List or Single
                //DBS01OFC_Layout1 dBS01OFC_Layout1 = mainReportData.getDBS01OFC_Layout1();
                
                    private String dBS01OFC_Layout1Method(DBS01OFC_Layout1 dBS01OFC_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBS01OFC_Layout1 field = dBS01OFC_Layout1;
                    
                    
                        
                        
                            
                                
                                Unit INR2535 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2535 = createUnitIfNotExist(INR2535, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - AssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1AssetsReportedForFSIMap2539 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1AssetsReportedForFSIMap2539.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1AssetsReportedForFSIMap2539.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1AssetsReportedForFSIValue2537 = DBS01ReportUtil.retrieveValueForElement(field.getAssetsReportedForFSI(), zeroDBS01OFC_Layout1AssetsReportedForFSIMap2539);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538 = DBS01ReportUtil.retrieveFieldDataForElement(field.getAssetsReportedForFSI(), zeroDBS01OFC_Layout1AssetsReportedForFSIMap2539, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1AssetsReportedForFSIValue2537 = zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538 == null ? "" : zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getValue();
                                    if(zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538 != null ) {
                                        if(!zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1AssetsReportedForFSIFieldDataValue2538.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1AssetsReportedForFSIContext2536 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1AssetsReportedForFSIMap2539 );
                                        
                                
                                if(zeroDBS01OFC_Layout1AssetsReportedForFSIValue2537 != null && !"".equals(zeroDBS01OFC_Layout1AssetsReportedForFSIValue2537)) {
                                    
                                    addContext(DBS01OFC_Layout1AssetsReportedForFSIContext2536, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType assetsReportedForFSIValue2540 = new MonetaryItemType();
                                    assetsReportedForFSIValue2540.setContextRef(DBS01OFC_Layout1AssetsReportedForFSIContext2536);
                                    
                                    assetsReportedForFSIValue2540.setUnitRef(INR2535);
                                    assetsReportedForFSIValue2540.setDecimals("INF");
                                    assetsReportedForFSIValue2540.setValue(new BigDecimal(zeroDBS01OFC_Layout1AssetsReportedForFSIValue2537));
                                    
                                    
                                    JAXBElement<MonetaryItemType> assetsReportedForFSIElement2541 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createAssetsReportedForFSI(assetsReportedForFSIValue2540);
                                    bodyElements.add(assetsReportedForFSIElement2541);
                                
                            }
                        
                            
                                
                                Unit INR2542 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2542 = createUnitIfNotExist(INR2542, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NonfinancialAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIMap2546 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIMap2546.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIMap2546.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIValue2544 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIMap2546);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNonfinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIMap2546, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIValue2544 = zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545 == null ? "" : zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getValue();
                                    if(zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545 != null ) {
                                        if(!zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIFieldDataValue2545.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1NonfinancialAssetsReportedForFSIContext2543 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIMap2546 );
                                        
                                
                                if(zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIValue2544 != null && !"".equals(zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIValue2544)) {
                                    
                                    addContext(DBS01OFC_Layout1NonfinancialAssetsReportedForFSIContext2543, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType nonfinancialAssetsReportedForFSIValue2547 = new MonetaryItemType();
                                    nonfinancialAssetsReportedForFSIValue2547.setContextRef(DBS01OFC_Layout1NonfinancialAssetsReportedForFSIContext2543);
                                    
                                    nonfinancialAssetsReportedForFSIValue2547.setUnitRef(INR2542);
                                    nonfinancialAssetsReportedForFSIValue2547.setDecimals("INF");
                                    nonfinancialAssetsReportedForFSIValue2547.setValue(new BigDecimal(zeroDBS01OFC_Layout1NonfinancialAssetsReportedForFSIValue2544));
                                    
                                    
                                    JAXBElement<MonetaryItemType> nonfinancialAssetsReportedForFSIElement2548 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNonfinancialAssetsReportedForFSI(nonfinancialAssetsReportedForFSIValue2547);
                                    bodyElements.add(nonfinancialAssetsReportedForFSIElement2548);
                                
                            }
                        
                            
                                
                                Unit INR2549 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2549 = createUnitIfNotExist(INR2549, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2553 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2553.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2553.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2551 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2553);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2553, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2551 = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552 == null ? "" : zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getValue();
                                    if(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552 != null ) {
                                        if(!zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2552.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1FinancialAssetsReportedForFSIContext2550 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2553 );
                                        
                                
                                if(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2551 != null && !"".equals(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2551)) {
                                    
                                    addContext(DBS01OFC_Layout1FinancialAssetsReportedForFSIContext2550, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialAssetsReportedForFSIValue2554 = new MonetaryItemType();
                                    financialAssetsReportedForFSIValue2554.setContextRef(DBS01OFC_Layout1FinancialAssetsReportedForFSIContext2550);
                                    
                                    financialAssetsReportedForFSIValue2554.setUnitRef(INR2549);
                                    financialAssetsReportedForFSIValue2554.setDecimals("INF");
                                    financialAssetsReportedForFSIValue2554.setValue(new BigDecimal(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2551));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialAssetsReportedForFSIElement2555 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialAssetsReportedForFSI(financialAssetsReportedForFSIValue2554);
                                    bodyElements.add(financialAssetsReportedForFSIElement2555);
                                
                            }
                        
                            
                                
                                Unit INR2556 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2556 = createUnitIfNotExist(INR2556, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2560 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2560.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2560.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2558 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2560);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2560, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2558 = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559 == null ? "" : zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getValue();
                                    if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559 != null ) {
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2559.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2557 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2560 );
                                        
                                
                                if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2558 != null && !"".equals(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2558)) {
                                    
                                    addContext(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2557, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue2561 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue2561.setContextRef(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2557);
                                    
                                    currencyAndDepositsReportedForFSIValue2561.setUnitRef(INR2556);
                                    currencyAndDepositsReportedForFSIValue2561.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue2561.setValue(new BigDecimal(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2558));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement2562 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue2561);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement2562);
                                
                            }
                        
                            
                                
                                Unit INR2563 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2563 = createUnitIfNotExist(INR2563, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LoansReportedForFSIMap2567 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2567.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2567.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LoansReportedForFSIValue2565 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2567);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2567, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LoansReportedForFSIValue2565 = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566 == null ? "" : zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getValue();
                                    if(zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566 != null ) {
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2566.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LoansReportedForFSIContext2564 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LoansReportedForFSIMap2567 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LoansReportedForFSIValue2565 != null && !"".equals(zeroDBS01OFC_Layout1LoansReportedForFSIValue2565)) {
                                    
                                    addContext(DBS01OFC_Layout1LoansReportedForFSIContext2564, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue2568 = new MonetaryItemType();
                                    loansReportedForFSIValue2568.setContextRef(DBS01OFC_Layout1LoansReportedForFSIContext2564);
                                    
                                    loansReportedForFSIValue2568.setUnitRef(INR2563);
                                    loansReportedForFSIValue2568.setDecimals("INF");
                                    loansReportedForFSIValue2568.setValue(new BigDecimal(zeroDBS01OFC_Layout1LoansReportedForFSIValue2565));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement2569 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue2568);
                                    bodyElements.add(loansReportedForFSIElement2569);
                                
                            }
                        
                            
                                
                                Unit INR2570 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2570 = createUnitIfNotExist(INR2570, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2574 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2574.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2574.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2572 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2574);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2574, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2572 = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573 == null ? "" : zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getValue();
                                    if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573 != null ) {
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2573.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2571 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2574 );
                                        
                                
                                if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2572 != null && !"".equals(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2572)) {
                                    
                                    addContext(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2571, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue2575 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue2575.setContextRef(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2571);
                                    
                                    debtSecuritiesReportedForFSIValue2575.setUnitRef(INR2570);
                                    debtSecuritiesReportedForFSIValue2575.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue2575.setValue(new BigDecimal(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2572));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement2576 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue2575);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement2576);
                                
                            }
                        
                            
                                
                                Unit INR2577 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2577 = createUnitIfNotExist(INR2577, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2581 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2581.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2581.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2579 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2581);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2581, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2579 = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580 == null ? "" : zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getValue();
                                    if(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580 != null ) {
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2580.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1SharesAndOtherEquityReportedForFSIContext2578 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2581 );
                                        
                                
                                if(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2579 != null && !"".equals(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2579)) {
                                    
                                    addContext(DBS01OFC_Layout1SharesAndOtherEquityReportedForFSIContext2578, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityReportedForFSIValue2582 = new MonetaryItemType();
                                    sharesAndOtherEquityReportedForFSIValue2582.setContextRef(DBS01OFC_Layout1SharesAndOtherEquityReportedForFSIContext2578);
                                    
                                    sharesAndOtherEquityReportedForFSIValue2582.setUnitRef(INR2577);
                                    sharesAndOtherEquityReportedForFSIValue2582.setDecimals("INF");
                                    sharesAndOtherEquityReportedForFSIValue2582.setValue(new BigDecimal(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2579));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityReportedForFSIElement2583 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityReportedForFSI(sharesAndOtherEquityReportedForFSIValue2582);
                                    bodyElements.add(sharesAndOtherEquityReportedForFSIElement2583);
                                
                            }
                        
                            
                                
                                Unit INR2584 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2584 = createUnitIfNotExist(INR2584, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2588 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2588.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2588.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2586 = DBS01ReportUtil.retrieveValueForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2588);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2588, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2586 = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587 == null ? "" : zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getValue();
                                    if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587 != null ) {
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2587.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2585 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2588 );
                                        
                                
                                if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2586 != null && !"".equals(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2586)) {
                                    
                                    addContext(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2585, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType insuranceTechnicalReservesReportedForFSIValue2589 = new MonetaryItemType();
                                    insuranceTechnicalReservesReportedForFSIValue2589.setContextRef(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2585);
                                    
                                    insuranceTechnicalReservesReportedForFSIValue2589.setUnitRef(INR2584);
                                    insuranceTechnicalReservesReportedForFSIValue2589.setDecimals("INF");
                                    insuranceTechnicalReservesReportedForFSIValue2589.setValue(new BigDecimal(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2586));
                                    
                                    
                                    JAXBElement<MonetaryItemType> insuranceTechnicalReservesReportedForFSIElement2590 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInsuranceTechnicalReservesReportedForFSI(insuranceTechnicalReservesReportedForFSIValue2589);
                                    bodyElements.add(insuranceTechnicalReservesReportedForFSIElement2590);
                                
                            }
                        
                            
                                
                                Unit INR2591 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2591 = createUnitIfNotExist(INR2591, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2595 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2595.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2595.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2593 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2595);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2595, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2593 = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594 == null ? "" : zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getValue();
                                    if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594 != null ) {
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2594.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2592 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2595 );
                                        
                                
                                if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2593 != null && !"".equals(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2593)) {
                                    
                                    addContext(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2592, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesReportedForFSIValue2596 = new MonetaryItemType();
                                    financialDerivativesReportedForFSIValue2596.setContextRef(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2592);
                                    
                                    financialDerivativesReportedForFSIValue2596.setUnitRef(INR2591);
                                    financialDerivativesReportedForFSIValue2596.setDecimals("INF");
                                    financialDerivativesReportedForFSIValue2596.setValue(new BigDecimal(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2593));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesReportedForFSIElement2597 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesReportedForFSI(financialDerivativesReportedForFSIValue2596);
                                    bodyElements.add(financialDerivativesReportedForFSIElement2597);
                                
                            }
                        
                            
                                
                                Unit INR2598 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2598 = createUnitIfNotExist(INR2598, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2602 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2602.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2602.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2600 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2602);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2602, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2600 = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601 == null ? "" : zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getValue();
                                    if(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601 != null ) {
                                        if(!zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2601.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1OtherAssetsReportedForFSIContext2599 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2602 );
                                        
                                
                                if(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2600 != null && !"".equals(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2600)) {
                                    
                                    addContext(DBS01OFC_Layout1OtherAssetsReportedForFSIContext2599, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherAssetsReportedForFSIValue2603 = new MonetaryItemType();
                                    otherAssetsReportedForFSIValue2603.setContextRef(DBS01OFC_Layout1OtherAssetsReportedForFSIContext2599);
                                    
                                    otherAssetsReportedForFSIValue2603.setUnitRef(INR2598);
                                    otherAssetsReportedForFSIValue2603.setDecimals("INF");
                                    otherAssetsReportedForFSIValue2603.setValue(new BigDecimal(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2600));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherAssetsReportedForFSIElement2604 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherAssetsReportedForFSI(otherAssetsReportedForFSIValue2603);
                                    bodyElements.add(otherAssetsReportedForFSIElement2604);
                                
                            }
                        
                            
                                
                                Unit INR2605 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2605 = createUnitIfNotExist(INR2605, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2609 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2609.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2609.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2607 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2609);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2609, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2607 = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608 == null ? "" : zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getValue();
                                    if(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608 != null ) {
                                        if(!zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2608.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LiabilitiesReportedForFSIContext2606 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2609 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2607 != null && !"".equals(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2607)) {
                                    
                                    addContext(DBS01OFC_Layout1LiabilitiesReportedForFSIContext2606, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liabilitiesReportedForFSIValue2610 = new MonetaryItemType();
                                    liabilitiesReportedForFSIValue2610.setContextRef(DBS01OFC_Layout1LiabilitiesReportedForFSIContext2606);
                                    
                                    liabilitiesReportedForFSIValue2610.setUnitRef(INR2605);
                                    liabilitiesReportedForFSIValue2610.setDecimals("INF");
                                    liabilitiesReportedForFSIValue2610.setValue(new BigDecimal(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2607));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liabilitiesReportedForFSIElement2611 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiabilitiesReportedForFSI(liabilitiesReportedForFSIValue2610);
                                    bodyElements.add(liabilitiesReportedForFSIElement2611);
                                
                            }
                        
                            
                                
                                Unit INR2612 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2612 = createUnitIfNotExist(INR2612, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2616 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2616.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2616.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2614 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2616);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2616, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2614 = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615 == null ? "" : zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getValue();
                                    if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615 != null ) {
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2615.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2613 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2616 );
                                        
                                
                                if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2614 != null && !"".equals(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2614)) {
                                    
                                    addContext(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2613, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue2617 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue2617.setContextRef(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2613);
                                    
                                    currencyAndDepositsReportedForFSIValue2617.setUnitRef(INR2612);
                                    currencyAndDepositsReportedForFSIValue2617.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue2617.setValue(new BigDecimal(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2614));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement2618 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue2617);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement2618);
                                
                            }
                        
                            
                                
                                Unit INR2619 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2619 = createUnitIfNotExist(INR2619, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LoansReportedForFSIMap2623 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2623.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2623.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LoansReportedForFSIValue2621 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2623);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2623, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LoansReportedForFSIValue2621 = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622 == null ? "" : zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getValue();
                                    if(zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622 != null ) {
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2622.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LoansReportedForFSIContext2620 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LoansReportedForFSIMap2623 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LoansReportedForFSIValue2621 != null && !"".equals(zeroDBS01OFC_Layout1LoansReportedForFSIValue2621)) {
                                    
                                    addContext(DBS01OFC_Layout1LoansReportedForFSIContext2620, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue2624 = new MonetaryItemType();
                                    loansReportedForFSIValue2624.setContextRef(DBS01OFC_Layout1LoansReportedForFSIContext2620);
                                    
                                    loansReportedForFSIValue2624.setUnitRef(INR2619);
                                    loansReportedForFSIValue2624.setDecimals("INF");
                                    loansReportedForFSIValue2624.setValue(new BigDecimal(zeroDBS01OFC_Layout1LoansReportedForFSIValue2621));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement2625 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue2624);
                                    bodyElements.add(loansReportedForFSIElement2625);
                                
                            }
                        
                            
                                
                                Unit INR2626 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2626 = createUnitIfNotExist(INR2626, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2630 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2630.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2630.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2628 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2630);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2630, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2628 = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629 == null ? "" : zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getValue();
                                    if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629 != null ) {
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2629.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2627 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2630 );
                                        
                                
                                if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2628 != null && !"".equals(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2628)) {
                                    
                                    addContext(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2627, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue2631 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue2631.setContextRef(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2627);
                                    
                                    debtSecuritiesReportedForFSIValue2631.setUnitRef(INR2626);
                                    debtSecuritiesReportedForFSIValue2631.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue2631.setValue(new BigDecimal(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2628));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement2632 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue2631);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement2632);
                                
                            }
                        
                            
                                
                                Unit INR2633 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2633 = createUnitIfNotExist(INR2633, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2637 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2637.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2637.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2635 = DBS01ReportUtil.retrieveValueForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2637);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2637, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2635 = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636 == null ? "" : zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getValue();
                                    if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636 != null ) {
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2636.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2634 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2637 );
                                        
                                
                                if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2635 != null && !"".equals(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2635)) {
                                    
                                    addContext(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2634, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType insuranceTechnicalReservesReportedForFSIValue2638 = new MonetaryItemType();
                                    insuranceTechnicalReservesReportedForFSIValue2638.setContextRef(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2634);
                                    
                                    insuranceTechnicalReservesReportedForFSIValue2638.setUnitRef(INR2633);
                                    insuranceTechnicalReservesReportedForFSIValue2638.setDecimals("INF");
                                    insuranceTechnicalReservesReportedForFSIValue2638.setValue(new BigDecimal(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2635));
                                    
                                    
                                    JAXBElement<MonetaryItemType> insuranceTechnicalReservesReportedForFSIElement2639 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInsuranceTechnicalReservesReportedForFSI(insuranceTechnicalReservesReportedForFSIValue2638);
                                    bodyElements.add(insuranceTechnicalReservesReportedForFSIElement2639);
                                
                            }
                        
                            
                                
                                Unit INR2640 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2640 = createUnitIfNotExist(INR2640, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2644 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2644.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2644.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2642 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2644);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2644, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2642 = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643 == null ? "" : zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getValue();
                                    if(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643 != null ) {
                                        if(!zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2643.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1OtherLiabilitiesReportedForFSIContext2641 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2644 );
                                        
                                
                                if(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2642 != null && !"".equals(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2642)) {
                                    
                                    addContext(DBS01OFC_Layout1OtherLiabilitiesReportedForFSIContext2641, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherLiabilitiesReportedForFSIValue2645 = new MonetaryItemType();
                                    otherLiabilitiesReportedForFSIValue2645.setContextRef(DBS01OFC_Layout1OtherLiabilitiesReportedForFSIContext2641);
                                    
                                    otherLiabilitiesReportedForFSIValue2645.setUnitRef(INR2640);
                                    otherLiabilitiesReportedForFSIValue2645.setDecimals("INF");
                                    otherLiabilitiesReportedForFSIValue2645.setValue(new BigDecimal(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2642));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherLiabilitiesReportedForFSIElement2646 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherLiabilitiesReportedForFSI(otherLiabilitiesReportedForFSIValue2645);
                                    bodyElements.add(otherLiabilitiesReportedForFSIElement2646);
                                
                            }
                        
                            
                                
                                Unit INR2647 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2647 = createUnitIfNotExist(INR2647, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1DebtReportedForFSIMap2651 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtReportedForFSIMap2651.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtReportedForFSIMap2651.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1DebtReportedForFSIValue2649 = DBS01ReportUtil.retrieveValueForElement(field.getDebtReportedForFSI(), zeroDBS01OFC_Layout1DebtReportedForFSIMap2651);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtReportedForFSI(), zeroDBS01OFC_Layout1DebtReportedForFSIMap2651, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1DebtReportedForFSIValue2649 = zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650 == null ? "" : zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getValue();
                                    if(zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650 != null ) {
                                        if(!zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1DebtReportedForFSIFieldDataValue2650.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1DebtReportedForFSIContext2648 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1DebtReportedForFSIMap2651 );
                                        
                                
                                if(zeroDBS01OFC_Layout1DebtReportedForFSIValue2649 != null && !"".equals(zeroDBS01OFC_Layout1DebtReportedForFSIValue2649)) {
                                    
                                    addContext(DBS01OFC_Layout1DebtReportedForFSIContext2648, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtReportedForFSIValue2652 = new MonetaryItemType();
                                    debtReportedForFSIValue2652.setContextRef(DBS01OFC_Layout1DebtReportedForFSIContext2648);
                                    
                                    debtReportedForFSIValue2652.setUnitRef(INR2647);
                                    debtReportedForFSIValue2652.setDecimals("INF");
                                    debtReportedForFSIValue2652.setValue(new BigDecimal(zeroDBS01OFC_Layout1DebtReportedForFSIValue2649));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtReportedForFSIElement2653 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtReportedForFSI(debtReportedForFSIValue2652);
                                    bodyElements.add(debtReportedForFSIElement2653);
                                
                            }
                        
                            
                                
                                Unit INR2654 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2654 = createUnitIfNotExist(INR2654, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2658 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2658.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2658.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2656 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2658);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2658, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2656 = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657 == null ? "" : zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getValue();
                                    if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657 != null ) {
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2657.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2655 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2658 );
                                        
                                
                                if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2656 != null && !"".equals(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2656)) {
                                    
                                    addContext(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2655, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesReportedForFSIValue2659 = new MonetaryItemType();
                                    financialDerivativesReportedForFSIValue2659.setContextRef(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2655);
                                    
                                    financialDerivativesReportedForFSIValue2659.setUnitRef(INR2654);
                                    financialDerivativesReportedForFSIValue2659.setDecimals("INF");
                                    financialDerivativesReportedForFSIValue2659.setValue(new BigDecimal(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2656));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesReportedForFSIElement2660 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesReportedForFSI(financialDerivativesReportedForFSIValue2659);
                                    bodyElements.add(financialDerivativesReportedForFSIElement2660);
                                
                            }
                        
                            
                                
                                Unit INR2661 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2661 = createUnitIfNotExist(INR2661, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CapitalAndReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIMap2665 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIMap2665.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIMap2665.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIValue2663 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIMap2665);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCapitalAndReservesReportedForFSI(), zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIMap2665, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIValue2663 = zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664 == null ? "" : zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getValue();
                                    if(zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664 != null ) {
                                        if(!zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIFieldDataValue2664.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1CapitalAndReservesReportedForFSIContext2662 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIMap2665 );
                                        
                                
                                if(zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIValue2663 != null && !"".equals(zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIValue2663)) {
                                    
                                    addContext(DBS01OFC_Layout1CapitalAndReservesReportedForFSIContext2662, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType capitalAndReservesReportedForFSIValue2666 = new MonetaryItemType();
                                    capitalAndReservesReportedForFSIValue2666.setContextRef(DBS01OFC_Layout1CapitalAndReservesReportedForFSIContext2662);
                                    
                                    capitalAndReservesReportedForFSIValue2666.setUnitRef(INR2661);
                                    capitalAndReservesReportedForFSIValue2666.setDecimals("INF");
                                    capitalAndReservesReportedForFSIValue2666.setValue(new BigDecimal(zeroDBS01OFC_Layout1CapitalAndReservesReportedForFSIValue2663));
                                    
                                    
                                    JAXBElement<MonetaryItemType> capitalAndReservesReportedForFSIElement2667 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCapitalAndReservesReportedForFSI(capitalAndReservesReportedForFSIValue2666);
                                    bodyElements.add(capitalAndReservesReportedForFSIElement2667);
                                
                            }
                        
                            
                                
                                Unit INR2668 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2668 = createUnitIfNotExist(INR2668, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - BalanceSheetTotalReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIMap2672 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIMap2672.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIValue2670 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIMap2672);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671 = DBS01ReportUtil.retrieveFieldDataForElement(field.getBalanceSheetTotalReportedForFSI(), zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIMap2672, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIValue2670 = zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671 == null ? "" : zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getValue();
                                    if(zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671 != null ) {
                                        if(!zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIFieldDataValue2671.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1BalanceSheetTotalReportedForFSIContext2669 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIMap2672 );
                                        
                                
                                if(zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIValue2670 != null && !"".equals(zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIValue2670)) {
                                    
                                    addContext(DBS01OFC_Layout1BalanceSheetTotalReportedForFSIContext2669, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType balanceSheetTotalReportedForFSIValue2673 = new MonetaryItemType();
                                    balanceSheetTotalReportedForFSIValue2673.setContextRef(DBS01OFC_Layout1BalanceSheetTotalReportedForFSIContext2669);
                                    
                                    balanceSheetTotalReportedForFSIValue2673.setUnitRef(INR2668);
                                    balanceSheetTotalReportedForFSIValue2673.setDecimals("INF");
                                    balanceSheetTotalReportedForFSIValue2673.setValue(new BigDecimal(zeroDBS01OFC_Layout1BalanceSheetTotalReportedForFSIValue2670));
                                    
                                    
                                    JAXBElement<MonetaryItemType> balanceSheetTotalReportedForFSIElement2674 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBalanceSheetTotalReportedForFSI(balanceSheetTotalReportedForFSIValue2673);
                                    bodyElements.add(balanceSheetTotalReportedForFSIElement2674);
                                
                            }
                        
                            
                                
                                Unit INR2675 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2675 = createUnitIfNotExist(INR2675, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation
                            
                                Map zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2679 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2679.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2677 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation(), zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2679);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation(), zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2679, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2677 = zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678 == null ? "" : zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getValue();
                                    if(zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678 != null ) {
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2678.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationContext2676 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2679 );
                                            
                                
                                if(zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2677 != null && !"".equals(zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2677)) {
                                    
                                    addContext(DBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationContext2676, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2680 = new MonetaryItemType();
                                    sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2680.setContextRef(DBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationContext2676);
                                    
                                    sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2680.setUnitRef(INR2675);
                                    sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2680.setDecimals("INF");
                                    sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2680.setValue(new BigDecimal(zeroDBS01OFC_Layout1SharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2677));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationElement2681 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation(sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2680);
                                    bodyElements.add(sharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationElement2681);
                                
                            }
                        
                            
                                
                                Unit INR2682 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2682 = createUnitIfNotExist(INR2682, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2686 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2686.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2684 = DBS01ReportUtil.retrieveValueForElement(field.getInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2686);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2686, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2684 = zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685 == null ? "" : zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getValue();
                                    if(zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685 != null ) {
                                        if(!zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2685.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2683 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2686 );
                                        
                                
                                if(zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2684 != null && !"".equals(zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2684)) {
                                    
                                    addContext(DBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2683, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2687 = new MonetaryItemType();
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2687.setContextRef(DBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2683);
                                    
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2687.setUnitRef(INR2682);
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2687.setDecimals("INF");
                                    investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2687.setValue(new BigDecimal(zeroDBS01OFC_Layout1InvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2684));
                                    
                                    
                                    JAXBElement<MonetaryItemType> investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement2688 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2687);
                                    bodyElements.add(investmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement2688);
                                
                            }
                        
                            
                                
                                Unit INR2689 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2689 = createUnitIfNotExist(INR2689, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InvestmentsInOtherOtherFinancialCorporationsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2693 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2693.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2691 = DBS01ReportUtil.retrieveValueForElement(field.getInvestmentsInOtherOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2693);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInvestmentsInOtherOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2693, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2691 = zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692 == null ? "" : zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getValue();
                                    if(zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692 != null ) {
                                        if(!zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2692.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIContext2690 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2693 );
                                        
                                
                                if(zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2691 != null && !"".equals(zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2691)) {
                                    
                                    addContext(DBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIContext2690, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType investmentsInOtherOtherFinancialCorporationsReportedForFSIValue2694 = new MonetaryItemType();
                                    investmentsInOtherOtherFinancialCorporationsReportedForFSIValue2694.setContextRef(DBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIContext2690);
                                    
                                    investmentsInOtherOtherFinancialCorporationsReportedForFSIValue2694.setUnitRef(INR2689);
                                    investmentsInOtherOtherFinancialCorporationsReportedForFSIValue2694.setDecimals("INF");
                                    investmentsInOtherOtherFinancialCorporationsReportedForFSIValue2694.setValue(new BigDecimal(zeroDBS01OFC_Layout1InvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2691));
                                    
                                    
                                    JAXBElement<MonetaryItemType> investmentsInOtherOtherFinancialCorporationsReportedForFSIElement2695 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInvestmentsInOtherOtherFinancialCorporationsReportedForFSI(investmentsInOtherOtherFinancialCorporationsReportedForFSIValue2694);
                                    bodyElements.add(investmentsInOtherOtherFinancialCorporationsReportedForFSIElement2695);
                                
                            }
                        
                            
                                
                                Unit INR2696 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2696 = createUnitIfNotExist(INR2696, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap2700 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap2700.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2698 = DBS01ReportUtil.retrieveValueForElement(field.getNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI(), zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap2700);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699 = DBS01ReportUtil.retrieveFieldDataForElement(field.getNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI(), zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap2700, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2698 = zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699 == null ? "" : zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getValue();
                                    if(zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699 != null ) {
                                        if(!zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue2699.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIContext2697 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap2700 );
                                        
                                
                                if(zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2698 != null && !"".equals(zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2698)) {
                                    
                                    addContext(DBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIContext2697, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2701 = new MonetaryItemType();
                                    nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2701.setContextRef(DBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIContext2697);
                                    
                                    nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2701.setUnitRef(INR2696);
                                    nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2701.setDecimals("INF");
                                    nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2701.setValue(new BigDecimal(zeroDBS01OFC_Layout1NonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2698));
                                    
                                    
                                    JAXBElement<MonetaryItemType> nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIElement2702 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI(nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2701);
                                    bodyElements.add(nonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIElement2702);
                                
                            }
                        
                            
                                
                                Unit INR2703 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2703 = createUnitIfNotExist(INR2703, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap2707 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap2707.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2705 = DBS01ReportUtil.retrieveValueForElement(field.getAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap2707);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706 = DBS01ReportUtil.retrieveFieldDataForElement(field.getAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap2707, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2705 = zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706 == null ? "" : zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getValue();
                                    if(zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706 != null ) {
                                        if(!zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue2706.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIContext2704 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap2707 );
                                        
                                
                                if(zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2705 != null && !"".equals(zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2705)) {
                                    
                                    addContext(DBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIContext2704, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2708 = new MonetaryItemType();
                                    assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2708.setContextRef(DBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIContext2704);
                                    
                                    assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2708.setUnitRef(INR2703);
                                    assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2708.setDecimals("INF");
                                    assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2708.setValue(new BigDecimal(zeroDBS01OFC_Layout1AssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2705));
                                    
                                    
                                    JAXBElement<MonetaryItemType> assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIElement2709 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI(assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue2708);
                                    bodyElements.add(assetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIElement2709);
                                
                            }
                        
                            
                                
                                Unit INR2710 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2710 = createUnitIfNotExist(INR2710, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2712 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2712 = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713 == null ? "" : zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getValue();
                                    if(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713 != null ) {
                                        if(!zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIFieldDataValue2713.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1FinancialAssetsReportedForFSIContext2711 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIMap2714 );
                                        
                                
                                if(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2712 != null && !"".equals(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2712)) {
                                    
                                    addContext(DBS01OFC_Layout1FinancialAssetsReportedForFSIContext2711, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialAssetsReportedForFSIValue2715 = new MonetaryItemType();
                                    financialAssetsReportedForFSIValue2715.setContextRef(DBS01OFC_Layout1FinancialAssetsReportedForFSIContext2711);
                                    
                                    financialAssetsReportedForFSIValue2715.setUnitRef(INR2710);
                                    financialAssetsReportedForFSIValue2715.setDecimals("INF");
                                    financialAssetsReportedForFSIValue2715.setValue(new BigDecimal(zeroDBS01OFC_Layout1FinancialAssetsReportedForFSIValue2712));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialAssetsReportedForFSIElement2716 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialAssetsReportedForFSI(financialAssetsReportedForFSIValue2715);
                                    bodyElements.add(financialAssetsReportedForFSIElement2716);
                                
                            }
                        
                            
                                
                                Unit INR2717 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2717 = createUnitIfNotExist(INR2717, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2719 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2719 = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720 == null ? "" : zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getValue();
                                    if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720 != null ) {
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2720.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2718 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2721 );
                                        
                                
                                if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2719 != null && !"".equals(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2719)) {
                                    
                                    addContext(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2718, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue2722 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue2722.setContextRef(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2718);
                                    
                                    currencyAndDepositsReportedForFSIValue2722.setUnitRef(INR2717);
                                    currencyAndDepositsReportedForFSIValue2722.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue2722.setValue(new BigDecimal(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2719));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement2723 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue2722);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement2723);
                                
                            }
                        
                            
                                
                                Unit INR2724 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2724 = createUnitIfNotExist(INR2724, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LoansReportedForFSIMap2728 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2728.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2728.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2728.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LoansReportedForFSIValue2726 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2728);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2728, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LoansReportedForFSIValue2726 = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727 == null ? "" : zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getValue();
                                    if(zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727 != null ) {
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2727.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LoansReportedForFSIContext2725 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LoansReportedForFSIMap2728 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LoansReportedForFSIValue2726 != null && !"".equals(zeroDBS01OFC_Layout1LoansReportedForFSIValue2726)) {
                                    
                                    addContext(DBS01OFC_Layout1LoansReportedForFSIContext2725, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue2729 = new MonetaryItemType();
                                    loansReportedForFSIValue2729.setContextRef(DBS01OFC_Layout1LoansReportedForFSIContext2725);
                                    
                                    loansReportedForFSIValue2729.setUnitRef(INR2724);
                                    loansReportedForFSIValue2729.setDecimals("INF");
                                    loansReportedForFSIValue2729.setValue(new BigDecimal(zeroDBS01OFC_Layout1LoansReportedForFSIValue2726));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement2730 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue2729);
                                    bodyElements.add(loansReportedForFSIElement2730);
                                
                            }
                        
                            
                                
                                Unit INR2731 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2731 = createUnitIfNotExist(INR2731, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2733 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2733 = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734 == null ? "" : zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getValue();
                                    if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734 != null ) {
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2734.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2732 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2735 );
                                        
                                
                                if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2733 != null && !"".equals(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2733)) {
                                    
                                    addContext(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2732, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue2736 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue2736.setContextRef(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2732);
                                    
                                    debtSecuritiesReportedForFSIValue2736.setUnitRef(INR2731);
                                    debtSecuritiesReportedForFSIValue2736.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue2736.setValue(new BigDecimal(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2733));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement2737 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue2736);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement2737);
                                
                            }
                        
                            
                                
                                Unit INR2738 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2738 = createUnitIfNotExist(INR2738, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - SharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2740 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741 = DBS01ReportUtil.retrieveFieldDataForElement(field.getSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2740 = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741 == null ? "" : zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getValue();
                                    if(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741 != null ) {
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIFieldDataValue2741.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1SharesAndOtherEquityReportedForFSIContext2739 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIMap2742 );
                                        
                                
                                if(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2740 != null && !"".equals(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2740)) {
                                    
                                    addContext(DBS01OFC_Layout1SharesAndOtherEquityReportedForFSIContext2739, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType sharesAndOtherEquityReportedForFSIValue2743 = new MonetaryItemType();
                                    sharesAndOtherEquityReportedForFSIValue2743.setContextRef(DBS01OFC_Layout1SharesAndOtherEquityReportedForFSIContext2739);
                                    
                                    sharesAndOtherEquityReportedForFSIValue2743.setUnitRef(INR2738);
                                    sharesAndOtherEquityReportedForFSIValue2743.setDecimals("INF");
                                    sharesAndOtherEquityReportedForFSIValue2743.setValue(new BigDecimal(zeroDBS01OFC_Layout1SharesAndOtherEquityReportedForFSIValue2740));
                                    
                                    
                                    JAXBElement<MonetaryItemType> sharesAndOtherEquityReportedForFSIElement2744 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createSharesAndOtherEquityReportedForFSI(sharesAndOtherEquityReportedForFSIValue2743);
                                    bodyElements.add(sharesAndOtherEquityReportedForFSIElement2744);
                                
                            }
                        
                            
                                
                                Unit INR2745 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2745 = createUnitIfNotExist(INR2745, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2747 = DBS01ReportUtil.retrieveValueForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2747 = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748 == null ? "" : zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getValue();
                                    if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748 != null ) {
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2748.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2746 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2749 );
                                        
                                
                                if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2747 != null && !"".equals(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2747)) {
                                    
                                    addContext(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2746, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType insuranceTechnicalReservesReportedForFSIValue2750 = new MonetaryItemType();
                                    insuranceTechnicalReservesReportedForFSIValue2750.setContextRef(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2746);
                                    
                                    insuranceTechnicalReservesReportedForFSIValue2750.setUnitRef(INR2745);
                                    insuranceTechnicalReservesReportedForFSIValue2750.setDecimals("INF");
                                    insuranceTechnicalReservesReportedForFSIValue2750.setValue(new BigDecimal(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2747));
                                    
                                    
                                    JAXBElement<MonetaryItemType> insuranceTechnicalReservesReportedForFSIElement2751 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInsuranceTechnicalReservesReportedForFSI(insuranceTechnicalReservesReportedForFSIValue2750);
                                    bodyElements.add(insuranceTechnicalReservesReportedForFSIElement2751);
                                
                            }
                        
                            
                                
                                Unit INR2752 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2752 = createUnitIfNotExist(INR2752, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2754 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2754 = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755 == null ? "" : zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getValue();
                                    if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755 != null ) {
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2755.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2753 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2756 );
                                        
                                
                                if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2754 != null && !"".equals(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2754)) {
                                    
                                    addContext(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2753, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesReportedForFSIValue2757 = new MonetaryItemType();
                                    financialDerivativesReportedForFSIValue2757.setContextRef(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2753);
                                    
                                    financialDerivativesReportedForFSIValue2757.setUnitRef(INR2752);
                                    financialDerivativesReportedForFSIValue2757.setDecimals("INF");
                                    financialDerivativesReportedForFSIValue2757.setValue(new BigDecimal(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2754));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesReportedForFSIElement2758 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesReportedForFSI(financialDerivativesReportedForFSIValue2757);
                                    bodyElements.add(financialDerivativesReportedForFSIElement2758);
                                
                            }
                        
                            
                                
                                Unit INR2759 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2759 = createUnitIfNotExist(INR2759, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2761 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2761 = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762 == null ? "" : zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getValue();
                                    if(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762 != null ) {
                                        if(!zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1OtherAssetsReportedForFSIFieldDataValue2762.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1OtherAssetsReportedForFSIContext2760 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1OtherAssetsReportedForFSIMap2763 );
                                        
                                
                                if(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2761 != null && !"".equals(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2761)) {
                                    
                                    addContext(DBS01OFC_Layout1OtherAssetsReportedForFSIContext2760, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherAssetsReportedForFSIValue2764 = new MonetaryItemType();
                                    otherAssetsReportedForFSIValue2764.setContextRef(DBS01OFC_Layout1OtherAssetsReportedForFSIContext2760);
                                    
                                    otherAssetsReportedForFSIValue2764.setUnitRef(INR2759);
                                    otherAssetsReportedForFSIValue2764.setDecimals("INF");
                                    otherAssetsReportedForFSIValue2764.setValue(new BigDecimal(zeroDBS01OFC_Layout1OtherAssetsReportedForFSIValue2761));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherAssetsReportedForFSIElement2765 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherAssetsReportedForFSI(otherAssetsReportedForFSIValue2764);
                                    bodyElements.add(otherAssetsReportedForFSIElement2765);
                                
                            }
                        
                            
                                
                                Unit INR2766 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2766 = createUnitIfNotExist(INR2766, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2768 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2768 = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769 == null ? "" : zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getValue();
                                    if(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769 != null ) {
                                        if(!zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LiabilitiesReportedForFSIFieldDataValue2769.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LiabilitiesReportedForFSIContext2767 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LiabilitiesReportedForFSIMap2770 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2768 != null && !"".equals(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2768)) {
                                    
                                    addContext(DBS01OFC_Layout1LiabilitiesReportedForFSIContext2767, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liabilitiesReportedForFSIValue2771 = new MonetaryItemType();
                                    liabilitiesReportedForFSIValue2771.setContextRef(DBS01OFC_Layout1LiabilitiesReportedForFSIContext2767);
                                    
                                    liabilitiesReportedForFSIValue2771.setUnitRef(INR2766);
                                    liabilitiesReportedForFSIValue2771.setDecimals("INF");
                                    liabilitiesReportedForFSIValue2771.setValue(new BigDecimal(zeroDBS01OFC_Layout1LiabilitiesReportedForFSIValue2768));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liabilitiesReportedForFSIElement2772 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiabilitiesReportedForFSI(liabilitiesReportedForFSIValue2771);
                                    bodyElements.add(liabilitiesReportedForFSIElement2772);
                                
                            }
                        
                            
                                
                                Unit INR2773 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2773 = createUnitIfNotExist(INR2773, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - CurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2775 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776 = DBS01ReportUtil.retrieveFieldDataForElement(field.getCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2775 = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776 == null ? "" : zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getValue();
                                    if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776 != null ) {
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIFieldDataValue2776.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2774 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIMap2777 );
                                        
                                
                                if(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2775 != null && !"".equals(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2775)) {
                                    
                                    addContext(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2774, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType currencyAndDepositsReportedForFSIValue2778 = new MonetaryItemType();
                                    currencyAndDepositsReportedForFSIValue2778.setContextRef(DBS01OFC_Layout1CurrencyAndDepositsReportedForFSIContext2774);
                                    
                                    currencyAndDepositsReportedForFSIValue2778.setUnitRef(INR2773);
                                    currencyAndDepositsReportedForFSIValue2778.setDecimals("INF");
                                    currencyAndDepositsReportedForFSIValue2778.setValue(new BigDecimal(zeroDBS01OFC_Layout1CurrencyAndDepositsReportedForFSIValue2775));
                                    
                                    
                                    JAXBElement<MonetaryItemType> currencyAndDepositsReportedForFSIElement2779 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createCurrencyAndDepositsReportedForFSI(currencyAndDepositsReportedForFSIValue2778);
                                    bodyElements.add(currencyAndDepositsReportedForFSIElement2779);
                                
                            }
                        
                            
                                
                                Unit INR2780 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2780 = createUnitIfNotExist(INR2780, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LoansReportedForFSIMap2784 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2784.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2784.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1LoansReportedForFSIMap2784.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LoansReportedForFSIValue2782 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2784);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLoansReportedForFSI(), zeroDBS01OFC_Layout1LoansReportedForFSIMap2784, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LoansReportedForFSIValue2782 = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783 == null ? "" : zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getValue();
                                    if(zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783 != null ) {
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LoansReportedForFSIFieldDataValue2783.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LoansReportedForFSIContext2781 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LoansReportedForFSIMap2784 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LoansReportedForFSIValue2782 != null && !"".equals(zeroDBS01OFC_Layout1LoansReportedForFSIValue2782)) {
                                    
                                    addContext(DBS01OFC_Layout1LoansReportedForFSIContext2781, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType loansReportedForFSIValue2785 = new MonetaryItemType();
                                    loansReportedForFSIValue2785.setContextRef(DBS01OFC_Layout1LoansReportedForFSIContext2781);
                                    
                                    loansReportedForFSIValue2785.setUnitRef(INR2780);
                                    loansReportedForFSIValue2785.setDecimals("INF");
                                    loansReportedForFSIValue2785.setValue(new BigDecimal(zeroDBS01OFC_Layout1LoansReportedForFSIValue2782));
                                    
                                    
                                    JAXBElement<MonetaryItemType> loansReportedForFSIElement2786 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLoansReportedForFSI(loansReportedForFSIValue2785);
                                    bodyElements.add(loansReportedForFSIElement2786);
                                
                            }
                        
                            
                                
                                Unit INR2787 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2787 = createUnitIfNotExist(INR2787, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - DebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2789 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790 = DBS01ReportUtil.retrieveFieldDataForElement(field.getDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2789 = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790 == null ? "" : zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getValue();
                                    if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790 != null ) {
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIFieldDataValue2790.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2788 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIMap2791 );
                                        
                                
                                if(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2789 != null && !"".equals(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2789)) {
                                    
                                    addContext(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2788, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType debtSecuritiesReportedForFSIValue2792 = new MonetaryItemType();
                                    debtSecuritiesReportedForFSIValue2792.setContextRef(DBS01OFC_Layout1DebtSecuritiesReportedForFSIContext2788);
                                    
                                    debtSecuritiesReportedForFSIValue2792.setUnitRef(INR2787);
                                    debtSecuritiesReportedForFSIValue2792.setDecimals("INF");
                                    debtSecuritiesReportedForFSIValue2792.setValue(new BigDecimal(zeroDBS01OFC_Layout1DebtSecuritiesReportedForFSIValue2789));
                                    
                                    
                                    JAXBElement<MonetaryItemType> debtSecuritiesReportedForFSIElement2793 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createDebtSecuritiesReportedForFSI(debtSecuritiesReportedForFSIValue2792);
                                    bodyElements.add(debtSecuritiesReportedForFSIElement2793);
                                
                            }
                        
                            
                                
                                Unit INR2794 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2794 = createUnitIfNotExist(INR2794, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - InsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2796 = DBS01ReportUtil.retrieveValueForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797 = DBS01ReportUtil.retrieveFieldDataForElement(field.getInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2796 = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797 == null ? "" : zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getValue();
                                    if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797 != null ) {
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIFieldDataValue2797.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2795 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIMap2798 );
                                        
                                
                                if(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2796 != null && !"".equals(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2796)) {
                                    
                                    addContext(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2795, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType insuranceTechnicalReservesReportedForFSIValue2799 = new MonetaryItemType();
                                    insuranceTechnicalReservesReportedForFSIValue2799.setContextRef(DBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIContext2795);
                                    
                                    insuranceTechnicalReservesReportedForFSIValue2799.setUnitRef(INR2794);
                                    insuranceTechnicalReservesReportedForFSIValue2799.setDecimals("INF");
                                    insuranceTechnicalReservesReportedForFSIValue2799.setValue(new BigDecimal(zeroDBS01OFC_Layout1InsuranceTechnicalReservesReportedForFSIValue2796));
                                    
                                    
                                    JAXBElement<MonetaryItemType> insuranceTechnicalReservesReportedForFSIElement2800 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInsuranceTechnicalReservesReportedForFSI(insuranceTechnicalReservesReportedForFSIValue2799);
                                    bodyElements.add(insuranceTechnicalReservesReportedForFSIElement2800);
                                
                            }
                        
                            
                                
                                Unit INR2801 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2801 = createUnitIfNotExist(INR2801, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - FinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2803 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804 = DBS01ReportUtil.retrieveFieldDataForElement(field.getFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2803 = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804 == null ? "" : zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getValue();
                                    if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804 != null ) {
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIFieldDataValue2804.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2802 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIMap2805 );
                                        
                                
                                if(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2803 != null && !"".equals(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2803)) {
                                    
                                    addContext(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2802, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType financialDerivativesReportedForFSIValue2806 = new MonetaryItemType();
                                    financialDerivativesReportedForFSIValue2806.setContextRef(DBS01OFC_Layout1FinancialDerivativesReportedForFSIContext2802);
                                    
                                    financialDerivativesReportedForFSIValue2806.setUnitRef(INR2801);
                                    financialDerivativesReportedForFSIValue2806.setDecimals("INF");
                                    financialDerivativesReportedForFSIValue2806.setValue(new BigDecimal(zeroDBS01OFC_Layout1FinancialDerivativesReportedForFSIValue2803));
                                    
                                    
                                    JAXBElement<MonetaryItemType> financialDerivativesReportedForFSIElement2807 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createFinancialDerivativesReportedForFSI(financialDerivativesReportedForFSIValue2806);
                                    bodyElements.add(financialDerivativesReportedForFSIElement2807);
                                
                            }
                        
                            
                                
                                Unit INR2808 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2808 = createUnitIfNotExist(INR2808, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - OtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2810 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811 = DBS01ReportUtil.retrieveFieldDataForElement(field.getOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2810 = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811 == null ? "" : zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getValue();
                                    if(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811 != null ) {
                                        if(!zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIFieldDataValue2811.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1OtherLiabilitiesReportedForFSIContext2809 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIMap2812 );
                                        
                                
                                if(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2810 != null && !"".equals(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2810)) {
                                    
                                    addContext(DBS01OFC_Layout1OtherLiabilitiesReportedForFSIContext2809, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType otherLiabilitiesReportedForFSIValue2813 = new MonetaryItemType();
                                    otherLiabilitiesReportedForFSIValue2813.setContextRef(DBS01OFC_Layout1OtherLiabilitiesReportedForFSIContext2809);
                                    
                                    otherLiabilitiesReportedForFSIValue2813.setUnitRef(INR2808);
                                    otherLiabilitiesReportedForFSIValue2813.setDecimals("INF");
                                    otherLiabilitiesReportedForFSIValue2813.setValue(new BigDecimal(zeroDBS01OFC_Layout1OtherLiabilitiesReportedForFSIValue2810));
                                    
                                    
                                    JAXBElement<MonetaryItemType> otherLiabilitiesReportedForFSIElement2814 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createOtherLiabilitiesReportedForFSI(otherLiabilitiesReportedForFSIValue2813);
                                    bodyElements.add(otherLiabilitiesReportedForFSIElement2814);
                                
                            }
                        
                            
                                
                                Unit INR2815 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2815 = createUnitIfNotExist(INR2815, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiquidAssetsCoreReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIMap2819 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIMap2819.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIValue2817 = DBS01ReportUtil.retrieveValueForElement(field.getLiquidAssetsCoreReportedForFSI(), zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIMap2819);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiquidAssetsCoreReportedForFSI(), zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIMap2819, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIValue2817 = zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818 == null ? "" : zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getValue();
                                    if(zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818 != null ) {
                                        if(!zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIFieldDataValue2818.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LiquidAssetsCoreReportedForFSIContext2816 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIMap2819 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIValue2817 != null && !"".equals(zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIValue2817)) {
                                    
                                    addContext(DBS01OFC_Layout1LiquidAssetsCoreReportedForFSIContext2816, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liquidAssetsCoreReportedForFSIValue2820 = new MonetaryItemType();
                                    liquidAssetsCoreReportedForFSIValue2820.setContextRef(DBS01OFC_Layout1LiquidAssetsCoreReportedForFSIContext2816);
                                    
                                    liquidAssetsCoreReportedForFSIValue2820.setUnitRef(INR2815);
                                    liquidAssetsCoreReportedForFSIValue2820.setDecimals("INF");
                                    liquidAssetsCoreReportedForFSIValue2820.setValue(new BigDecimal(zeroDBS01OFC_Layout1LiquidAssetsCoreReportedForFSIValue2817));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liquidAssetsCoreReportedForFSIElement2821 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiquidAssetsCoreReportedForFSI(liquidAssetsCoreReportedForFSIValue2820);
                                    bodyElements.add(liquidAssetsCoreReportedForFSIElement2821);
                                
                            }
                        
                            
                                
                                Unit INR2822 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2822 = createUnitIfNotExist(INR2822, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - LiquidAssetsBroadMeasureReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIMap2826 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIMap2826.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIValue2824 = DBS01ReportUtil.retrieveValueForElement(field.getLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIMap2826);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825 = DBS01ReportUtil.retrieveFieldDataForElement(field.getLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIMap2826, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIValue2824 = zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825 == null ? "" : zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getValue();
                                    if(zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825 != null ) {
                                        if(!zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIFieldDataValue2825.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIContext2823 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIMap2826 );
                                        
                                
                                if(zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIValue2824 != null && !"".equals(zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIValue2824)) {
                                    
                                    addContext(DBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIContext2823, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType liquidAssetsBroadMeasureReportedForFSIValue2827 = new MonetaryItemType();
                                    liquidAssetsBroadMeasureReportedForFSIValue2827.setContextRef(DBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIContext2823);
                                    
                                    liquidAssetsBroadMeasureReportedForFSIValue2827.setUnitRef(INR2822);
                                    liquidAssetsBroadMeasureReportedForFSIValue2827.setDecimals("INF");
                                    liquidAssetsBroadMeasureReportedForFSIValue2827.setValue(new BigDecimal(zeroDBS01OFC_Layout1LiquidAssetsBroadMeasureReportedForFSIValue2824));
                                    
                                    
                                    JAXBElement<MonetaryItemType> liquidAssetsBroadMeasureReportedForFSIElement2828 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createLiquidAssetsBroadMeasureReportedForFSI(liquidAssetsBroadMeasureReportedForFSIValue2827);
                                    bodyElements.add(liquidAssetsBroadMeasureReportedForFSIElement2828);
                                
                            }
                        
                            
                                
                                Unit INR2829 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2829 = createUnitIfNotExist(INR2829, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ShortTermLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIMap2833 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIMap2833.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIValue2831 = DBS01ReportUtil.retrieveValueForElement(field.getShortTermLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIMap2833);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832 = DBS01ReportUtil.retrieveFieldDataForElement(field.getShortTermLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIMap2833, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIValue2831 = zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832 == null ? "" : zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getValue();
                                    if(zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832 != null ) {
                                        if(!zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIFieldDataValue2832.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIContext2830 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIMap2833 );
                                        
                                
                                if(zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIValue2831 != null && !"".equals(zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIValue2831)) {
                                    
                                    addContext(DBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIContext2830, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType shortTermLiabilitiesReportedForFSIValue2834 = new MonetaryItemType();
                                    shortTermLiabilitiesReportedForFSIValue2834.setContextRef(DBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIContext2830);
                                    
                                    shortTermLiabilitiesReportedForFSIValue2834.setUnitRef(INR2829);
                                    shortTermLiabilitiesReportedForFSIValue2834.setDecimals("INF");
                                    shortTermLiabilitiesReportedForFSIValue2834.setValue(new BigDecimal(zeroDBS01OFC_Layout1ShortTermLiabilitiesReportedForFSIValue2831));
                                    
                                    
                                    JAXBElement<MonetaryItemType> shortTermLiabilitiesReportedForFSIElement2835 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createShortTermLiabilitiesReportedForFSI(shortTermLiabilitiesReportedForFSIValue2834);
                                    bodyElements.add(shortTermLiabilitiesReportedForFSIElement2835);
                                
                            }
                        
                            
                            Unit pure2836 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2836 = createUnitIfNotExist(pure2836, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIMap2840 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIMap2840.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIMap2840.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIValue2838 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIMap2840);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIMap2840, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIValue2838 = zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839 == null ? "" : zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIFieldDataValue2839.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForAssetsReportedForFSIContext2837 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIMap2840 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIValue2838 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIValue2838)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForAssetsReportedForFSIContext2837, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForAssetsReportedForFSIValue2841 = new RemarkForFSI();
                                    remarkForAssetsReportedForFSIValue2841.setContextRef(DBS01OFC_Layout1RemarkForAssetsReportedForFSIContext2837);
                                    
                                    remarkForAssetsReportedForFSIValue2841.setValue(zeroDBS01OFC_Layout1RemarkForAssetsReportedForFSIValue2838);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForAssetsReportedForFSIElement2842 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForAssetsReportedForFSI(remarkForAssetsReportedForFSIValue2841);
                                    bodyElements.add(remarkForAssetsReportedForFSIElement2842);
                                
                            }
                        
                            
                            Unit pure2843 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2843 = createUnitIfNotExist(pure2843, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNonfinancialAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIMap2847 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIMap2847.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIMap2847.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIValue2845 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIMap2847);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIMap2847, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIValue2845 = zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846 == null ? "" : zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIFieldDataValue2846.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIContext2844 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIMap2847 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIValue2845 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIValue2845)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIContext2844, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNonfinancialAssetsReportedForFSIValue2848 = new RemarkForFSI();
                                    remarkForNonfinancialAssetsReportedForFSIValue2848.setContextRef(DBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIContext2844);
                                    
                                    remarkForNonfinancialAssetsReportedForFSIValue2848.setValue(zeroDBS01OFC_Layout1RemarkForNonfinancialAssetsReportedForFSIValue2845);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNonfinancialAssetsReportedForFSIElement2849 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNonfinancialAssetsReportedForFSI(remarkForNonfinancialAssetsReportedForFSIValue2848);
                                    bodyElements.add(remarkForNonfinancialAssetsReportedForFSIElement2849);
                                
                            }
                        
                            
                            Unit pure2850 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2850 = createUnitIfNotExist(pure2850, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap2854 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap2854.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap2854.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue2852 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap2854);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap2854, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue2852 = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853 == null ? "" : zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue2853.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIContext2851 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap2854 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue2852 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue2852)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIContext2851, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialAssetsReportedForFSIValue2855 = new RemarkForFSI();
                                    remarkForFinancialAssetsReportedForFSIValue2855.setContextRef(DBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIContext2851);
                                    
                                    remarkForFinancialAssetsReportedForFSIValue2855.setValue(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue2852);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialAssetsReportedForFSIElement2856 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialAssetsReportedForFSI(remarkForFinancialAssetsReportedForFSIValue2855);
                                    bodyElements.add(remarkForFinancialAssetsReportedForFSIElement2856);
                                
                            }
                        
                            
                            Unit pure2857 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2857 = createUnitIfNotExist(pure2857, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2861 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2861.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2861.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2859 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2861);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2861, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2859 = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860 == null ? "" : zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2860.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext2858 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2861 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2859 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2859)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext2858, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositsReportedForFSIValue2862 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositsReportedForFSIValue2862.setContextRef(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext2858);
                                    
                                    remarkForCurrencyAndDepositsReportedForFSIValue2862.setValue(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2859);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositsReportedForFSIElement2863 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositsReportedForFSI(remarkForCurrencyAndDepositsReportedForFSIValue2862);
                                    bodyElements.add(remarkForCurrencyAndDepositsReportedForFSIElement2863);
                                
                            }
                        
                            
                            Unit pure2864 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2864 = createUnitIfNotExist(pure2864, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2868 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2868.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2868.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2866 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2868);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2868, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2866 = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867 == null ? "" : zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2867.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLoansReportedForFSIContext2865 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2868 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2866 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2866)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext2865, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2869 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2869.setContextRef(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext2865);
                                    
                                    remarkForLoansReportedForFSIValue2869.setValue(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2866);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2870 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2869);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2870);
                                
                            }
                        
                            
                            Unit pure2871 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2871 = createUnitIfNotExist(pure2871, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2875 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2875.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2875.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2873 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2875);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2875, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2873 = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874 == null ? "" : zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2874.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext2872 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2875 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2873 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2873)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext2872, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesReportedForFSIValue2876 = new RemarkForFSI();
                                    remarkForDebtSecuritiesReportedForFSIValue2876.setContextRef(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext2872);
                                    
                                    remarkForDebtSecuritiesReportedForFSIValue2876.setValue(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2873);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesReportedForFSIElement2877 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesReportedForFSI(remarkForDebtSecuritiesReportedForFSIValue2876);
                                    bodyElements.add(remarkForDebtSecuritiesReportedForFSIElement2877);
                                
                            }
                        
                            
                            Unit pure2878 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2878 = createUnitIfNotExist(pure2878, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap2882 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap2882.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap2882.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue2880 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap2882);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap2882, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue2880 = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881 == null ? "" : zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue2881.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIContext2879 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap2882 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue2880 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue2880)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIContext2879, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesAndOtherEquityReportedForFSIValue2883 = new RemarkForFSI();
                                    remarkForSharesAndOtherEquityReportedForFSIValue2883.setContextRef(DBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIContext2879);
                                    
                                    remarkForSharesAndOtherEquityReportedForFSIValue2883.setValue(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue2880);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesAndOtherEquityReportedForFSIElement2884 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesAndOtherEquityReportedForFSI(remarkForSharesAndOtherEquityReportedForFSIValue2883);
                                    bodyElements.add(remarkForSharesAndOtherEquityReportedForFSIElement2884);
                                
                            }
                        
                            
                            Unit pure2885 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2885 = createUnitIfNotExist(pure2885, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2889 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2889.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2889.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2887 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2889);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2889, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2887 = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888 == null ? "" : zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2888.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext2886 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2889 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2887 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2887)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext2886, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInsuranceTechnicalReservesReportedForFSIValue2890 = new RemarkForFSI();
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue2890.setContextRef(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext2886);
                                    
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue2890.setValue(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2887);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInsuranceTechnicalReservesReportedForFSIElement2891 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInsuranceTechnicalReservesReportedForFSI(remarkForInsuranceTechnicalReservesReportedForFSIValue2890);
                                    bodyElements.add(remarkForInsuranceTechnicalReservesReportedForFSIElement2891);
                                
                            }
                        
                            
                            Unit pure2892 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2892 = createUnitIfNotExist(pure2892, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2896 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2896.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2896.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2894 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2896);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2896, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2894 = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895 == null ? "" : zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2895.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext2893 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2896 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2894 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2894)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext2893, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesReportedForFSIValue2897 = new RemarkForFSI();
                                    remarkForFinancialDerivativesReportedForFSIValue2897.setContextRef(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext2893);
                                    
                                    remarkForFinancialDerivativesReportedForFSIValue2897.setValue(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2894);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesReportedForFSIElement2898 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesReportedForFSI(remarkForFinancialDerivativesReportedForFSIValue2897);
                                    bodyElements.add(remarkForFinancialDerivativesReportedForFSIElement2898);
                                
                            }
                        
                            
                            Unit pure2899 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2899 = createUnitIfNotExist(pure2899, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap2903 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap2903.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap2903.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue2901 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap2903);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap2903, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue2901 = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902 == null ? "" : zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue2902.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIContext2900 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap2903 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue2901 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue2901)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIContext2900, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherAssetsReportedForFSIValue2904 = new RemarkForFSI();
                                    remarkForOtherAssetsReportedForFSIValue2904.setContextRef(DBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIContext2900);
                                    
                                    remarkForOtherAssetsReportedForFSIValue2904.setValue(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue2901);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherAssetsReportedForFSIElement2905 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherAssetsReportedForFSI(remarkForOtherAssetsReportedForFSIValue2904);
                                    bodyElements.add(remarkForOtherAssetsReportedForFSIElement2905);
                                
                            }
                        
                            
                            Unit pure2906 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2906 = createUnitIfNotExist(pure2906, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap2910 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap2910.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap2910.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue2908 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap2910);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap2910, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue2908 = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909 == null ? "" : zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue2909.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIContext2907 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap2910 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue2908 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue2908)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIContext2907, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiabilitiesReportedForFSIValue2911 = new RemarkForFSI();
                                    remarkForLiabilitiesReportedForFSIValue2911.setContextRef(DBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIContext2907);
                                    
                                    remarkForLiabilitiesReportedForFSIValue2911.setValue(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue2908);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiabilitiesReportedForFSIElement2912 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiabilitiesReportedForFSI(remarkForLiabilitiesReportedForFSIValue2911);
                                    bodyElements.add(remarkForLiabilitiesReportedForFSIElement2912);
                                
                            }
                        
                            
                            Unit pure2913 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2913 = createUnitIfNotExist(pure2913, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2917 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2917.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2917.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2915 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2917);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2917, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2915 = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916 == null ? "" : zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue2916.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext2914 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap2917 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2915 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2915)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext2914, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositsReportedForFSIValue2918 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositsReportedForFSIValue2918.setContextRef(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext2914);
                                    
                                    remarkForCurrencyAndDepositsReportedForFSIValue2918.setValue(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue2915);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositsReportedForFSIElement2919 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositsReportedForFSI(remarkForCurrencyAndDepositsReportedForFSIValue2918);
                                    bodyElements.add(remarkForCurrencyAndDepositsReportedForFSIElement2919);
                                
                            }
                        
                            
                            Unit pure2920 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2920 = createUnitIfNotExist(pure2920, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2924 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2924.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2924.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2922 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2924);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2924, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2922 = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923 == null ? "" : zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue2923.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLoansReportedForFSIContext2921 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap2924 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2922 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2922)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext2921, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue2925 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue2925.setContextRef(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext2921);
                                    
                                    remarkForLoansReportedForFSIValue2925.setValue(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue2922);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement2926 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue2925);
                                    bodyElements.add(remarkForLoansReportedForFSIElement2926);
                                
                            }
                        
                            
                            Unit pure2927 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2927 = createUnitIfNotExist(pure2927, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2931 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2931.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2931.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2929 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2931);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2931, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2929 = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930 == null ? "" : zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue2930.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext2928 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap2931 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2929 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2929)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext2928, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesReportedForFSIValue2932 = new RemarkForFSI();
                                    remarkForDebtSecuritiesReportedForFSIValue2932.setContextRef(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext2928);
                                    
                                    remarkForDebtSecuritiesReportedForFSIValue2932.setValue(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue2929);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesReportedForFSIElement2933 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesReportedForFSI(remarkForDebtSecuritiesReportedForFSIValue2932);
                                    bodyElements.add(remarkForDebtSecuritiesReportedForFSIElement2933);
                                
                            }
                        
                            
                            Unit pure2934 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2934 = createUnitIfNotExist(pure2934, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2938 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2938.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2938.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2936 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2938);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2938, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2936 = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937 == null ? "" : zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue2937.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext2935 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap2938 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2936 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2936)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext2935, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInsuranceTechnicalReservesReportedForFSIValue2939 = new RemarkForFSI();
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue2939.setContextRef(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext2935);
                                    
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue2939.setValue(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue2936);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInsuranceTechnicalReservesReportedForFSIElement2940 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInsuranceTechnicalReservesReportedForFSI(remarkForInsuranceTechnicalReservesReportedForFSIValue2939);
                                    bodyElements.add(remarkForInsuranceTechnicalReservesReportedForFSIElement2940);
                                
                            }
                        
                            
                            Unit pure2941 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2941 = createUnitIfNotExist(pure2941, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap2945 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap2945.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap2945.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue2943 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap2945);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap2945, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue2943 = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944 == null ? "" : zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue2944.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIContext2942 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap2945 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue2943 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue2943)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIContext2942, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherLiabilitiesReportedForFSIValue2946 = new RemarkForFSI();
                                    remarkForOtherLiabilitiesReportedForFSIValue2946.setContextRef(DBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIContext2942);
                                    
                                    remarkForOtherLiabilitiesReportedForFSIValue2946.setValue(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue2943);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherLiabilitiesReportedForFSIElement2947 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherLiabilitiesReportedForFSI(remarkForOtherLiabilitiesReportedForFSIValue2946);
                                    bodyElements.add(remarkForOtherLiabilitiesReportedForFSIElement2947);
                                
                            }
                        
                            
                            Unit pure2948 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2948 = createUnitIfNotExist(pure2948, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIMap2952 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIMap2952.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIMap2952.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIValue2950 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIMap2952);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIMap2952, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIValue2950 = zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951 == null ? "" : zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIFieldDataValue2951.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForDebtReportedForFSIContext2949 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIMap2952 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIValue2950 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIValue2950)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForDebtReportedForFSIContext2949, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtReportedForFSIValue2953 = new RemarkForFSI();
                                    remarkForDebtReportedForFSIValue2953.setContextRef(DBS01OFC_Layout1RemarkForDebtReportedForFSIContext2949);
                                    
                                    remarkForDebtReportedForFSIValue2953.setValue(zeroDBS01OFC_Layout1RemarkForDebtReportedForFSIValue2950);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtReportedForFSIElement2954 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtReportedForFSI(remarkForDebtReportedForFSIValue2953);
                                    bodyElements.add(remarkForDebtReportedForFSIElement2954);
                                
                            }
                        
                            
                            Unit pure2955 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2955 = createUnitIfNotExist(pure2955, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2959 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2959.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2959.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2957 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2959);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2959, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2957 = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958 == null ? "" : zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue2958.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext2956 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap2959 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2957 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2957)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext2956, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesReportedForFSIValue2960 = new RemarkForFSI();
                                    remarkForFinancialDerivativesReportedForFSIValue2960.setContextRef(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext2956);
                                    
                                    remarkForFinancialDerivativesReportedForFSIValue2960.setValue(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue2957);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesReportedForFSIElement2961 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesReportedForFSI(remarkForFinancialDerivativesReportedForFSIValue2960);
                                    bodyElements.add(remarkForFinancialDerivativesReportedForFSIElement2961);
                                
                            }
                        
                            
                            Unit pure2962 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2962 = createUnitIfNotExist(pure2962, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCapitalAndReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIMap2966 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIMap2966.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIMap2966.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIValue2964 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIMap2966);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIMap2966, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIValue2964 = zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965 == null ? "" : zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIFieldDataValue2965.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIContext2963 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIMap2966 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIValue2964 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIValue2964)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIContext2963, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCapitalAndReservesReportedForFSIValue2967 = new RemarkForFSI();
                                    remarkForCapitalAndReservesReportedForFSIValue2967.setContextRef(DBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIContext2963);
                                    
                                    remarkForCapitalAndReservesReportedForFSIValue2967.setValue(zeroDBS01OFC_Layout1RemarkForCapitalAndReservesReportedForFSIValue2964);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCapitalAndReservesReportedForFSIElement2968 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCapitalAndReservesReportedForFSI(remarkForCapitalAndReservesReportedForFSIValue2967);
                                    bodyElements.add(remarkForCapitalAndReservesReportedForFSIElement2968);
                                
                            }
                        
                            
                            Unit pure2969 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2969 = createUnitIfNotExist(pure2969, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForBalanceSheetTotalReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIMap2973 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIMap2973.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIValue2971 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIMap2973);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIMap2973, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIValue2971 = zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972 == null ? "" : zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIFieldDataValue2972.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIContext2970 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIMap2973 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIValue2971 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIValue2971)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIContext2970, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForBalanceSheetTotalReportedForFSIValue2974 = new RemarkForFSI();
                                    remarkForBalanceSheetTotalReportedForFSIValue2974.setContextRef(DBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIContext2970);
                                    
                                    remarkForBalanceSheetTotalReportedForFSIValue2974.setValue(zeroDBS01OFC_Layout1RemarkForBalanceSheetTotalReportedForFSIValue2971);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForBalanceSheetTotalReportedForFSIElement2975 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForBalanceSheetTotalReportedForFSI(remarkForBalanceSheetTotalReportedForFSIValue2974);
                                    bodyElements.add(remarkForBalanceSheetTotalReportedForFSIElement2975);
                                
                            }
                        
                            
                            Unit pure2976 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2976 = createUnitIfNotExist(pure2976, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation
                            
                                Map zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2980 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2980.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2978 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation(), zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2980);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation(), zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2980, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2978 = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979 == null ? "" : zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationFieldDataValue2979.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationContext2977 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationMap2980 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2978 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2978)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationContext2977, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2981 = new RemarkForFSI();
                                    remarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2981.setContextRef(DBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationContext2977);
                                    
                                    remarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2981.setValue(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2978);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationElement2982 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulation(remarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationValue2981);
                                    bodyElements.add(remarkForSharesAndOtherEquityInvestmentsInOtherFinancialCorporationsInTheReportingPopulationElement2982);
                                
                            }
                        
                            
                            Unit pure2983 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2983 = createUnitIfNotExist(pure2983, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2987 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2987.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2985 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2987);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2987, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2985 = zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986 == null ? "" : zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIFieldDataValue2986.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2984 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIMap2987 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2985 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2985)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2984, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2988 = new RemarkForFSI();
                                    remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2988.setContextRef(DBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIContext2984);
                                    
                                    remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2988.setValue(zeroDBS01OFC_Layout1RemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2985);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement2989 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSI(remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIValue2988);
                                    bodyElements.add(remarkForInvestmentsAndReverseInvestmentsOfAssociatesOrUnconsolidatedSubsidiariesReportedForFSIElement2989);
                                
                            }
                        
                            
                            Unit pure2990 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2990 = createUnitIfNotExist(pure2990, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2994 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2994.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2992 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2994);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2994, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2992 = zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993 == null ? "" : zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIFieldDataValue2993.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIContext2991 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIMap2994 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2992 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2992)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIContext2991, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2995 = new RemarkForFSI();
                                    remarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2995.setContextRef(DBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIContext2991);
                                    
                                    remarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2995.setValue(zeroDBS01OFC_Layout1RemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2992);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIElement2996 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSI(remarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIValue2995);
                                    bodyElements.add(remarkForInvestmentsInOtherOtherFinancialCorporationsReportedForFSIElement2996);
                                
                            }
                        
                            
                            Unit pure2997 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure2997 = createUnitIfNotExist(pure2997, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap3001 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap3001.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2999 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap3001);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap3001, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2999 = zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000 == null ? "" : zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIFieldDataValue3000.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIContext2998 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIMap3001 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2999 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2999)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIContext2998, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue3002 = new RemarkForFSI();
                                    remarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue3002.setContextRef(DBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIContext2998);
                                    
                                    remarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue3002.setValue(zeroDBS01OFC_Layout1RemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue2999);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIElement3003 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSI(remarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIValue3002);
                                    bodyElements.add(remarkForNonperformingLoansOwnedBySpecialAssetManagementCompaniesReportedForFSIElement3003);
                                
                            }
                        
                            
                            Unit pure3004 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3004 = createUnitIfNotExist(pure3004, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap3008 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap3008.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3006 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap3008);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap3008, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3006 = zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007 == null ? "" : zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIFieldDataValue3007.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIContext3005 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIMap3008 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3006 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3006)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIContext3005, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3009 = new RemarkForFSI();
                                    remarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3009.setContextRef(DBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIContext3005);
                                    
                                    remarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3009.setValue(zeroDBS01OFC_Layout1RemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3006);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIElement3010 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSI(remarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIValue3009);
                                    bodyElements.add(remarkForAssetsManagedButNotOwnedByOtherFinancialCorporationsReportedForFSIElement3010);
                                
                            }
                        
                            
                            Unit pure3011 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3011 = createUnitIfNotExist(pure3011, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap3015 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap3015.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap3015.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue3013 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap3015);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap3015, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue3013 = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014 == null ? "" : zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIFieldDataValue3014.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIContext3012 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIMap3015 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue3013 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue3013)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIContext3012, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialAssetsReportedForFSIValue3016 = new RemarkForFSI();
                                    remarkForFinancialAssetsReportedForFSIValue3016.setContextRef(DBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIContext3012);
                                    
                                    remarkForFinancialAssetsReportedForFSIValue3016.setValue(zeroDBS01OFC_Layout1RemarkForFinancialAssetsReportedForFSIValue3013);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialAssetsReportedForFSIElement3017 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialAssetsReportedForFSI(remarkForFinancialAssetsReportedForFSIValue3016);
                                    bodyElements.add(remarkForFinancialAssetsReportedForFSIElement3017);
                                
                            }
                        
                            
                            Unit pure3018 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3018 = createUnitIfNotExist(pure3018, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3020 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3020 = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021 == null ? "" : zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3021.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext3019 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3022 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3020 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3020)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext3019, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositsReportedForFSIValue3023 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositsReportedForFSIValue3023.setContextRef(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext3019);
                                    
                                    remarkForCurrencyAndDepositsReportedForFSIValue3023.setValue(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3020);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositsReportedForFSIElement3024 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositsReportedForFSI(remarkForCurrencyAndDepositsReportedForFSIValue3023);
                                    bodyElements.add(remarkForCurrencyAndDepositsReportedForFSIElement3024);
                                
                            }
                        
                            
                            Unit pure3025 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3025 = createUnitIfNotExist(pure3025, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3027 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3027 = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028 == null ? "" : zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3028.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLoansReportedForFSIContext3026 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3029 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3027 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3027)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext3026, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue3030 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue3030.setContextRef(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext3026);
                                    
                                    remarkForLoansReportedForFSIValue3030.setValue(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3027);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement3031 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue3030);
                                    bodyElements.add(remarkForLoansReportedForFSIElement3031);
                                
                            }
                        
                            
                            Unit pure3032 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3032 = createUnitIfNotExist(pure3032, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3034 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3034 = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035 == null ? "" : zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3035.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext3033 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3036 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3034 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3034)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext3033, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesReportedForFSIValue3037 = new RemarkForFSI();
                                    remarkForDebtSecuritiesReportedForFSIValue3037.setContextRef(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext3033);
                                    
                                    remarkForDebtSecuritiesReportedForFSIValue3037.setValue(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3034);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesReportedForFSIElement3038 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesReportedForFSI(remarkForDebtSecuritiesReportedForFSIValue3037);
                                    bodyElements.add(remarkForDebtSecuritiesReportedForFSIElement3038);
                                
                            }
                        
                            
                            Unit pure3039 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3039 = createUnitIfNotExist(pure3039, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForSharesAndOtherEquityReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue3041 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue3041 = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042 == null ? "" : zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIFieldDataValue3042.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIContext3040 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIMap3043 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue3041 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue3041)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIContext3040, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForSharesAndOtherEquityReportedForFSIValue3044 = new RemarkForFSI();
                                    remarkForSharesAndOtherEquityReportedForFSIValue3044.setContextRef(DBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIContext3040);
                                    
                                    remarkForSharesAndOtherEquityReportedForFSIValue3044.setValue(zeroDBS01OFC_Layout1RemarkForSharesAndOtherEquityReportedForFSIValue3041);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForSharesAndOtherEquityReportedForFSIElement3045 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForSharesAndOtherEquityReportedForFSI(remarkForSharesAndOtherEquityReportedForFSIValue3044);
                                    bodyElements.add(remarkForSharesAndOtherEquityReportedForFSIElement3045);
                                
                            }
                        
                            
                            Unit pure3046 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3046 = createUnitIfNotExist(pure3046, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3048 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3048 = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049 == null ? "" : zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3049.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext3047 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3050 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3048 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3048)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext3047, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInsuranceTechnicalReservesReportedForFSIValue3051 = new RemarkForFSI();
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue3051.setContextRef(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext3047);
                                    
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue3051.setValue(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3048);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInsuranceTechnicalReservesReportedForFSIElement3052 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInsuranceTechnicalReservesReportedForFSI(remarkForInsuranceTechnicalReservesReportedForFSIValue3051);
                                    bodyElements.add(remarkForInsuranceTechnicalReservesReportedForFSIElement3052);
                                
                            }
                        
                            
                            Unit pure3053 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3053 = createUnitIfNotExist(pure3053, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3055 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3055 = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056 == null ? "" : zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3056.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext3054 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3057 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3055 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3055)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext3054, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesReportedForFSIValue3058 = new RemarkForFSI();
                                    remarkForFinancialDerivativesReportedForFSIValue3058.setContextRef(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext3054);
                                    
                                    remarkForFinancialDerivativesReportedForFSIValue3058.setValue(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3055);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesReportedForFSIElement3059 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesReportedForFSI(remarkForFinancialDerivativesReportedForFSIValue3058);
                                    bodyElements.add(remarkForFinancialDerivativesReportedForFSIElement3059);
                                
                            }
                        
                            
                            Unit pure3060 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3060 = createUnitIfNotExist(pure3060, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherAssetsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064.put("rbi-core:AssetLiabilityAxis", "rbi-core:AssetMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue3062 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherAssetsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue3062 = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063 == null ? "" : zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIFieldDataValue3063.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIContext3061 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIMap3064 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue3062 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue3062)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIContext3061, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherAssetsReportedForFSIValue3065 = new RemarkForFSI();
                                    remarkForOtherAssetsReportedForFSIValue3065.setContextRef(DBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIContext3061);
                                    
                                    remarkForOtherAssetsReportedForFSIValue3065.setValue(zeroDBS01OFC_Layout1RemarkForOtherAssetsReportedForFSIValue3062);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherAssetsReportedForFSIElement3066 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherAssetsReportedForFSI(remarkForOtherAssetsReportedForFSIValue3065);
                                    bodyElements.add(remarkForOtherAssetsReportedForFSIElement3066);
                                
                            }
                        
                            
                            Unit pure3067 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3067 = createUnitIfNotExist(pure3067, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue3069 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue3069 = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070 == null ? "" : zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIFieldDataValue3070.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIContext3068 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIMap3071 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue3069 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue3069)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIContext3068, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiabilitiesReportedForFSIValue3072 = new RemarkForFSI();
                                    remarkForLiabilitiesReportedForFSIValue3072.setContextRef(DBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIContext3068);
                                    
                                    remarkForLiabilitiesReportedForFSIValue3072.setValue(zeroDBS01OFC_Layout1RemarkForLiabilitiesReportedForFSIValue3069);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiabilitiesReportedForFSIElement3073 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiabilitiesReportedForFSI(remarkForLiabilitiesReportedForFSIValue3072);
                                    bodyElements.add(remarkForLiabilitiesReportedForFSIElement3073);
                                
                            }
                        
                            
                            Unit pure3074 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3074 = createUnitIfNotExist(pure3074, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForCurrencyAndDepositsReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3076 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3076 = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077 == null ? "" : zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIFieldDataValue3077.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext3075 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIMap3078 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3076 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3076)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext3075, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForCurrencyAndDepositsReportedForFSIValue3079 = new RemarkForFSI();
                                    remarkForCurrencyAndDepositsReportedForFSIValue3079.setContextRef(DBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIContext3075);
                                    
                                    remarkForCurrencyAndDepositsReportedForFSIValue3079.setValue(zeroDBS01OFC_Layout1RemarkForCurrencyAndDepositsReportedForFSIValue3076);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForCurrencyAndDepositsReportedForFSIElement3080 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForCurrencyAndDepositsReportedForFSI(remarkForCurrencyAndDepositsReportedForFSIValue3079);
                                    bodyElements.add(remarkForCurrencyAndDepositsReportedForFSIElement3080);
                                
                            }
                        
                            
                            Unit pure3081 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3081 = createUnitIfNotExist(pure3081, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLoansReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3083 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLoansReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3083 = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084 == null ? "" : zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIFieldDataValue3084.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLoansReportedForFSIContext3082 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIMap3085 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3083 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3083)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext3082, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLoansReportedForFSIValue3086 = new RemarkForFSI();
                                    remarkForLoansReportedForFSIValue3086.setContextRef(DBS01OFC_Layout1RemarkForLoansReportedForFSIContext3082);
                                    
                                    remarkForLoansReportedForFSIValue3086.setValue(zeroDBS01OFC_Layout1RemarkForLoansReportedForFSIValue3083);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLoansReportedForFSIElement3087 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLoansReportedForFSI(remarkForLoansReportedForFSIValue3086);
                                    bodyElements.add(remarkForLoansReportedForFSIElement3087);
                                
                            }
                        
                            
                            Unit pure3088 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3088 = createUnitIfNotExist(pure3088, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForDebtSecuritiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3090 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3090 = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091 == null ? "" : zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIFieldDataValue3091.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext3089 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIMap3092 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3090 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3090)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext3089, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForDebtSecuritiesReportedForFSIValue3093 = new RemarkForFSI();
                                    remarkForDebtSecuritiesReportedForFSIValue3093.setContextRef(DBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIContext3089);
                                    
                                    remarkForDebtSecuritiesReportedForFSIValue3093.setValue(zeroDBS01OFC_Layout1RemarkForDebtSecuritiesReportedForFSIValue3090);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForDebtSecuritiesReportedForFSIElement3094 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForDebtSecuritiesReportedForFSI(remarkForDebtSecuritiesReportedForFSIValue3093);
                                    bodyElements.add(remarkForDebtSecuritiesReportedForFSIElement3094);
                                
                            }
                        
                            
                            Unit pure3095 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3095 = createUnitIfNotExist(pure3095, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForInsuranceTechnicalReservesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3097 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForInsuranceTechnicalReservesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3097 = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098 == null ? "" : zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIFieldDataValue3098.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext3096 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIMap3099 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3097 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3097)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext3096, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForInsuranceTechnicalReservesReportedForFSIValue3100 = new RemarkForFSI();
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue3100.setContextRef(DBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIContext3096);
                                    
                                    remarkForInsuranceTechnicalReservesReportedForFSIValue3100.setValue(zeroDBS01OFC_Layout1RemarkForInsuranceTechnicalReservesReportedForFSIValue3097);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForInsuranceTechnicalReservesReportedForFSIElement3101 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForInsuranceTechnicalReservesReportedForFSI(remarkForInsuranceTechnicalReservesReportedForFSIValue3100);
                                    bodyElements.add(remarkForInsuranceTechnicalReservesReportedForFSIElement3101);
                                
                            }
                        
                            
                            Unit pure3102 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3102 = createUnitIfNotExist(pure3102, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForFinancialDerivativesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3104 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForFinancialDerivativesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3104 = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105 == null ? "" : zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIFieldDataValue3105.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext3103 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIMap3106 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3104 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3104)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext3103, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForFinancialDerivativesReportedForFSIValue3107 = new RemarkForFSI();
                                    remarkForFinancialDerivativesReportedForFSIValue3107.setContextRef(DBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIContext3103);
                                    
                                    remarkForFinancialDerivativesReportedForFSIValue3107.setValue(zeroDBS01OFC_Layout1RemarkForFinancialDerivativesReportedForFSIValue3104);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForFinancialDerivativesReportedForFSIElement3108 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForFinancialDerivativesReportedForFSI(remarkForFinancialDerivativesReportedForFSIValue3107);
                                    bodyElements.add(remarkForFinancialDerivativesReportedForFSIElement3108);
                                
                            }
                        
                            
                            Unit pure3109 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3109 = createUnitIfNotExist(pure3109, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForOtherLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113.put("in-rbi-rep:TypeOfLoansAndAdvancesAxis", "in-rbi-rep:NonResidentMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue3111 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue3111 = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112 == null ? "" : zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIFieldDataValue3112.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIContext3110 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIMap3113 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue3111 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue3111)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIContext3110, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForOtherLiabilitiesReportedForFSIValue3114 = new RemarkForFSI();
                                    remarkForOtherLiabilitiesReportedForFSIValue3114.setContextRef(DBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIContext3110);
                                    
                                    remarkForOtherLiabilitiesReportedForFSIValue3114.setValue(zeroDBS01OFC_Layout1RemarkForOtherLiabilitiesReportedForFSIValue3111);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForOtherLiabilitiesReportedForFSIElement3115 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForOtherLiabilitiesReportedForFSI(remarkForOtherLiabilitiesReportedForFSIValue3114);
                                    bodyElements.add(remarkForOtherLiabilitiesReportedForFSIElement3115);
                                
                            }
                        
                            
                            Unit pure3116 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3116 = createUnitIfNotExist(pure3116, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiquidAssetsCoreReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIMap3120 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIMap3120.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIMap3120.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIValue3118 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiquidAssetsCoreReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIMap3120);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiquidAssetsCoreReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIMap3120, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIValue3118 = zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119 == null ? "" : zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIFieldDataValue3119.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIContext3117 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIMap3120 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIValue3118 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIValue3118)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIContext3117, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiquidAssetsCoreReportedForFSIValue3121 = new RemarkForFSI();
                                    remarkForLiquidAssetsCoreReportedForFSIValue3121.setContextRef(DBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIContext3117);
                                    
                                    remarkForLiquidAssetsCoreReportedForFSIValue3121.setValue(zeroDBS01OFC_Layout1RemarkForLiquidAssetsCoreReportedForFSIValue3118);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiquidAssetsCoreReportedForFSIElement3122 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiquidAssetsCoreReportedForFSI(remarkForLiquidAssetsCoreReportedForFSIValue3121);
                                    bodyElements.add(remarkForLiquidAssetsCoreReportedForFSIElement3122);
                                
                            }
                        
                            
                            Unit pure3123 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3123 = createUnitIfNotExist(pure3123, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForLiquidAssetsBroadMeasureReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIMap3127 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIMap3127.put("rbi-core:AssetLiabilityAxis", "rbi-core:LiabilityMember");
                                    
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIMap3127.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIValue3125 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIMap3127);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForLiquidAssetsBroadMeasureReportedForFSI(), zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIMap3127, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIValue3125 = zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126 == null ? "" : zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIFieldDataValue3126.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIContext3124 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIMap3127 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIValue3125 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIValue3125)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIContext3124, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForLiquidAssetsBroadMeasureReportedForFSIValue3128 = new RemarkForFSI();
                                    remarkForLiquidAssetsBroadMeasureReportedForFSIValue3128.setContextRef(DBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIContext3124);
                                    
                                    remarkForLiquidAssetsBroadMeasureReportedForFSIValue3128.setValue(zeroDBS01OFC_Layout1RemarkForLiquidAssetsBroadMeasureReportedForFSIValue3125);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForLiquidAssetsBroadMeasureReportedForFSIElement3129 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForLiquidAssetsBroadMeasureReportedForFSI(remarkForLiquidAssetsBroadMeasureReportedForFSIValue3128);
                                    bodyElements.add(remarkForLiquidAssetsBroadMeasureReportedForFSIElement3129);
                                
                            }
                        
                            
                            Unit pure3130 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure3130 = createUnitIfNotExist(pure3130, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - RemarkForShortTermLiabilitiesReportedForFSI
                            
                                Map zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIMap3134 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIMap3134.put("in-rbi-rep:ParameterAxis", "rbi-core:OFCMember");
                                    
                                    
                                    String zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIValue3132 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForShortTermLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIMap3134);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133 = DBS01ReportUtil.retrieveFieldDataForElement(field.getRemarkForShortTermLiabilitiesReportedForFSI(), zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIMap3134, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIValue3132 = zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133 == null ? "" : zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getValue();
                                    if(zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133 != null ) {
                                        if(!zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getStartDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getEndDateValue();
                                        if(!zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIFieldDataValue3133.getInstantDateValue();
                                    }

                                    
                                            Context DBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIContext3131 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIMap3134 );
                                            
                                
                                if(zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIValue3132 != null && !"".equals(zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIValue3132)) {
                                    
                                    addContext(DBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIContext3131, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    RemarkForFSI remarkForShortTermLiabilitiesReportedForFSIValue3135 = new RemarkForFSI();
                                    remarkForShortTermLiabilitiesReportedForFSIValue3135.setContextRef(DBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIContext3131);
                                    
                                    remarkForShortTermLiabilitiesReportedForFSIValue3135.setValue(zeroDBS01OFC_Layout1RemarkForShortTermLiabilitiesReportedForFSIValue3132);        
                                    
                                    
                                    JAXBElement<RemarkForFSI> remarkForShortTermLiabilitiesReportedForFSIElement3136 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createRemarkForShortTermLiabilitiesReportedForFSI(remarkForShortTermLiabilitiesReportedForFSIValue3135);
                                    bodyElements.add(remarkForShortTermLiabilitiesReportedForFSIElement3136);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
            
            private Unit createUnitIfNotExist(Unit unitObj, String unitId, String namespaceURI, String qNameValue, List<Unit> unitElements) {
                if(unitObj == null){
                    unitObj = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                    unitObj.setId(unitId);
                    QName unitMeasureValue = new QName(namespaceURI, qNameValue);
                    unitObj.getMeasure().add(unitMeasureValue);
                    unitElements.add(unitObj);
                }
                return unitObj;
            }

            private void addContext(Context uniqueIdForContext, List<Context> contextElements, List<String> contextIdentifiers){
                if(!contextIdentifiers.contains(uniqueIdForContext.getId())) {
                    contextElements.add(uniqueIdForContext);
                    contextIdentifiers.add(uniqueIdForContext.getId());
                }
            }
    
        }
    
    

