package in.armedu.banking.report.rbixbrl.reports.dbs01;



import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;

import org.xbrl._2003.instance.Context;
import org.xbrl._2003.instance.ContextEntityType;
import org.xbrl._2003.instance.ContextEntityType.Identifier;
import org.xbrl._2006.xbrldi.ExplicitMember;
import org.xbrl._2006.xbrldi.TypedMember;
import org.xbrl._2003.instance.ContextPeriodType;
import org.xbrl._2003.instance.ObjectFactory;
import org.xbrl._2003.instance.Unit;
import org.xbrl._2003.instance.Xbrl;
import org.xbrl._2003.xlink.SimpleType;

// generic import classes
import java.io.StringWriter;
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import in.armedu.banking.report.rbixbrl.util.DefaultNamespacePrefixMapper;
import lombok.Setter;

// import model class
import in.armedu.banking.report.rbixbrl.model.dbs01.*;
import in.armedu.banking.report.rbixbrl.model.FieldDataValue;
// add xbrl data type and inerface
import in.armedu.banking.report.rbixbrl.reports.XBRLReportIntf;
import in.armedu.banking.report.rbixbrl.util.CommonFns;
import in.armedu.banking.report.rbixbrl.model.ReportData;

// add data type 

import org.xbrl._2003.instance.StringItemType;

import org.xbrl._2003.instance.DateItemType;

import org.xbrl._2003.instance.ReportingScale;

import org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ReportStatusItemType;

                        import org.xbrl.dtr.type.non_numeric.TextBlockItemType;
                        
import org.xbrl._2003.instance.NatureOfFilingEntity;

import org.xbrl._2003.instance.MailAddress;

import org.xbrl._2003.instance.TelephoneNumber10DigitString;


@Setter
public class DBS01Report implements XBRLReportIntf {
    private org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory instancObjectFactory = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory();
    
    
    @Override
    public StringWriter generateReport(ReportData reportData){
        JAXBContext jc;
        Marshaller m;
        // TODO should be generated dynamically
        DBS01ReportData mainReportData = (DBS01ReportData) reportData;

        try {
            jc = JAXBContext.newInstance(ObjectFactory.class,
            org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ObjectFactory.class,
            org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory.class,
            org.rbi.in_rbi_rep_par.ObjectFactory.class,
            org.xbrl._2003.xlink.ObjectFactory.class,
            org.xbrl._2003.instance.ObjectFactory.class,
            org.xbrl._2006.xbrldi.ObjectFactory.class,
            org.xbrl._2003.linkbase.ObjectFactory.class,
            org.xbrl._2005.xbrldt.ObjectFactory.class,
            org.xbrl.dtr.type.non_numeric.ObjectFactory.class,
            org.xbrl.dtr.type.numeric.ObjectFactory.class);

            m = jc.createMarshaller();
            StringWriter writer = new StringWriter();
            Xbrl xbrl = new org.xbrl._2003.instance.ObjectFactory().createXbrl();
            
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            m.setProperty("com.sun.xml.bind.namespacePrefixMapper", new DefaultNamespacePrefixMapper());
            org.xbrl._2003.xlink.ObjectFactory xlinkObjectFactory = new org.xbrl._2003.xlink.ObjectFactory();
            SimpleType simpleType = xlinkObjectFactory.createSimpleType();
            simpleType.setType("simple");
            // TODO should be changed to specific xsd related to report dbs01
            simpleType.setHref("../schemas/alo/in-rbi-dbs01.xsd");
            xbrl.getSchemaRef().add(simpleType);
            xbrl.getOtherAttributes().put(new QName("xml:lang"), "en");
           
            
            // context identifiers and body elements
            List<String> contextIdentifiers = new ArrayList<String>();
            List<Context> contextElements = new ArrayList<Context>();
            List<Object> bodyElements = new ArrayList<Object>();
            List<String> unitIdentifiers = new ArrayList<String>();
            List<Unit> unitElements = new ArrayList<Unit>();
           
            //Unit unitObj = null;
            //DBS01ReportData dBS01ReportData = new DBS01ReportData();
            // print values           
    

            // TODO : create proper context with loop and element
            // initiatilize data class and allow to be set 
            //private DBS01ReportData dBS01ReportData = new DBS01ReportData();
            // retrieve bankcode, startdate, enddate and perioddate
            String bankCode = mainReportData.getBankCode();
            String startDate = mainReportData.getStartDate();
            String endDate = mainReportData.getEndDate();
            String periodDate = mainReportData.getPeriodDate();

             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
            
                
                    {
            
                    FilingInfo_Layout1 field = filingInfo_Layout1;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReturnName
                            
                                Map zeroFilingInfo_Layout1ReturnNameMap3 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReturnNameValue2 = DBS01ReportUtil.retrieveValueForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap3);

                                    
                                        Context FilingInfo_Layout1ReturnNameContext1 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReturnNameContext1.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReturnNameContext1);
                                    contextIdentifiers.add(FilingInfo_Layout1ReturnNameContext1.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType returnNameValue = new StringItemType();
                                returnNameValue.setContextRef(FilingInfo_Layout1ReturnNameContext1);
                                
                                    returnNameValue.setValue(zeroFilingInfo_Layout1ReturnNameValue2);        
                                    
                                
                                JAXBElement<StringItemType> returnNameElement = instancObjectFactory.createReturnName(returnNameValue);
                                bodyElements.add(returnNameElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReturnCode
                            
                                Map zeroFilingInfo_Layout1ReturnCodeMap6 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReturnCodeValue5 = DBS01ReportUtil.retrieveValueForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap6);

                                    
                                        Context FilingInfo_Layout1ReturnCodeContext4 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReturnCodeContext4.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReturnCodeContext4);
                                    contextIdentifiers.add(FilingInfo_Layout1ReturnCodeContext4.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType returnCodeValue = new StringItemType();
                                returnCodeValue.setContextRef(FilingInfo_Layout1ReturnCodeContext4);
                                
                                    returnCodeValue.setValue(zeroFilingInfo_Layout1ReturnCodeValue5);        
                                    
                                
                                JAXBElement<StringItemType> returnCodeElement = instancObjectFactory.createReturnCode(returnCodeValue);
                                bodyElements.add(returnCodeElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - NameOfReportingInstitution
                            
                                Map zeroFilingInfo_Layout1NameOfReportingInstitutionMap9 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1NameOfReportingInstitutionValue8 = DBS01ReportUtil.retrieveValueForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap9);

                                    
                                        Context FilingInfo_Layout1NameOfReportingInstitutionContext7 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1NameOfReportingInstitutionContext7.getId())) {
                                    contextElements.add(FilingInfo_Layout1NameOfReportingInstitutionContext7);
                                    contextIdentifiers.add(FilingInfo_Layout1NameOfReportingInstitutionContext7.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType nameOfReportingInstitutionValue = new StringItemType();
                                nameOfReportingInstitutionValue.setContextRef(FilingInfo_Layout1NameOfReportingInstitutionContext7);
                                
                                    nameOfReportingInstitutionValue.setValue(zeroFilingInfo_Layout1NameOfReportingInstitutionValue8);        
                                    
                                
                                JAXBElement<StringItemType> nameOfReportingInstitutionElement = instancObjectFactory.createNameOfReportingInstitution(nameOfReportingInstitutionValue);
                                bodyElements.add(nameOfReportingInstitutionElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - BankCode
                            
                                Map zeroFilingInfo_Layout1BankCodeMap12 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1BankCodeValue11 = DBS01ReportUtil.retrieveValueForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap12);

                                    
                                    Context FilingInfo_Layout1BankCodeContext10 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1BankCodeContext10.getId())) {
                                    contextElements.add(FilingInfo_Layout1BankCodeContext10);
                                    contextIdentifiers.add(FilingInfo_Layout1BankCodeContext10.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType bankCodeValue = new StringItemType();
                                bankCodeValue.setContextRef(FilingInfo_Layout1BankCodeContext10);
                                
                                    bankCodeValue.setValue(zeroFilingInfo_Layout1BankCodeValue11);        
                                    
                                
                                JAXBElement<StringItemType> bankCodeElement = instancObjectFactory.createBankCode(bankCodeValue);
                                bodyElements.add(bankCodeElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - InstitutionType
                            
                                Map zeroFilingInfo_Layout1InstitutionTypeMap15 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1InstitutionTypeValue14 = DBS01ReportUtil.retrieveValueForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap15);

                                    
                                        Context FilingInfo_Layout1InstitutionTypeContext13 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1InstitutionTypeContext13.getId())) {
                                    contextElements.add(FilingInfo_Layout1InstitutionTypeContext13);
                                    contextIdentifiers.add(FilingInfo_Layout1InstitutionTypeContext13.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType institutionTypeValue = new StringItemType();
                                institutionTypeValue.setContextRef(FilingInfo_Layout1InstitutionTypeContext13);
                                
                                    institutionTypeValue.setValue(zeroFilingInfo_Layout1InstitutionTypeValue14);        
                                    
                                
                                JAXBElement<StringItemType> institutionTypeElement = instancObjectFactory.createInstitutionType(institutionTypeValue);
                                bodyElements.add(institutionTypeElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingFrequency
                            
                                Map zeroFilingInfo_Layout1ReportingFrequencyMap18 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingFrequencyValue17 = DBS01ReportUtil.retrieveValueForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap18);

                                    
                                        Context FilingInfo_Layout1ReportingFrequencyContext16 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingFrequencyContext16.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingFrequencyContext16);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingFrequencyContext16.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType reportingFrequencyValue = new StringItemType();
                                reportingFrequencyValue.setContextRef(FilingInfo_Layout1ReportingFrequencyContext16);
                                
                                    reportingFrequencyValue.setValue(zeroFilingInfo_Layout1ReportingFrequencyValue17);        
                                    
                                
                                JAXBElement<StringItemType> reportingFrequencyElement = instancObjectFactory.createReportingFrequency(reportingFrequencyValue);
                                bodyElements.add(reportingFrequencyElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingPeriodStartDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodStartDateMap21 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingPeriodStartDateValue20 = DBS01ReportUtil.retrieveValueForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap21);

                                    
                                    Context FilingInfo_Layout1ReportingPeriodStartDateContext19 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingPeriodStartDateContext19.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingPeriodStartDateContext19);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingPeriodStartDateContext19.getId());
                                }
                                // create element JAXB Element
                    
                                DateItemType reportingPeriodStartDateValue = new DateItemType();
                                reportingPeriodStartDateValue.setContextRef(FilingInfo_Layout1ReportingPeriodStartDateContext19);
                                
                                reportingPeriodStartDateValue.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodStartDateValue20));
                                
                                
                                JAXBElement<DateItemType> reportingPeriodStartDateElement = instancObjectFactory.createReportingPeriodStartDate(reportingPeriodStartDateValue);
                                bodyElements.add(reportingPeriodStartDateElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingPeriodEndDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodEndDateMap24 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingPeriodEndDateValue23 = DBS01ReportUtil.retrieveValueForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap24);

                                    
                                    Context FilingInfo_Layout1ReportingPeriodEndDateContext22 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingPeriodEndDateContext22.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingPeriodEndDateContext22);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingPeriodEndDateContext22.getId());
                                }
                                // create element JAXB Element
                    
                                DateItemType reportingPeriodEndDateValue = new DateItemType();
                                reportingPeriodEndDateValue.setContextRef(FilingInfo_Layout1ReportingPeriodEndDateContext22);
                                
                                reportingPeriodEndDateValue.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodEndDateValue23));
                                
                                
                                JAXBElement<DateItemType> reportingPeriodEndDateElement = instancObjectFactory.createReportingPeriodEndDate(reportingPeriodEndDateValue);
                                bodyElements.add(reportingPeriodEndDateElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingCurrency
                            
                                Map zeroFilingInfo_Layout1ReportingCurrencyMap27 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingCurrencyValue26 = DBS01ReportUtil.retrieveValueForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap27);

                                    
                                        Context FilingInfo_Layout1ReportingCurrencyContext25 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingCurrencyContext25.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingCurrencyContext25);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingCurrencyContext25.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType reportingCurrencyValue = new StringItemType();
                                reportingCurrencyValue.setContextRef(FilingInfo_Layout1ReportingCurrencyContext25);
                                
                                    reportingCurrencyValue.setValue(zeroFilingInfo_Layout1ReportingCurrencyValue26);        
                                    
                                
                                JAXBElement<StringItemType> reportingCurrencyElement = instancObjectFactory.createReportingCurrency(reportingCurrencyValue);
                                bodyElements.add(reportingCurrencyElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingScale
                            
                                Map zeroFilingInfo_Layout1ReportingScaleMap30 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingScaleValue29 = DBS01ReportUtil.retrieveValueForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap30);

                                    
                                        Context FilingInfo_Layout1ReportingScaleContext28 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingScaleContext28.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingScaleContext28);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingScaleContext28.getId());
                                }
                                // create element JAXB Element
                    
                                ReportingScale reportingScaleValue = new ReportingScale();
                                reportingScaleValue.setContextRef(FilingInfo_Layout1ReportingScaleContext28);
                                
                                    reportingScaleValue.setValue(zeroFilingInfo_Layout1ReportingScaleValue29);        
                                    
                                
                                JAXBElement<ReportingScale> reportingScaleElement = instancObjectFactory.createReportingScale(reportingScaleValue);
                                bodyElements.add(reportingScaleElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - TaxonomyVersion
                            
                                Map zeroFilingInfo_Layout1TaxonomyVersionMap33 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1TaxonomyVersionValue32 = DBS01ReportUtil.retrieveValueForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap33);

                                    
                                        Context FilingInfo_Layout1TaxonomyVersionContext31 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1TaxonomyVersionContext31.getId())) {
                                    contextElements.add(FilingInfo_Layout1TaxonomyVersionContext31);
                                    contextIdentifiers.add(FilingInfo_Layout1TaxonomyVersionContext31.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType taxonomyVersionValue = new StringItemType();
                                taxonomyVersionValue.setContextRef(FilingInfo_Layout1TaxonomyVersionContext31);
                                
                                    taxonomyVersionValue.setValue(zeroFilingInfo_Layout1TaxonomyVersionValue32);        
                                    
                                
                                JAXBElement<StringItemType> taxonomyVersionElement = instancObjectFactory.createTaxonomyVersion(taxonomyVersionValue);
                                bodyElements.add(taxonomyVersionElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ToolName
                            
                                Map zeroFilingInfo_Layout1ToolNameMap36 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ToolNameValue35 = DBS01ReportUtil.retrieveValueForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap36);

                                    
                                        Context FilingInfo_Layout1ToolNameContext34 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ToolNameContext34.getId())) {
                                    contextElements.add(FilingInfo_Layout1ToolNameContext34);
                                    contextIdentifiers.add(FilingInfo_Layout1ToolNameContext34.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType toolNameValue = new StringItemType();
                                toolNameValue.setContextRef(FilingInfo_Layout1ToolNameContext34);
                                
                                    toolNameValue.setValue(zeroFilingInfo_Layout1ToolNameValue35);        
                                    
                                
                                JAXBElement<StringItemType> toolNameElement = instancObjectFactory.createToolName(toolNameValue);
                                bodyElements.add(toolNameElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ToolVersion
                            
                                Map zeroFilingInfo_Layout1ToolVersionMap39 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ToolVersionValue38 = DBS01ReportUtil.retrieveValueForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap39);

                                    
                                        Context FilingInfo_Layout1ToolVersionContext37 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ToolVersionContext37.getId())) {
                                    contextElements.add(FilingInfo_Layout1ToolVersionContext37);
                                    contextIdentifiers.add(FilingInfo_Layout1ToolVersionContext37.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType toolVersionValue = new StringItemType();
                                toolVersionValue.setContextRef(FilingInfo_Layout1ToolVersionContext37);
                                
                                    toolVersionValue.setValue(zeroFilingInfo_Layout1ToolVersionValue38);        
                                    
                                
                                JAXBElement<StringItemType> toolVersionElement = instancObjectFactory.createToolVersion(toolVersionValue);
                                bodyElements.add(toolVersionElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportStatus
                            
                                Map zeroFilingInfo_Layout1ReportStatusMap42 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportStatusValue41 = DBS01ReportUtil.retrieveValueForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap42);

                                    
                                        Context FilingInfo_Layout1ReportStatusContext40 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportStatusContext40.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportStatusContext40);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportStatusContext40.getId());
                                }
                                // create element JAXB Element
                    
                                ReportStatusItemType reportStatusValue = new ReportStatusItemType();
                                reportStatusValue.setContextRef(FilingInfo_Layout1ReportStatusContext40);
                                
                                    reportStatusValue.setValue(zeroFilingInfo_Layout1ReportStatusValue41);        
                                    
                                
                                JAXBElement<ReportStatusItemType> reportStatusElement = instancObjectFactory.createReportStatus(reportStatusValue);
                                bodyElements.add(reportStatusElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - DateOfAudit
                            
                                Map zeroFilingInfo_Layout1DateOfAuditMap45 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1DateOfAuditValue44 = DBS01ReportUtil.retrieveValueForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap45);

                                    
                                    Context FilingInfo_Layout1DateOfAuditContext43 = DBS01ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1DateOfAuditContext43.getId())) {
                                    contextElements.add(FilingInfo_Layout1DateOfAuditContext43);
                                    contextIdentifiers.add(FilingInfo_Layout1DateOfAuditContext43.getId());
                                }
                                // create element JAXB Element
                    
                                DateItemType dateOfAuditValue = new DateItemType();
                                dateOfAuditValue.setContextRef(FilingInfo_Layout1DateOfAuditContext43);
                                
                                dateOfAuditValue.setValue(DBS01ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1DateOfAuditValue44));
                                
                                
                                JAXBElement<DateItemType> dateOfAuditElement = instancObjectFactory.createDateOfAudit(dateOfAuditValue);
                                bodyElements.add(dateOfAuditElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - GeneralRemarks
                            
                                Map zeroFilingInfo_Layout1GeneralRemarksMap48 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1GeneralRemarksValue47 = DBS01ReportUtil.retrieveValueForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap48);

                                    
                                        Context FilingInfo_Layout1GeneralRemarksContext46 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1GeneralRemarksContext46.getId())) {
                                    contextElements.add(FilingInfo_Layout1GeneralRemarksContext46);
                                    contextIdentifiers.add(FilingInfo_Layout1GeneralRemarksContext46.getId());
                                }
                                // create element JAXB Element
                    
                                TextBlockItemType generalRemarksValue = new TextBlockItemType();
                                generalRemarksValue.setContextRef(FilingInfo_Layout1GeneralRemarksContext46);
                                
                                    generalRemarksValue.setValue(zeroFilingInfo_Layout1GeneralRemarksValue47);        
                                    
                                
                                JAXBElement<TextBlockItemType> generalRemarksElement = instancObjectFactory.createGeneralRemarks(generalRemarksValue);
                                bodyElements.add(generalRemarksElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
            
                
                    {
            
                    FilingInfo_Layout2 field = filingInfo_Layout2;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of FilingInfo_Layout2
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - NatureOfFilingEntity
                            
                                Map zeroFilingInfo_Layout2NatureOfFilingEntityMap51 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout2NatureOfFilingEntityValue50 = DBS01ReportUtil.retrieveValueForElement(field.getNatureOfFilingEntity(), zeroFilingInfo_Layout2NatureOfFilingEntityMap51);

                                    
                                        Context FilingInfo_Layout2NatureOfFilingEntityContext49 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout2NatureOfFilingEntityContext49.getId())) {
                                    contextElements.add(FilingInfo_Layout2NatureOfFilingEntityContext49);
                                    contextIdentifiers.add(FilingInfo_Layout2NatureOfFilingEntityContext49.getId());
                                }
                                // create element JAXB Element
                    
                                NatureOfFilingEntity natureOfFilingEntityValue = new NatureOfFilingEntity();
                                natureOfFilingEntityValue.setContextRef(FilingInfo_Layout2NatureOfFilingEntityContext49);
                                
                                    natureOfFilingEntityValue.setValue(zeroFilingInfo_Layout2NatureOfFilingEntityValue50);        
                                    
                                
                                JAXBElement<NatureOfFilingEntity> natureOfFilingEntityElement = instancObjectFactory.createNatureOfFilingEntity(natureOfFilingEntityValue);
                                bodyElements.add(natureOfFilingEntityElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01AddInfo_Layout1 if any typeMembers then List or Single
                DBS01AddInfo_Layout1 dBS01AddInfo_Layout1 = mainReportData.getDBS01AddInfo_Layout1();
            
                
                    {
            
                    DBS01AddInfo_Layout1 field = dBS01AddInfo_Layout1;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerName
                            
                                Map zeroDBS01AddInfo_Layout1MakerNameMap54 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerNameValue53 = DBS01ReportUtil.retrieveValueForElement(field.getMakerName(), zeroDBS01AddInfo_Layout1MakerNameMap54);

                                    
                                        Context DBS01AddInfo_Layout1MakerNameContext52 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerNameContext52.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1MakerNameContext52);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1MakerNameContext52.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType makerNameValue = new StringItemType();
                                makerNameValue.setContextRef(DBS01AddInfo_Layout1MakerNameContext52);
                                
                                    makerNameValue.setValue(zeroDBS01AddInfo_Layout1MakerNameValue53);        
                                    
                                
                                JAXBElement<StringItemType> makerNameElement = instancObjectFactory.createMakerName(makerNameValue);
                                bodyElements.add(makerNameElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerDesignation
                            
                                Map zeroDBS01AddInfo_Layout1MakerDesignationMap57 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerDesignationValue56 = DBS01ReportUtil.retrieveValueForElement(field.getMakerDesignation(), zeroDBS01AddInfo_Layout1MakerDesignationMap57);

                                    
                                        Context DBS01AddInfo_Layout1MakerDesignationContext55 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerDesignationContext55.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1MakerDesignationContext55);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1MakerDesignationContext55.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType makerDesignationValue = new StringItemType();
                                makerDesignationValue.setContextRef(DBS01AddInfo_Layout1MakerDesignationContext55);
                                
                                    makerDesignationValue.setValue(zeroDBS01AddInfo_Layout1MakerDesignationValue56);        
                                    
                                
                                JAXBElement<StringItemType> makerDesignationElement = instancObjectFactory.createMakerDesignation(makerDesignationValue);
                                bodyElements.add(makerDesignationElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerEmail
                            
                                Map zeroDBS01AddInfo_Layout1MakerEmailMap60 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerEmailValue59 = DBS01ReportUtil.retrieveValueForElement(field.getMakerEmail(), zeroDBS01AddInfo_Layout1MakerEmailMap60);

                                    
                                        Context DBS01AddInfo_Layout1MakerEmailContext58 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerEmailContext58.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1MakerEmailContext58);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1MakerEmailContext58.getId());
                                }
                                // create element JAXB Element
                    
                                MailAddress makerEmailValue = new MailAddress();
                                makerEmailValue.setContextRef(DBS01AddInfo_Layout1MakerEmailContext58);
                                
                                    makerEmailValue.setValue(zeroDBS01AddInfo_Layout1MakerEmailValue59);        
                                    
                                
                                JAXBElement<MailAddress> makerEmailElement = instancObjectFactory.createMakerEmail(makerEmailValue);
                                bodyElements.add(makerEmailElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerLandline
                            
                                Map zeroDBS01AddInfo_Layout1MakerLandlineMap63 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerLandlineValue62 = DBS01ReportUtil.retrieveValueForElement(field.getMakerLandline(), zeroDBS01AddInfo_Layout1MakerLandlineMap63);

                                    
                                        Context DBS01AddInfo_Layout1MakerLandlineContext61 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerLandlineContext61.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1MakerLandlineContext61);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1MakerLandlineContext61.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType makerLandlineValue = new StringItemType();
                                makerLandlineValue.setContextRef(DBS01AddInfo_Layout1MakerLandlineContext61);
                                
                                    makerLandlineValue.setValue(zeroDBS01AddInfo_Layout1MakerLandlineValue62);        
                                    
                                
                                JAXBElement<StringItemType> makerLandlineElement = instancObjectFactory.createMakerLandline(makerLandlineValue);
                                bodyElements.add(makerLandlineElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MakerMobile
                            
                                Map zeroDBS01AddInfo_Layout1MakerMobileMap66 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1MakerMobileValue65 = DBS01ReportUtil.retrieveValueForElement(field.getMakerMobile(), zeroDBS01AddInfo_Layout1MakerMobileMap66);

                                    
                                        Context DBS01AddInfo_Layout1MakerMobileContext64 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1MakerMobileContext64.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1MakerMobileContext64);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1MakerMobileContext64.getId());
                                }
                                // create element JAXB Element
                    
                                TelephoneNumber10DigitString makerMobileValue = new TelephoneNumber10DigitString();
                                makerMobileValue.setContextRef(DBS01AddInfo_Layout1MakerMobileContext64);
                                
                                    makerMobileValue.setValue(zeroDBS01AddInfo_Layout1MakerMobileValue65);        
                                    
                                
                                JAXBElement<TelephoneNumber10DigitString> makerMobileElement = instancObjectFactory.createMakerMobile(makerMobileValue);
                                bodyElements.add(makerMobileElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerName
                            
                                Map zeroDBS01AddInfo_Layout1CheckerNameMap69 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerNameValue68 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerName(), zeroDBS01AddInfo_Layout1CheckerNameMap69);

                                    
                                        Context DBS01AddInfo_Layout1CheckerNameContext67 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerNameContext67.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1CheckerNameContext67);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1CheckerNameContext67.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType checkerNameValue = new StringItemType();
                                checkerNameValue.setContextRef(DBS01AddInfo_Layout1CheckerNameContext67);
                                
                                    checkerNameValue.setValue(zeroDBS01AddInfo_Layout1CheckerNameValue68);        
                                    
                                
                                JAXBElement<StringItemType> checkerNameElement = instancObjectFactory.createCheckerName(checkerNameValue);
                                bodyElements.add(checkerNameElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerDesignation
                            
                                Map zeroDBS01AddInfo_Layout1CheckerDesignationMap72 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerDesignationValue71 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerDesignation(), zeroDBS01AddInfo_Layout1CheckerDesignationMap72);

                                    
                                        Context DBS01AddInfo_Layout1CheckerDesignationContext70 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerDesignationContext70.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1CheckerDesignationContext70);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1CheckerDesignationContext70.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType checkerDesignationValue = new StringItemType();
                                checkerDesignationValue.setContextRef(DBS01AddInfo_Layout1CheckerDesignationContext70);
                                
                                    checkerDesignationValue.setValue(zeroDBS01AddInfo_Layout1CheckerDesignationValue71);        
                                    
                                
                                JAXBElement<StringItemType> checkerDesignationElement = instancObjectFactory.createCheckerDesignation(checkerDesignationValue);
                                bodyElements.add(checkerDesignationElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerEmail
                            
                                Map zeroDBS01AddInfo_Layout1CheckerEmailMap75 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerEmailValue74 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerEmail(), zeroDBS01AddInfo_Layout1CheckerEmailMap75);

                                    
                                        Context DBS01AddInfo_Layout1CheckerEmailContext73 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerEmailContext73.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1CheckerEmailContext73);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1CheckerEmailContext73.getId());
                                }
                                // create element JAXB Element
                    
                                MailAddress checkerEmailValue = new MailAddress();
                                checkerEmailValue.setContextRef(DBS01AddInfo_Layout1CheckerEmailContext73);
                                
                                    checkerEmailValue.setValue(zeroDBS01AddInfo_Layout1CheckerEmailValue74);        
                                    
                                
                                JAXBElement<MailAddress> checkerEmailElement = instancObjectFactory.createCheckerEmail(checkerEmailValue);
                                bodyElements.add(checkerEmailElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckerLandline
                            
                                Map zeroDBS01AddInfo_Layout1CheckerLandlineMap78 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckerLandlineValue77 = DBS01ReportUtil.retrieveValueForElement(field.getCheckerLandline(), zeroDBS01AddInfo_Layout1CheckerLandlineMap78);

                                    
                                        Context DBS01AddInfo_Layout1CheckerLandlineContext76 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckerLandlineContext76.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1CheckerLandlineContext76);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1CheckerLandlineContext76.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType checkerLandlineValue = new StringItemType();
                                checkerLandlineValue.setContextRef(DBS01AddInfo_Layout1CheckerLandlineContext76);
                                
                                    checkerLandlineValue.setValue(zeroDBS01AddInfo_Layout1CheckerLandlineValue77);        
                                    
                                
                                JAXBElement<StringItemType> checkerLandlineElement = instancObjectFactory.createCheckerLandline(checkerLandlineValue);
                                bodyElements.add(checkerLandlineElement);
                            
                        
                        
                            // start create element for report of DBS01AddInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - CheckMobile
                            
                                Map zeroDBS01AddInfo_Layout1CheckMobileMap81 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBS01AddInfo_Layout1CheckMobileValue80 = DBS01ReportUtil.retrieveValueForElement(field.getCheckMobile(), zeroDBS01AddInfo_Layout1CheckMobileMap81);

                                    
                                        Context DBS01AddInfo_Layout1CheckMobileContext79 = DBS01ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBS01AddInfo_Layout1CheckMobileContext79.getId())) {
                                    contextElements.add(DBS01AddInfo_Layout1CheckMobileContext79);
                                    contextIdentifiers.add(DBS01AddInfo_Layout1CheckMobileContext79.getId());
                                }
                                // create element JAXB Element
                    
                                TelephoneNumber10DigitString checkMobileValue = new TelephoneNumber10DigitString();
                                checkMobileValue.setContextRef(DBS01AddInfo_Layout1CheckMobileContext79);
                                
                                    checkMobileValue.setValue(zeroDBS01AddInfo_Layout1CheckMobileValue80);        
                                    
                                
                                JAXBElement<TelephoneNumber10DigitString> checkMobileElement = instancObjectFactory.createCheckMobile(checkMobileValue);
                                bodyElements.add(checkMobileElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout1 if any typeMembers then List or Single
                DBS01FS_Layout1 dBS01FS_Layout1 = mainReportData.getDBS01FS_Layout1();
            
                
                    {
            
                    DBS01FS_Layout1 field = dBS01FS_Layout1;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR82 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR82 == null){
                                    INR82 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR82.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR82.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR82);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap84 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap84.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue85 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap84);
                            
                                if(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue85 != null && !"".equals(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue85)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext83 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap84 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext83.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext83);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext83.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType87 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType87.setContextRef(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext83);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType87.setValue(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue85);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement86 = instancObjectFactory.createInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType87);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement86);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap89 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap89.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue90 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap89);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue90 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue90)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext88 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap89 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext88.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext88);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext88.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType92 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType92.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext88);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType92.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue90);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement91 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType92);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement91);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap94 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap94.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue95 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap94);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue95 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue95)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext93 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap94 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext93.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext93);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext93.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType97 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType97.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext93);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType97.setValue(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue95);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement96 = instancObjectFactory.createRemarkForInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType97);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement96);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR98 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR98 == null){
                                    INR98 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR98.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR98.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR98);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap100 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap100.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue101 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap100);
                            
                                if(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue101 != null && !"".equals(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue101)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext99 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap100 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext99.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext99);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext99.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType103 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType103.setContextRef(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext99);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType103.setValue(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue101);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement102 = instancObjectFactory.createGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType103);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement102);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap105 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap105.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue106 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap105);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue106 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue106)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext104 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap105 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext104.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext104);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext104.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType108 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType108.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext104);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType108.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue106);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement107 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType108);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement107);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap110 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap110.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue111 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap110);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue111 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue111)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext109 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap110 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext109.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext109);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext109.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType113 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType113.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext109);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType113.setValue(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue111);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement112 = instancObjectFactory.createRemarkForGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType113);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement112);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR114 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR114 == null){
                                    INR114 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR114.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR114.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR114);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap116 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap116.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue117 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap116);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue117 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue117)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext115 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap116 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext115.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext115);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext115.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType119 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType119.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext115);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType119.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue117);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement118 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType119);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement118);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR120 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR120 == null){
                                    INR120 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR120.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR120.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR120);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap122 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap122.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue123 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap122);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue123 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue123)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext121 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap122 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext121.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext121);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext121.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType125 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType125.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext121);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType125.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue123);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement124 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType125);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement124);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap127 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap127.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue128 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap127);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue128 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue128)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext126 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap127 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext126.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext126);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext126.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType130 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType130.setContextRef(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext126);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType130.setValue(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue128);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement129 = instancObjectFactory.createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType130);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement129);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR131 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR131 == null){
                                    INR131 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR131.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR131.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR131);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap133 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap133.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue134 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap133);
                            
                                if(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue134 != null && !"".equals(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue134)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext132 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap133 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext132.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext132);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext132.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType136 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType136.setContextRef(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext132);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType136.setValue(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue134);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement135 = instancObjectFactory.createInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType136);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement135);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap138 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap138.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap138);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext137 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap138 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext137.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext137);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext137.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext137);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue139);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement140 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType141);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement140);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap143 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap143.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap143);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext142 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap143 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext142.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext142);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext142.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext142);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146.setValue(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue144);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement145 = instancObjectFactory.createRemarkForInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType146);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement145);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR147 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR147 == null){
                                    INR147 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR147.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR147.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR147);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap149 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap149.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue150 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap149);
                            
                                if(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue150 != null && !"".equals(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue150)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext148 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap149 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext148.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext148);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext148.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType152 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType152.setContextRef(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext148);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType152.setValue(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue150);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement151 = instancObjectFactory.createNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType152);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement151);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap154 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap154.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap154);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext153 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap154 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext153.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext153);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext153.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext153);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue155);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement156 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType157);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement156);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap159 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap159.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap159);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext158 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap159 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext158.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext158);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext158.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext158);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162.setValue(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue160);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement161 = instancObjectFactory.createRemarkForNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType162);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement161);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR163 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR163 == null){
                                    INR163 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR163.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR163.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR163);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap165 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap165.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue166 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap165);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue166 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue166)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext164 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap165 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext164.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext164);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext164.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType168 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType168.setContextRef(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext164);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType168.setValue(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue166);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement167 = instancObjectFactory.createNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType168);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement167);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap170 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap170.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap170);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext169 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap170 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext169.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext169);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext169.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext169);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue171);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement172 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType173);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement172);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap175 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap175.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue176 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap175);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue176 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue176)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext174 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap175 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext174.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext174);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext174.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType178 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType178.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext174);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType178.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue176);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement177 = instancObjectFactory.createRemarkForNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType178);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement177);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR179 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR179 == null){
                                    INR179 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR179.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR179.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR179);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap181 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap181.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap181);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext180 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap181 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext180.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext180);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext180.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext180);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue182);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement183 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType184);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement183);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR185 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR185 == null){
                                    INR185 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR185.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR185.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR185);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap187 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap187.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap187);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext186 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap187 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext186.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext186);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext186.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext186);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue188);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement189 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType190);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement189);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap192 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap192.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap192);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext191 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap192 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext191.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext191);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext191.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195.setContextRef(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext191);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195.setValue(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue193);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement194 = instancObjectFactory.createRemarkForFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType195);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement194);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR196 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR196 == null){
                                    INR196 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR196.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR196.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR196);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap198 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap198.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue199 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap198);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue199 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue199)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext197 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap198 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext197.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext197);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext197.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType201 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType201.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext197);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType201.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue199);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement200 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType201);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement200);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR202 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR202 == null){
                                    INR202 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR202.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR202.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR202);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap204 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap204.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue205 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap204);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue205 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue205)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext203 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap204 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext203.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext203);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext203.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType207 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType207.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext203);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType207.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue205);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement206 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType207);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement206);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap209 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap209.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue210 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap209);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue210 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue210)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext208 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap209 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext208.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext208);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext208.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType212 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType212.setContextRef(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext208);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType212.setValue(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue210);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement211 = instancObjectFactory.createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType212);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement211);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR213 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR213 == null){
                                    INR213 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR213.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR213.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR213);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap215 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap215.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue216 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap215);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue216 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue216)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext214 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap215 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext214.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext214);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext214.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType218 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType218.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext214);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType218.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue216);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement217 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType218);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement217);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR219 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR219 == null){
                                    INR219 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR219.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR219.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR219);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap221 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap221.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue222 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap221);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue222 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue222)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext220 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap221 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext220.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext220);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext220.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType224 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType224.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext220);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType224.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue222);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement223 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType224);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement223);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap226 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap226.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue227 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap226);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue227 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue227)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext225 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap226 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext225.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext225);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext225.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType229 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType229.setContextRef(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext225);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType229.setValue(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue227);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement228 = instancObjectFactory.createRemarkForProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType229);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement228);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR230 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR230 == null){
                                    INR230 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR230.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR230.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR230);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap232 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap232.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue233 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap232);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue233 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue233)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext231 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap232 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext231.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext231);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext231.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType235 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType235.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext231);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType235.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue233);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement234 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType235);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement234);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR236 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR236 == null){
                                    INR236 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR236.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR236.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR236);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap238 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap238.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue239 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap238);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue239 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue239)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext237 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap238 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext237.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext237);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext237.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType241 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType241.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext237);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType241.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue239);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement240 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType241);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement240);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap243 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap243.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue244 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap243);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue244 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue244)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext242 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap243 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext242.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext242);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext242.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType246 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType246.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext242);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType246.setValue(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue244);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement245 = instancObjectFactory.createRemarkForOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType246);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement245);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR247 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR247 == null){
                                    INR247 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR247.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR247.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR247);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap249 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap249.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue250 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap249);
                            
                                if(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue250 != null && !"".equals(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue250)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext248 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap249 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext248.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext248);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext248.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType252 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType252.setContextRef(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext248);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType252.setValue(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue250);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement251 = instancObjectFactory.createGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType252);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement251);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap254 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap254.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue255 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap254);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue255 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue255)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext253 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap254 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext253.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext253);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext253.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType257 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType257.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext253);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType257.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue255);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement256 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType257);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement256);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap259 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap259.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue260 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap259);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue260 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue260)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext258 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap259 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext258.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext258);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext258.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType262 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType262.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext258);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType262.setValue(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue260);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement261 = instancObjectFactory.createRemarkForGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType262);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement261);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR263 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR263 == null){
                                    INR263 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR263.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR263.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR263);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap265 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap265.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue266 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap265);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue266 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue266)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext264 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap265 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext264.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext264);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext264.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType268 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType268.setContextRef(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext264);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType268.setValue(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue266);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement267 = instancObjectFactory.createNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType268);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement267);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap270 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap270.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue271 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap270);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue271 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue271)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext269 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap270 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext269.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext269);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext269.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType273 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType273.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext269);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType273.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue271);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement272 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType273);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement272);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap275 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap275.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap275);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext274 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap275 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext274.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext274);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext274.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext274);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue276);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement277 = instancObjectFactory.createRemarkForNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType278);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement277);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR279 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR279 == null){
                                    INR279 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR279.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR279.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR279);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - StaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap281 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap281.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue282 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap281);
                            
                                if(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue282 != null && !"".equals(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue282)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext280 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap281 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext280.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext280);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext280.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType284 = new StringItemType();
                                    explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType284.setContextRef(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext280);
                                    
                                    
                                        explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType284.setValue(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue282);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement283 = instancObjectFactory.createStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType284);
                                    bodyElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement283);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap286 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap286.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap286);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext285 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap286 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext285.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext285);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext285.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext285);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue287);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement288 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType289);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement288);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForStaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap291 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap291.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue292 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap291);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue292 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue292)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext290 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap291 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext290.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext290);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext290.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType294 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType294.setContextRef(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext290);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType294.setValue(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue292);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement293 = instancObjectFactory.createRemarkForStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType294);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement293);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR295 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR295 == null){
                                    INR295 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR295.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR295.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR295);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap297 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap297.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap297);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext296 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap297 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext296.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext296);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext296.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext296);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue298);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement299 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType300);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement299);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR301 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR301 == null){
                                    INR301 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR301.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR301.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR301);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap303 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap303.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap303);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext302 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap303 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext302.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext302);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext302.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext302);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue304);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement305 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType306);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement305);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap308 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap308.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap308);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext307 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap308 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext307.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext307);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext307.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext307);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311.setValue(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue309);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement310 = instancObjectFactory.createRemarkForOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType311);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement310);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR312 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR312 == null){
                                    INR312 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR312.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR312.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR312);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap314 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap314.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue315 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap314);
                            
                                if(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue315 != null && !"".equals(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue315)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext313 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap314 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext313.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext313);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext313.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType317 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType317.setContextRef(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext313);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType317.setValue(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue315);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement316 = instancObjectFactory.createNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType317);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement316);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap319 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap319.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap319);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext318 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap319 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext318.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext318);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext318.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext318);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue320);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement321 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType322);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement321);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap324 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap324.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap324);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext323 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap324 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext323.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext323);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext323.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext323);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327.setValue(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue325);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement326 = instancObjectFactory.createRemarkForNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType327);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement326);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR328 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR328 == null){
                                    INR328 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR328.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR328.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR328);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap330 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap330.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue331 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap330);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue331 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue331)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext329 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap330 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext329.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext329);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext329.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType333 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType333.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext329);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType333.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue331);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement332 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType333);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement332);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR334 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR334 == null){
                                    INR334 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR334.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR334.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR334);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap336 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap336.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue337 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap336);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue337 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue337)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext335 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap336 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext335.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext335);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext335.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType339 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType339.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext335);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType339.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue337);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement338 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType339);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement338);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap341 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap341.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue342 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap341);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue342 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue342)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext340 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap341 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext340.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext340);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext340.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType344 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType344.setContextRef(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext340);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType344.setValue(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue342);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement343 = instancObjectFactory.createRemarkForLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType344);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement343);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR345 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR345 == null){
                                    INR345 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR345.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR345.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR345);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap347 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap347.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue348 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap347);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue348 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue348)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext346 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap347 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext346.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext346);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext346.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType350 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType350.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext346);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType350.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue348);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement349 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType350);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement349);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR351 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR351 == null){
                                    INR351 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR351.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR351.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR351);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap353 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap353.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue354 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap353);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue354 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue354)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext352 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap353 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext352.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext352);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext352.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType356 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType356.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext352);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType356.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue354);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement355 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType356);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement355);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap358 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap358.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue359 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap358);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue359 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue359)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext357 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap358 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext357.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext357);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext357.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType361 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType361.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext357);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType361.setValue(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue359);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement360 = instancObjectFactory.createRemarkForOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType361);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement360);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR362 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR362 == null){
                                    INR362 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR362.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR362.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR362);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap364 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap364.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue365 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap364);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue365 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue365)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext363 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap364 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext363.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext363);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext363.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType367 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType367.setContextRef(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext363);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType367.setValue(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue365);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement366 = instancObjectFactory.createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType367);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement366);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap369 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap369.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue370 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap369);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue370 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue370)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext368 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap369 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext368.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext368);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext368.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType372 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType372.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext368);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType372.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue370);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement371 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType372);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement371);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap374 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap374.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue375 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap374);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue375 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue375)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext373 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap374 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext373.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext373);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext373.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType377 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType377.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext373);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType377.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue375);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement376 = instancObjectFactory.createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType377);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement376);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR378 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR378 == null){
                                    INR378 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR378.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR378.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR378);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap380 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap380.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue381 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap380);
                            
                                if(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue381 != null && !"".equals(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue381)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext379 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap380 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext379.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext379);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext379.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType383 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType383.setContextRef(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext379);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType383.setValue(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue381);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement382 = instancObjectFactory.createExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType383);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement382);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap385 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap385.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue386 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap385);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue386 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue386)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext384 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap385 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext384.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext384);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext384.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType388 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType388.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext384);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType388.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue386);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement387 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType388);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement387);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap390 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap390.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap390);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext389 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap390 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext389.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext389);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext389.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393.setContextRef(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext389);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393.setValue(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue391);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement392 = instancObjectFactory.createRemarkForExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType393);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement392);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR394 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR394 == null){
                                    INR394 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR394.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR394.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR394);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - IncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap396 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap396.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue397 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap396);
                            
                                if(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue397 != null && !"".equals(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue397)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext395 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap396 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext395.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext395);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext395.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType399 = new StringItemType();
                                    explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType399.setContextRef(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext395);
                                    
                                    
                                        explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType399.setValue(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue397);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement398 = instancObjectFactory.createIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType399);
                                    bodyElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement398);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap401 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap401.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap401);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext400 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap401 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext400.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext400);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext400.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext400);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue402);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement403 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType404);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement403);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForIncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap406 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap406.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue407 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap406);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue407 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue407)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext405 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap406 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext405.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext405);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext405.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType409 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType409.setContextRef(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext405);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType409.setValue(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue407);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement408 = instancObjectFactory.createRemarkForIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType409);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement408);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR410 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR410 == null){
                                    INR410 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR410.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR410.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR410);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap412 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap412.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap412);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext411 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap412 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext411.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext411);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext411.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415.setContextRef(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext411);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415.setValue(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue413);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement414 = instancObjectFactory.createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType415);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement414);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap417 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap417.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue418 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap417);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue418 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue418)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext416 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap417 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext416.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext416);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext416.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType420 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType420.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext416);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType420.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue418);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement419 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType420);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement419);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap422 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap422.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue423 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap422);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue423 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue423)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext421 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap422 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext421.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext421);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext421.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType425 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType425.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext421);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType425.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue423);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement424 = instancObjectFactory.createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType425);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement424);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR426 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR426 == null){
                                    INR426 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR426.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR426.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR426);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap428 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap428.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap428);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext427 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap428 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext427.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext427);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext427.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext427);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue429);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement430 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType431);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement430);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR432 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR432 == null){
                                    INR432 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR432.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR432.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR432);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap434 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap434.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap434);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext433 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap434 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext433.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext433);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext433.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext433);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue435);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement436 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType437);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement436);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap439 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap439.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap439);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext438 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap439 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext438.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext438);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext438.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442.setContextRef(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext438);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442.setValue(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue440);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement441 = instancObjectFactory.createRemarkForDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType442);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement441);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR443 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR443 == null){
                                    INR443 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR443.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR443.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR443);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap445 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap445.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue446 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap445);
                            
                                if(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue446 != null && !"".equals(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue446)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext444 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap445 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext444.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext444);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext444.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType448 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType448.setContextRef(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext444);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType448.setValue(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue446);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement447 = instancObjectFactory.createRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType448);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement447);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap450 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap450.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap450);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext449 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap450 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext449.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext449);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext449.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext449);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue451);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement452 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType453);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement452);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForRetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap455 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap455.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap455);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext454 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap455 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext454.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext454);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext454.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458.setContextRef(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext454);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458.setValue(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue456);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement457 = instancObjectFactory.createRemarkForRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType458);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement457);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap460 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap460.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap460);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext459 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap460 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext459.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext459);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext459.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext459);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue461);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement462 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType463);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement462);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap465 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap465.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue466 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap465);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue466 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue466)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext464 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap465 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext464.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext464);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext464.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType468 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType468.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext464);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType468.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue466);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement467 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType468);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement467);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap470 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap470.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue471 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap470);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue471 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue471)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext469 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap470 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext469.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext469);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext469.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType473 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType473.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext469);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType473.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue471);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement472 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType473);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement472);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR474 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR474 == null){
                                    INR474 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR474.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR474.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR474);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap476 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap476.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap476);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext475 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap476 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext475.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext475);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext475.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext475);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue477);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement478 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType479);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement478);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap481 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap481.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue482 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap481);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue482 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue482)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext480 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap481 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext480.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext480);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext480.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType484 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType484.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext480);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType484.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue482);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement483 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType484);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement483);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap486 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap486.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue487 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap486);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue487 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue487)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext485 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap486 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext485.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext485);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext485.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType489 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType489.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext485);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType489.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue487);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement488 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType489);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement488);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR490 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR490 == null){
                                    INR490 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR490.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR490.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR490);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap492 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap492.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue493 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap492);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue493 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue493)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext491 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap492 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext491.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext491);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext491.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType495 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType495.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext491);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType495.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue493);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement494 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType495);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement494);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap497 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap497.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue498 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap497);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue498 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue498)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext496 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap497 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext496.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext496);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext496.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType500 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType500.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext496);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType500.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue498);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement499 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType500);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement499);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap502 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap502.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue503 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap502);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue503 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue503)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext501 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap502 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext501.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext501);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext501.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType505 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType505.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext501);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType505.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue503);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement504 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType505);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement504);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR506 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR506 == null){
                                    INR506 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR506.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR506.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR506);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap508 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap508.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue509 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap508);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue509 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue509)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext507 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap508 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext507.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext507);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext507.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType511 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType511.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext507);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType511.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue509);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement510 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType511);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement510);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR512 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR512 == null){
                                    INR512 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR512.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR512.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR512);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap514 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap514.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap514);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext513 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap514 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext513.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext513);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext513.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext513);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue515);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement516 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType517);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement516);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap519 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap519.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap519);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext518 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap519 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext518.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext518);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext518.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext518);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue520);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement521 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType522);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement521);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR523 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR523 == null){
                                    INR523 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR523.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR523.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR523);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap525 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap525.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue526 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap525);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue526 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue526)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext524 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap525 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext524.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext524);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext524.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType528 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType528.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext524);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType528.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue526);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement527 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType528);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement527);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap530 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap530.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap530);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext529 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap530 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext529.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext529);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext529.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext529);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue531);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement532 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType533);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement532);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap535 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap535.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap535);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext534 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap535 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext534.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext534);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext534.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext534);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue536);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement537 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType538);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement537);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR539 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR539 == null){
                                    INR539 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR539.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR539.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR539);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap541 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap541.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue542 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap541);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue542 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue542)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext540 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap541 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext540.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext540);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext540.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType544 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType544.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext540);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType544.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue542);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement543 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType544);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement543);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap546 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap546.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap546);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext545 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap546 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext545.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext545);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext545.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext545);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue547);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement548 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType549);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement548);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap551 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap551.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap551);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext550 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap551 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext550.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext550);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext550.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext550);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue552);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement553 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType554);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement553);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR555 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR555 == null){
                                    INR555 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR555.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR555.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR555);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap557 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap557.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue558 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap557);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue558 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue558)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext556 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap557 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext556.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext556);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext556.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType560 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType560.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext556);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType560.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue558);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement559 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType560);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement559);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR561 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR561 == null){
                                    INR561 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR561.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR561.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR561);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap563 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap563.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue564 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap563);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue564 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue564)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext562 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap563 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext562.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext562);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext562.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType566 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType566.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext562);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType566.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue564);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement565 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType566);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement565);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap568 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext567);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue569);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement570 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType571);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement570);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR572 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR572 == null){
                                    INR572 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR572.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR572.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR572);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap574 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap574.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue575 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap574);
                            
                                if(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue575 != null && !"".equals(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue575)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext573 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap574 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext573.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext573);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext573.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType577 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType577.setContextRef(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext573);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType577.setValue(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue575);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement576 = instancObjectFactory.createInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType577);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement576);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap579 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap579.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue580 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap579);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue580 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue580)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext578 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap579 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext578.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext578);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext578.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType582 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType582.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext578);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType582.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue580);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement581 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType582);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement581);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap584 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap584.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue585 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap584);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue585 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue585)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext583 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap584 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext583.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext583);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext583.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType587 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType587.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext583);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType587.setValue(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue585);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement586 = instancObjectFactory.createRemarkForInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType587);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement586);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR588 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR588 == null){
                                    INR588 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR588.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR588.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR588);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap590 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap590.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue591 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap590);
                            
                                if(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue591 != null && !"".equals(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue591)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext589 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap590 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext589.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext589);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext589.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType593 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType593.setContextRef(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext589);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType593.setValue(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue591);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement592 = instancObjectFactory.createGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType593);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement592);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap595 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap595.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue596 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap595);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue596 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue596)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext594 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap595 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext594.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext594);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext594.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType598 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType598.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext594);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType598.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue596);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement597 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType598);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement597);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap600 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap600.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue601 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap600);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue601 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue601)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext599 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap600 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext599.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext599);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext599.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType603 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType603.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext599);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType603.setValue(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue601);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement602 = instancObjectFactory.createRemarkForGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType603);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement602);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR604 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR604 == null){
                                    INR604 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR604.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR604.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR604);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap606 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap606.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue607 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap606);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue607 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue607)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext605 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap606 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext605.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext605);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext605.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType609 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType609.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext605);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType609.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue607);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement608 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType609);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement608);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR610 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR610 == null){
                                    INR610 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR610.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR610.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR610);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap612 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap612.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue613 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap612);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue613 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue613)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext611 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap612 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext611.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext611);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext611.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType615 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType615.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext611);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType615.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue613);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement614 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType615);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement614);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap617 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap617.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue618 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap617);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue618 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue618)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext616 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap617 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext616.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext616);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext616.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType620 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType620.setContextRef(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext616);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType620.setValue(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue618);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement619 = instancObjectFactory.createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType620);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement619);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR621 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR621 == null){
                                    INR621 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR621.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR621.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR621);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap623 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap623.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue624 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap623);
                            
                                if(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue624 != null && !"".equals(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue624)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext622 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap623 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext622.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext622);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext622.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType626 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType626.setContextRef(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext622);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType626.setValue(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue624);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement625 = instancObjectFactory.createInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType626);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement625);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap628 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap628.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue629 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap628);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue629 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue629)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext627 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap628 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext627.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext627);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext627.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType631 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType631.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext627);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType631.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue629);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement630 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType631);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement630);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap633 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap633.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue634 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap633);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue634 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue634)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext632 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap633 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext632.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext632);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext632.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType636 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType636.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext632);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType636.setValue(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue634);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement635 = instancObjectFactory.createRemarkForInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType636);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement635);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR637 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR637 == null){
                                    INR637 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR637.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR637.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR637);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap639 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap639.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue640 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap639);
                            
                                if(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue640 != null && !"".equals(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue640)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext638 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap639 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext638.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext638);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext638.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType642 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType642.setContextRef(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext638);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType642.setValue(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue640);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement641 = instancObjectFactory.createNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType642);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement641);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap644 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap644.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue645 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap644);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue645 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue645)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext643 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap644 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext643.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext643);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext643.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType647 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType647.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext643);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType647.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue645);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement646 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType647);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement646);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap649 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap649.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue650 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap649);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue650 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue650)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext648 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap649 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext648.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext648);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext648.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType652 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType652.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext648);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType652.setValue(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue650);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement651 = instancObjectFactory.createRemarkForNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType652);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement651);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR653 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR653 == null){
                                    INR653 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR653.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR653.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR653);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap655 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap655.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue656 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap655);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue656 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue656)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext654 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap655 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext654.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext654);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext654.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType658 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType658.setContextRef(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext654);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType658.setValue(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue656);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement657 = instancObjectFactory.createNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType658);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement657);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap660 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap660.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue661 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap660);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue661 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue661)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext659 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap660 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext659.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext659);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext659.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType663 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType663.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext659);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType663.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue661);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement662 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType663);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement662);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap665 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap665.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue666 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap665);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue666 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue666)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext664 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap665 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext664.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext664);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext664.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType668 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType668.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext664);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType668.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue666);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement667 = instancObjectFactory.createRemarkForNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType668);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement667);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR669 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR669 == null){
                                    INR669 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR669.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR669.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR669);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap671 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap671.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap671);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext670 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap671 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext670.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext670);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext670.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext670);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue672);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement673 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType674);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement673);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR675 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR675 == null){
                                    INR675 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR675.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR675.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR675);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap677 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap677.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap677);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext676 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap677 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext676.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext676);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext676.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext676);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue678);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement679 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType680);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement679);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap682 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap682.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue683 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap682);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue683 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue683)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext681 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap682 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext681.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext681);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext681.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType685 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType685.setContextRef(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext681);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType685.setValue(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue683);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement684 = instancObjectFactory.createRemarkForFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType685);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement684);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR686 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR686 == null){
                                    INR686 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR686.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR686.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR686);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap688 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap688.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue689 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap688);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue689 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue689)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext687 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap688 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext687.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext687);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext687.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType691 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType691.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext687);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType691.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue689);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement690 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType691);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement690);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR692 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR692 == null){
                                    INR692 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR692.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR692.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR692);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap694 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap694.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue695 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap694);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue695 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue695)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext693 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap694 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext693.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext693);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext693.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType697 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType697.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext693);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType697.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue695);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement696 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType697);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement696);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap699 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap699.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue700 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap699);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue700 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue700)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext698 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap699 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext698.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext698);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext698.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType702 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType702.setContextRef(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext698);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType702.setValue(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue700);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement701 = instancObjectFactory.createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType702);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement701);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR703 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR703 == null){
                                    INR703 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR703.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR703.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR703);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap705 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap705.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue706 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap705);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue706 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue706)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext704 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap705 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext704.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext704);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext704.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType708 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType708.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext704);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType708.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue706);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement707 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType708);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement707);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR709 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR709 == null){
                                    INR709 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR709.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR709.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR709);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap711 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap711.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue712 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap711);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue712 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue712)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext710 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap711 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext710.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext710);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext710.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType714 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType714.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext710);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType714.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue712);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement713 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType714);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement713);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap716 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap716.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue717 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap716);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue717 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue717)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext715 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap716 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext715.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext715);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext715.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType719 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType719.setContextRef(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext715);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType719.setValue(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue717);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement718 = instancObjectFactory.createRemarkForProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType719);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement718);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR720 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR720 == null){
                                    INR720 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR720.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR720.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR720);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap722 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap722.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue723 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap722);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue723 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue723)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext721 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap722 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext721.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext721);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext721.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType725 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType725.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext721);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType725.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue723);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement724 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType725);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR726 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR726 == null){
                                    INR726 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR726.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR726.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR726);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap728 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap728.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue729 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap728);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue729 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue729)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext727 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap728 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext727.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext727);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext727.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType731 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType731.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext727);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType731.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue729);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement730 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType731);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement730);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap733 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap733.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue734 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap733);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue734 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue734)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext732 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap733 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext732.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext732);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext732.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType736 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType736.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext732);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType736.setValue(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue734);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement735 = instancObjectFactory.createRemarkForOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType736);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement735);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR737 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR737 == null){
                                    INR737 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR737.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR737.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR737);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap739 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap739.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue740 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap739);
                            
                                if(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue740 != null && !"".equals(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue740)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext738 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap739 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext738.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext738);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext738.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType742 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType742.setContextRef(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext738);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType742.setValue(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue740);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement741 = instancObjectFactory.createGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType742);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement741);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap744 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap744.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue745 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap744);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue745 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue745)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext743 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap744 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext743.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext743);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext743.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType747 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType747.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext743);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType747.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue745);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement746 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType747);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement746);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap749 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap749.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue750 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap749);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue750 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue750)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext748 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap749 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext748.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext748);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext748.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType752 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType752.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext748);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType752.setValue(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue750);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement751 = instancObjectFactory.createRemarkForGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType752);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement751);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR753 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR753 == null){
                                    INR753 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR753.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR753.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR753);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap755 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap755.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue756 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap755);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue756 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue756)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext754 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap755 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext754.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext754);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext754.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType758 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType758.setContextRef(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext754);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType758.setValue(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue756);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement757 = instancObjectFactory.createNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType758);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement757);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap760 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap760.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue761 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap760);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue761 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue761)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext759 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap760 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext759.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext759);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext759.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType763 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType763.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext759);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType763.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue761);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement762 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType763);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement762);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap765 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap765.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap765);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext764 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap765 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext764.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext764);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext764.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext764);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue766);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement767 = instancObjectFactory.createRemarkForNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType768);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement767);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR769 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR769 == null){
                                    INR769 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR769.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR769.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR769);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - StaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap771 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap771.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue772 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap771);
                            
                                if(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue772 != null && !"".equals(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue772)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext770 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap771 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext770.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext770);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext770.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType774 = new StringItemType();
                                    explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType774.setContextRef(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext770);
                                    
                                    
                                        explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType774.setValue(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue772);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement773 = instancObjectFactory.createStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType774);
                                    bodyElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement773);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap776 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap776.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue777 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap776);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue777 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue777)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext775 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap776 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext775.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext775);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext775.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType779 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType779.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext775);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType779.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue777);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement778 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType779);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement778);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForStaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap781 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap781.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue782 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap781);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue782 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue782)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext780 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap781 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext780.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext780);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext780.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType784 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType784.setContextRef(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext780);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType784.setValue(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue782);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement783 = instancObjectFactory.createRemarkForStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType784);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement783);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR785 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR785 == null){
                                    INR785 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR785.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR785.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR785);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap787 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap787.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap787);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext786 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap787 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext786.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext786);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext786.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext786);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue788);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement789 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType790);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement789);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR791 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR791 == null){
                                    INR791 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR791.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR791.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR791);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap793 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap793.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap793);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext792 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap793 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext792.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext792);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext792.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext792);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue794);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement795 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType796);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement795);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap798 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap798.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue799 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap798);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue799 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue799)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext797 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap798 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext797.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext797);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext797.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType801 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType801.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext797);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType801.setValue(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue799);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement800 = instancObjectFactory.createRemarkForOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType801);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement800);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR802 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR802 == null){
                                    INR802 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR802.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR802.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR802);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap804 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap804.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue805 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap804);
                            
                                if(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue805 != null && !"".equals(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue805)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext803 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap804 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext803.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext803);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext803.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType807 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType807.setContextRef(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext803);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType807.setValue(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue805);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement806 = instancObjectFactory.createNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType807);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement806);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap809 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap809.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue810 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap809);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue810 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue810)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext808 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap809 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext808.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext808);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext808.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType812 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType812.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext808);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType812.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue810);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement811 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType812);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement811);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap814 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap814.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue815 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap814);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue815 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue815)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext813 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap814 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext813.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext813);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext813.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType817 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType817.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext813);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType817.setValue(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue815);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement816 = instancObjectFactory.createRemarkForNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType817);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement816);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR818 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR818 == null){
                                    INR818 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR818.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR818.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR818);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap820 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap820.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue821 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap820);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue821 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue821)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext819 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap820 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext819.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext819);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext819.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType823 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType823.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext819);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType823.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue821);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement822 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType823);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement822);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR824 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR824 == null){
                                    INR824 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR824.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR824.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR824);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap826 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap826.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue827 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap826);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue827 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue827)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext825 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap826 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext825.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext825);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext825.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType829 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType829.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext825);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType829.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue827);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement828 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType829);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement828);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap831 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap831.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue832 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap831);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue832 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue832)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext830 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap831 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext830.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext830);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext830.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType834 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType834.setContextRef(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext830);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType834.setValue(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue832);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement833 = instancObjectFactory.createRemarkForLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType834);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement833);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR835 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR835 == null){
                                    INR835 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR835.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR835.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR835);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap837 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap837.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue838 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap837);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue838 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue838)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext836 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap837 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext836.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext836);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext836.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType840 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType840.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext836);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType840.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue838);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement839 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType840);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement839);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR841 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR841 == null){
                                    INR841 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR841.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR841.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR841);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap843 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap843.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue844 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap843);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue844 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue844)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext842 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap843 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext842.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext842);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext842.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType846 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType846.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext842);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType846.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue844);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement845 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType846);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement845);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap848 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap848.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue849 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap848);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue849 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue849)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext847 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap848 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext847.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext847);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext847.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType851 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType851.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext847);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType851.setValue(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue849);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement850 = instancObjectFactory.createRemarkForOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType851);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement850);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR852 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR852 == null){
                                    INR852 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR852.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR852.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR852);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap854 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap854.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue855 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap854);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue855 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue855)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext853 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap854 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext853.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext853);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext853.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType857 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType857.setContextRef(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext853);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType857.setValue(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue855);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement856 = instancObjectFactory.createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType857);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement856);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap859 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap859.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue860 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap859);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue860 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue860)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext858 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap859 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext858.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext858);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext858.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType862 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType862.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext858);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType862.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue860);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement861 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType862);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement861);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap864 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap864.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue865 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap864);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue865 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue865)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext863 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap864 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext863.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext863);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext863.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType867 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType867.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext863);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType867.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue865);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement866 = instancObjectFactory.createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType867);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement866);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR868 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR868 == null){
                                    INR868 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR868.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR868.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR868);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap870 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap870.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue871 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap870);
                            
                                if(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue871 != null && !"".equals(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue871)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext869 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap870 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext869.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext869);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext869.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType873 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType873.setContextRef(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext869);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType873.setValue(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue871);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement872 = instancObjectFactory.createExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType873);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement872);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap875 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap875.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue876 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap875);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue876 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue876)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext874 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap875 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext874.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext874);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext874.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType878 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType878.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext874);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType878.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue876);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement877 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType878);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement877);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap880 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap880.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap880);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext879 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap880 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext879.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext879);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext879.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883.setContextRef(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext879);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883.setValue(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue881);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement882 = instancObjectFactory.createRemarkForExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType883);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement882);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR884 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR884 == null){
                                    INR884 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR884.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR884.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR884);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - IncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap886 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap886.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue887 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap886);
                            
                                if(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue887 != null && !"".equals(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue887)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext885 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap886 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext885.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext885);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext885.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType889 = new StringItemType();
                                    explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType889.setContextRef(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext885);
                                    
                                    
                                        explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType889.setValue(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue887);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement888 = instancObjectFactory.createIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType889);
                                    bodyElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement888);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap891 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap891.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue892 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap891);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue892 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue892)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext890 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap891 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext890.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext890);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext890.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType894 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType894.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext890);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType894.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue892);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement893 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType894);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement893);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForIncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap896 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap896.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue897 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap896);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue897 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue897)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext895 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap896 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext895.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext895);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext895.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType899 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType899.setContextRef(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext895);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType899.setValue(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue897);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement898 = instancObjectFactory.createRemarkForIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType899);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement898);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR900 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR900 == null){
                                    INR900 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR900.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR900.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR900);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap902 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap902.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap902);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext901 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap902 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext901.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext901);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext901.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905.setContextRef(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext901);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905.setValue(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue903);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement904 = instancObjectFactory.createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType905);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement904);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap907 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap907.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue908 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap907);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue908 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue908)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext906 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap907 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext906.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext906);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext906.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType910 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType910.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext906);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType910.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue908);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement909 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType910);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement909);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap912 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap912.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue913 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap912);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue913 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue913)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext911 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap912 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext911.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext911);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext911.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType915 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType915.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext911);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType915.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue913);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement914 = instancObjectFactory.createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType915);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement914);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR916 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR916 == null){
                                    INR916 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR916.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR916.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR916);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap918 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap918.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap918);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext917 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap918 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext917.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext917);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext917.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext917);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue919);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement920 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType921);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement920);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR922 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR922 == null){
                                    INR922 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR922.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR922.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR922);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap924 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap924.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap924);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext923 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap924 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext923.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext923);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext923.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext923);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue925);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement926 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType927);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement926);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap929 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap929.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue930 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap929);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue930 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue930)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext928 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap929 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext928.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext928);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext928.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType932 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType932.setContextRef(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext928);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType932.setValue(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue930);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement931 = instancObjectFactory.createRemarkForDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType932);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement931);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR933 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR933 == null){
                                    INR933 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR933.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR933.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR933);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap935 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap935.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue936 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap935);
                            
                                if(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue936 != null && !"".equals(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue936)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext934 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap935 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext934.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext934);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext934.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType938 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType938.setContextRef(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext934);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType938.setValue(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue936);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement937 = instancObjectFactory.createRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType938);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement937);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap940 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap940.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue941 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap940);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue941 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue941)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext939 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap940 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext939.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext939);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext939.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType943 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType943.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext939);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType943.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue941);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement942 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType943);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement942);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForRetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap945 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap945.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue946 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap945);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue946 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue946)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext944 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap945 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext944.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext944);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext944.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType948 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType948.setContextRef(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext944);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType948.setValue(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue946);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement947 = instancObjectFactory.createRemarkForRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType948);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement947);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap950 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap950.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue951 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap950);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue951 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue951)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext949 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap950 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext949.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext949);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext949.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType953 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType953.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext949);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType953.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue951);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement952 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType953);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement952);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap955 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap955.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue956 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap955);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue956 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue956)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext954 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap955 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext954.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext954);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext954.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType958 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType958.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext954);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType958.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue956);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement957 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType958);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement957);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap960 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap960.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue961 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap960);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue961 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue961)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext959 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap960 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext959.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext959);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext959.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType963 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType963.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext959);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType963.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue961);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement962 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType963);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement962);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR964 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR964 == null){
                                    INR964 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR964.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR964.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR964);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap966 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap966.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap966);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext965 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap966 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext965.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext965);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext965.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext965);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue967);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement968 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType969);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement968);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap971 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap971.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue972 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap971);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue972 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue972)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext970 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap971 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext970.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext970);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext970.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType974 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType974.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext970);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType974.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue972);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement973 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType974);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement973);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap976 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap976.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue977 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap976);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue977 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue977)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext975 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap976 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext975.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext975);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext975.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType979 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType979.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext975);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType979.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue977);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement978 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType979);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement978);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR980 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR980 == null){
                                    INR980 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR980.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR980.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR980);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap982 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap982.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue983 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap982);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue983 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue983)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext981 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap982 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext981.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext981);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext981.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType985 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType985.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext981);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType985.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue983);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement984 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType985);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement984);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap987 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap987.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue988 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap987);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue988 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue988)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext986 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap987 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext986.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext986);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext986.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType990 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType990.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext986);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType990.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue988);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement989 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType990);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement989);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap992 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap992.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue993 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap992);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue993 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue993)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext991 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap992 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext991.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext991);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext991.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType995 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType995.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext991);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType995.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue993);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement994 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType995);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement994);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR996 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR996 == null){
                                    INR996 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR996.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR996.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR996);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap998 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap998.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue999 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap998);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue999 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue999)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext997 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap998 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext997.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext997);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext997.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1001 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1001.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext997);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1001.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue999);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1000 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1001);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1000);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1002 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1002 == null){
                                    INR1002 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1002.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1002.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1002);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1004 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1004.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1005 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1004);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1005 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1005)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1003 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1004 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1003.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1003);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1003.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1007 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1007.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1003);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1007.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1005);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1006 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1007);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1006);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1009 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1009.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1010 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1009);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1010 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1010)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1008 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1009 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1008.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1008);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1012 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1012.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1008);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1012.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1011 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1012);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1013 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1013 == null){
                                    INR1013 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1013.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1013.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1013);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1015 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1015.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1016 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1015);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1016 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1016)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1014 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1015 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1014.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1014);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1014.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1018 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1018.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1014);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1018.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1016);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1017 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1018);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1017);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1020 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1020.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1021 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1020);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1021 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1021)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1019 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1020 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1019.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1019);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1019.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1023 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1023.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1019);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1023.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1021);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1022 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1023);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1022);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1025 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1025.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1026 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1025);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1026 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1026)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1024 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1025 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1024.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1024);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1024.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1028 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1028.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1024);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1028.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1026);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1027 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1028);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1027);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1029 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1029 == null){
                                    INR1029 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1029.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1029.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1029);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1031 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1031.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1032 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1031);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1032 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1032)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1030 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1031 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1030.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1030);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1030.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1034 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1034.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1030);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1034.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1032);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1033 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1034);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1033);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1036 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1036.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1037 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1036);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1037 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1037)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1035 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1036 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1035.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1035);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1035.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1039 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1039.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1035);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1039.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersValue1037);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1038 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType1039);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisOtherBanksOrDepositTakersMembersElement1038);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1041 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1041.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1042 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1041);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1042 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1042)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1040 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1041 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1040.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1040);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1040.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1044 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1044.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1040);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1044.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1042);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1043 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1044);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1043);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1045 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1045 == null){
                                    INR1045 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1045.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1045.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1045);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1047 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1047.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1048 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1047);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1048 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1048)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1046 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1047 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1046.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1046);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1046.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1050 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1050.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1046);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1050.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1048);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1049 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1050);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1049);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1051 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1051 == null){
                                    INR1051 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1051.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1051.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1051);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1053 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1053.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1054 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1053);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1054 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1054)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1052 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1053 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1052.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1052);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1052.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1056 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1056.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1052);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1056.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1054);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1055 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1056);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1055);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1058 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1057);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue1059);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1060 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType1061);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement1060);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR1062 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1062 == null){
                                    INR1062 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1062.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1062.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1062);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1064 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1064.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1065 = DBS01ReportUtil.retrieveValueForElement(field.getInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1064);
                            
                                if(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1065 != null && !"".equals(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1065)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1063 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisMap1064 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1063.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1063);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1063.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1067 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1067.setContextRef(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisContext1063);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1067.setValue(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberValue1065);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberElement1066 = instancObjectFactory.createInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberDataType1067);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestIncomeReportedForFSIParameterAxisFSMemberElement1066);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1069 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1069.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1070 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1069);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1070 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1070)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1068 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1069 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1068.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1068);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1068.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1072 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1072.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1068);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1072.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1070);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1071 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1072);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1071);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1074 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1074.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1075 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1074);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1075 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1075)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1073 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisMap1074 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1073.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1073);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1073.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1077 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1077.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisContext1073);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1077.setValue(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberValue1075);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberElement1076 = instancObjectFactory.createRemarkForInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberDataType1077);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestIncomeReportedForFSIParameterAxisFSMemberElement1076);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1078 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1078 == null){
                                    INR1078 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1078.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1078.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1078);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1080 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1080.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1081 = DBS01ReportUtil.retrieveValueForElement(field.getGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1080);
                            
                                if(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1081 != null && !"".equals(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1081)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1079 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisMap1080 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1079.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1079);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1079.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1083 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1083.setContextRef(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisContext1079);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1083.setValue(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1081);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1082 = instancObjectFactory.createGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1083);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1082);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1085 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1085.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1086 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1085);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1086 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1086)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1084 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1085 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1084.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1084);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1084.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1088 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1088.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1084);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1088.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1086);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1087 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1088);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1087);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1090 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1090.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1091 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1090);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1091 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1091)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1089 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisMap1090 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1089.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1089);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1089.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1093 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1093.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisContext1089);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1093.setValue(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberValue1091);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1092 = instancObjectFactory.createRemarkForGrossInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberDataType1093);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossInterestIncomeReportedForFSIParameterAxisFSMemberElement1092);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1094 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1094 == null){
                                    INR1094 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1094.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1094.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1094);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1096 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1096.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1097 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1096);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1097 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1097)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1095 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1096 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1095.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1095);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1095.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1099 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1099.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1095);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1099.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1097);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1098 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1099);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1098);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1100 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1100 == null){
                                    INR1100 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1100.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1100.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1100);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1102 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1102.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1103 = DBS01ReportUtil.retrieveValueForElement(field.getProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1102);
                            
                                if(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1103 != null && !"".equals(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1103)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1101 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1102 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1101.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1101);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1101.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1105 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1105.setContextRef(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1101);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1105.setValue(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1103);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1104 = instancObjectFactory.createProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1105);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1104);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1107 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1107.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1108 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1107);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1108 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1108)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1106 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisMap1107 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1106.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1106);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1106.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1110 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1110.setContextRef(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisContext1106);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1110.setValue(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberValue1108);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1109 = instancObjectFactory.createRemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberDataType1110);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProvisionsForAccruedInterestOnNonperformingAssetsReportedForFSIParameterAxisFSMemberElement1109);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1111 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1111 == null){
                                    INR1111 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1111.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1111.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1111);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - InterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1113 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1113.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1114 = DBS01ReportUtil.retrieveValueForElement(field.getInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1113);
                            
                                if(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1114 != null && !"".equals(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1114)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1112 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisMap1113 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1112.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1112);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1112.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1116 = new StringItemType();
                                    explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1116.setContextRef(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisContext1112);
                                    
                                    
                                        explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1116.setValue(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberValue1114);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberElement1115 = instancObjectFactory.createInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberDataType1116);
                                    bodyElements.add(explictMember1DBS01FS_Layout1InterestExpenseReportedForFSIParameterAxisFSMemberElement1115);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1118 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1118.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1119 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1118);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1119 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1119)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1117 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1118 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1117.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1117);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1117.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1121 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1121.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1117);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1121.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1119);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1120 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1121);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1120);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForInterestExpenseReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1123 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1123.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1124 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForInterestExpenseReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1123);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1124 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1124)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1122 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisMap1123 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1122.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1122);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1122.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1126 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1126.setContextRef(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisContext1122);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1126.setValue(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberValue1124);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberElement1125 = instancObjectFactory.createRemarkForInterestExpenseReportedForFSI(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberDataType1126);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForInterestExpenseReportedForFSIParameterAxisFSMemberElement1125);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1127 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1127 == null){
                                    INR1127 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1127.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1127.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1127);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1129 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1129.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1130 = DBS01ReportUtil.retrieveValueForElement(field.getNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1129);
                            
                                if(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1130 != null && !"".equals(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1130)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1128 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisMap1129 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1128.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1128);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1128.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1132 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1132.setContextRef(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisContext1128);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1132.setValue(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberValue1130);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberElement1131 = instancObjectFactory.createNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1132);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetInterestIncomeReportedForFSIParameterAxisFSMemberElement1131);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1134 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1134.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1135 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1134);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1135 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1135)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1133 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1134 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1133.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1133);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1133.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1137 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1137.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1133);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1137.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1135);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1136 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1137);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetInterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1139 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1139.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1140 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetInterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1139);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1140 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1140)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1138 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisMap1139 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1138.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1138);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1138.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1142 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1142.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisContext1138);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1142.setValue(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberValue1140);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberElement1141 = instancObjectFactory.createRemarkForNetInterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberDataType1142);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetInterestIncomeReportedForFSIParameterAxisFSMemberElement1141);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1143 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1143 == null){
                                    INR1143 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1143.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1143.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1143);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1145 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1145.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1146 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1145);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1146 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1146)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1144 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisMap1145 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1144.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1144);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1144.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1148 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1148.setContextRef(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisContext1144);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1148.setValue(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberValue1146);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberElement1147 = instancObjectFactory.createNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1148);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestIncomeReportedForFSIParameterAxisFSMemberElement1147);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1150 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1150.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1151 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1150);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1151 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1151)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1149 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1150 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1149.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1149);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1149.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1153 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1153.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1149);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1153.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1151);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1152 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1153);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1155 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1155.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1156 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1155);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1156 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1156)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1154 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisMap1155 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1154.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1154);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1154.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1158 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1158.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisContext1154);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1158.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberValue1156);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberElement1157 = instancObjectFactory.createRemarkForNoninterestIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberDataType1158);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestIncomeReportedForFSIParameterAxisFSMemberElement1157);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1159 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1159 == null){
                                    INR1159 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1159.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1159.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1159);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1161 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1161.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1162 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1161);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1162 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1162)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1160 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1161 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1160.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1160);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1160.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1164 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1164.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1160);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1164.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1162);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1163 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1164);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1163);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1165 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1165 == null){
                                    INR1165 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1165.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1165.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1165);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1167 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1167.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1168 = DBS01ReportUtil.retrieveValueForElement(field.getFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1167);
                            
                                if(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1168 != null && !"".equals(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1168)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1166 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisMap1167 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1166.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1166);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1166.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1170 = new StringItemType();
                                    explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1170.setContextRef(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisContext1166);
                                    
                                    
                                        explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1170.setValue(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1168);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1169 = instancObjectFactory.createFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1170);
                                    bodyElements.add(explictMember1DBS01FS_Layout1FeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1169);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFeesAndCommissionsReceivableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1172 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1172.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1173 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFeesAndCommissionsReceivableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1172);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1173 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1173)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1171 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisMap1172 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1171.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1171);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1171.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1175 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1175.setContextRef(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisContext1171);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1175.setValue(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberValue1173);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1174 = instancObjectFactory.createRemarkForFeesAndCommissionsReceivableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberDataType1175);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForFeesAndCommissionsReceivableReportedForFSIParameterAxisFSMemberElement1174);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1176 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1176 == null){
                                    INR1176 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1176.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1176.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1176);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1178 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1178.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1179 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1178);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1179 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1179)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1177 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1178 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1177.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1177);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1177.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1181 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1181.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1177);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1181.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1179);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1180 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1181);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1180);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1182 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1182 == null){
                                    INR1182 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1182.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1182.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1182);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1184 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1184.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1185 = DBS01ReportUtil.retrieveValueForElement(field.getGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1184);
                            
                                if(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1185 != null && !"".equals(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1185)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1183 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1184 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1183.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1183);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1183.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1187 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1187.setContextRef(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1183);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1187.setValue(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1185);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1186 = instancObjectFactory.createGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1187);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1186);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1189 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1189.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1190 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1189);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1190 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1190)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1188 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisMap1189 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1188.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1188);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1188.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1192 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1192.setContextRef(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisContext1188);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1192.setValue(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberValue1190);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1191 = instancObjectFactory.createRemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberDataType1192);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGainsOrLossesOnFinancialInstrumentsReportedForFSIParameterAxisFSMemberElement1191);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1193 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1193 == null){
                                    INR1193 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1193.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1193.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1193);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1195 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1195.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1196 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1195);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1196 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1196)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1194 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1195 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1194.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1194);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1194.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1198 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1198.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1194);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1198.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1196);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1197 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1198);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1197);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1199 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1199 == null){
                                    INR1199 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1199.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1199.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1199);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1201 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1201.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1202 = DBS01ReportUtil.retrieveValueForElement(field.getProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1201);
                            
                                if(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1202 != null && !"".equals(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1202)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1200 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisMap1201 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1200.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1200);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1200.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1204 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1204.setContextRef(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisContext1200);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1204.setValue(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberValue1202);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1203 = instancObjectFactory.createProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1204);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ProRatedEarningsReportedForFSIParameterAxisFSMemberElement1203);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForProRatedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1206 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1206.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1207 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForProRatedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1206);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1207 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1207)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1205 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisMap1206 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1205.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1205);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1205.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1209 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1209.setContextRef(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisContext1205);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1209.setValue(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberValue1207);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberElement1208 = instancObjectFactory.createRemarkForProRatedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberDataType1209);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForProRatedEarningsReportedForFSIParameterAxisFSMemberElement1208);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1210 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1210 == null){
                                    INR1210 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1210.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1210.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1210);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1212 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1212.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1213 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1212);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1213 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1213)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1211 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1212 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1211.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1211);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1211.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1215 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1215.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1211);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1215.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1213);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1214 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1215);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1214);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1216 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1216 == null){
                                    INR1216 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1216.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1216.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1216);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1218 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1218.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1219 = DBS01ReportUtil.retrieveValueForElement(field.getOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1218);
                            
                                if(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1219 != null && !"".equals(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1219)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1217 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisMap1218 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1217.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1217);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1217.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1221 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1221.setContextRef(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisContext1217);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1221.setValue(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberValue1219);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1220 = instancObjectFactory.createOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberDataType1221);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherIncomeReportedForFSIParameterAxisFSMemberElement1220);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1223 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1223.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1224 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1223);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1224 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1224)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1222 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisMap1223 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1222.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1222);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1222.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1226 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1226.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisContext1222);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1226.setValue(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberValue1224);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberElement1225 = instancObjectFactory.createRemarkForOtherIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberDataType1226);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherIncomeReportedForFSIParameterAxisFSMemberElement1225);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1227 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1227 == null){
                                    INR1227 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1227.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1227.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1227);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - GrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1229 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1229.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1230 = DBS01ReportUtil.retrieveValueForElement(field.getGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1229);
                            
                                if(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1230 != null && !"".equals(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1230)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1228 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisMap1229 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1228.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1228);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1228.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1232 = new StringItemType();
                                    explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1232.setContextRef(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisContext1228);
                                    
                                    
                                        explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1232.setValue(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberValue1230);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberElement1231 = instancObjectFactory.createGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberDataType1232);
                                    bodyElements.add(explictMember1DBS01FS_Layout1GrossIncomeReportedForFSIParameterAxisFSMemberElement1231);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1234 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1234.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1235 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1234);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1235 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1235)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1233 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1234 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1233.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1233);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1233.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1237 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1237.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1233);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1237.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1235);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1236 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1237);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1236);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForGrossIncomeReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1239 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1239.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1240 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForGrossIncomeReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1239);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1240 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1240)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1238 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisMap1239 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1238.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1238);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1238.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1242 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1242.setContextRef(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisContext1238);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1242.setValue(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberValue1240);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberElement1241 = instancObjectFactory.createRemarkForGrossIncomeReportedForFSI(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberDataType1242);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForGrossIncomeReportedForFSIParameterAxisFSMemberElement1241);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1243 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1243 == null){
                                    INR1243 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1243.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1243.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1243);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1245 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1245.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1246 = DBS01ReportUtil.retrieveValueForElement(field.getNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1245);
                            
                                if(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1246 != null && !"".equals(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1246)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1244 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisMap1245 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1244.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1244);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1244.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1248 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1248.setContextRef(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisContext1244);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1248.setValue(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberValue1246);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberElement1247 = instancObjectFactory.createNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1248);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NoninterestExpensesReportedForFSIParameterAxisFSMemberElement1247);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1250 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1250.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1251 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1250);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1251 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1251)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1249 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1250 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1249.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1249);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1249.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1253 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1253.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1249);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1253.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1251);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1252 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1253);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1252);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNoninterestExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1255 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1255.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1256 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNoninterestExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1255);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1256 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1256)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1254 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisMap1255 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1254.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1254);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1254.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1258 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1258.setContextRef(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisContext1254);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1258.setValue(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberValue1256);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberElement1257 = instancObjectFactory.createRemarkForNoninterestExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberDataType1258);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNoninterestExpensesReportedForFSIParameterAxisFSMemberElement1257);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1259 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1259 == null){
                                    INR1259 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1259.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1259.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1259);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - StaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1261 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1261.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1262 = DBS01ReportUtil.retrieveValueForElement(field.getStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1261);
                            
                                if(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1262 != null && !"".equals(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1262)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1260 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisMap1261 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1260.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1260);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1260.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1264 = new StringItemType();
                                    explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1264.setContextRef(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisContext1260);
                                    
                                    
                                        explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1264.setValue(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberValue1262);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberElement1263 = instancObjectFactory.createStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberDataType1264);
                                    bodyElements.add(explictMember1DBS01FS_Layout1StaffExpensesReportedForFSIParameterAxisFSMemberElement1263);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1266 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1266.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1267 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1266);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1267 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1267)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1265 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1266 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1265.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1265);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1265.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1269 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1269.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1265);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1269.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1267);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1268 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1269);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1268);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForStaffExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1271 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1271.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1272 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForStaffExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1271);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1272 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1272)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1270 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisMap1271 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1270.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1270);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1270.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1274 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1274.setContextRef(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisContext1270);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1274.setValue(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberValue1272);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberElement1273 = instancObjectFactory.createRemarkForStaffExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberDataType1274);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForStaffExpensesReportedForFSIParameterAxisFSMemberElement1273);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1275 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1275 == null){
                                    INR1275 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1275.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1275.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1275);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1277 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1277.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1278 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1277);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1278 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1278)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1276 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1277 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1276.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1276);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1276.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1280 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1280.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1276);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1280.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1278);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1279 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1280);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1279);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1281 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1281 == null){
                                    INR1281 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1281.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1281.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1281);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1283 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1283.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1284 = DBS01ReportUtil.retrieveValueForElement(field.getOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1283);
                            
                                if(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1284 != null && !"".equals(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1284)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1282 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisMap1283 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1282.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1282);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1282.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1286 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1286.setContextRef(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisContext1282);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1286.setValue(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberValue1284);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1285 = instancObjectFactory.createOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberDataType1286);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherExpensesReportedForFSIParameterAxisFSMemberElement1285);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherExpensesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1288 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1288.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1289 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherExpensesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1288);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1289 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1289)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1287 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisMap1288 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1287.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1287);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1287.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1291 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1291.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisContext1287);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1291.setValue(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberValue1289);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberElement1290 = instancObjectFactory.createRemarkForOtherExpensesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberDataType1291);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherExpensesReportedForFSIParameterAxisFSMemberElement1290);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1292 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1292 == null){
                                    INR1292 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1292.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1292.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1292);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1294 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1294.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1295 = DBS01ReportUtil.retrieveValueForElement(field.getNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1294);
                            
                                if(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1295 != null && !"".equals(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1295)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1293 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisMap1294 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1293.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1293);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1293.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1297 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1297.setContextRef(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisContext1293);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1297.setValue(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberValue1295);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberElement1296 = instancObjectFactory.createNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberDataType1297);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetProvisionsReportedForFSIParameterAxisFSMemberElement1296);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1299 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1299.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1300 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1299);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1300 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1300)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1298 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1299 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1298.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1298);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1298.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1302 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1302.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1298);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1302.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1300);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1301 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1302);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1301);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1304 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1304.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1305 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1304);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1305 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1305)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1303 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisMap1304 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1303.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1303);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1303.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1307 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1307.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisContext1303);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1307.setValue(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberValue1305);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberElement1306 = instancObjectFactory.createRemarkForNetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberDataType1307);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetProvisionsReportedForFSIParameterAxisFSMemberElement1306);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1308 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1308 == null){
                                    INR1308 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1308.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1308.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1308);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1310 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1310.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1311 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1310);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1311 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1311)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1309 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1310 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1309.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1309);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1309.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1313 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1313.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1309);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1313.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1311);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1312 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1313);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1312);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1314 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1314 == null){
                                    INR1314 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1314.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1314.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1314);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1316 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1316.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1317 = DBS01ReportUtil.retrieveValueForElement(field.getLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1316);
                            
                                if(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1317 != null && !"".equals(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1317)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1315 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisMap1316 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1315.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1315);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1315.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1319 = new StringItemType();
                                    explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1319.setContextRef(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisContext1315);
                                    
                                    
                                        explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1319.setValue(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1317);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1318 = instancObjectFactory.createLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1319);
                                    bodyElements.add(explictMember1DBS01FS_Layout1LoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1318);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoanLossProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1321 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1321.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1322 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoanLossProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1321);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1322 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1322)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1320 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisMap1321 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1320.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1320);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1320.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1324 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1324.setContextRef(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisContext1320);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1324.setValue(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberValue1322);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1323 = instancObjectFactory.createRemarkForLoanLossProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberDataType1324);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForLoanLossProvisionsReportedForFSIParameterAxisFSMemberElement1323);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1325 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1325 == null){
                                    INR1325 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1325.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1325.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1325);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1327 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1327.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1328 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1327);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1328 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1328)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1326 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1327 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1326.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1326);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1326.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1330 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1330.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1326);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1330.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1328);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1329 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1330);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1329);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1331 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1331 == null){
                                    INR1331 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1331.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1331.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1331);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1333 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1333.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1334 = DBS01ReportUtil.retrieveValueForElement(field.getOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1333);
                            
                                if(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1334 != null && !"".equals(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1334)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1332 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1333 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1332.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1332);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1332.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1336 = new StringItemType();
                                    explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1336.setContextRef(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1332);
                                    
                                    
                                        explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1336.setValue(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1334);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1335 = instancObjectFactory.createOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1336);
                                    bodyElements.add(explictMember1DBS01FS_Layout1OtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1335);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherFinancialAssetProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1338 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1338.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1339 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherFinancialAssetProvisionsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1338);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1339 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1339)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1337 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisMap1338 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1337.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1337);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1337.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1341 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1341.setContextRef(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisContext1337);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1341.setValue(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberValue1339);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1340 = instancObjectFactory.createRemarkForOtherFinancialAssetProvisionsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberDataType1341);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForOtherFinancialAssetProvisionsReportedForFSIParameterAxisFSMemberElement1340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1342 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1342 == null){
                                    INR1342 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1342.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1342.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1342);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1344 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1344.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1345 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1344);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1345 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1345)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1343 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1344 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1343.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1343);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1343.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1347 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1347.setContextRef(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1343);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1347.setValue(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1345);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1346 = instancObjectFactory.createNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1347);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1346);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1349 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1349.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1350 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1349);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1350 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1350)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1348 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1349 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1348.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1348);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1348.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1352 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1352.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1348);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1352.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1350);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1351 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1352);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1351);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1354 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1354.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1355 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1354);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1355 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1355)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1353 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1354 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1353.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1353);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1353.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1357 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1357.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1353);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1357.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1355);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1356 = instancObjectFactory.createRemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1357);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeBeforeExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1356);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1358 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1358 == null){
                                    INR1358 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1358.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1358.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1358);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - ExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1360 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1360.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1361 = DBS01ReportUtil.retrieveValueForElement(field.getExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1360);
                            
                                if(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1361 != null && !"".equals(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1361)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1359 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisMap1360 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1359.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1359);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1359.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1363 = new StringItemType();
                                    explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1363.setContextRef(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisContext1359);
                                    
                                    
                                        explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1363.setValue(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1361);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1362 = instancObjectFactory.createExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1363);
                                    bodyElements.add(explictMember1DBS01FS_Layout1ExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1362);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1365 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1365.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1366 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1365);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1366 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1366)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1364 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1365 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1364.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1364);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1364.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1368 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1368.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1364);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1368.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1366);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1367 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1368);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1367);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForExtraordinaryItemsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1370 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1370.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1371 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForExtraordinaryItemsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1370);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1371 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1371)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1369 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisMap1370 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1369.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1369);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1369.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1373 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1373.setContextRef(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisContext1369);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1373.setValue(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberValue1371);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1372 = instancObjectFactory.createRemarkForExtraordinaryItemsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberDataType1373);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForExtraordinaryItemsReportedForFSIParameterAxisFSMemberElement1372);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1374 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1374 == null){
                                    INR1374 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1374.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1374.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1374);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - IncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1376 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1376.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1377 = DBS01ReportUtil.retrieveValueForElement(field.getIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1376);
                            
                                if(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1377 != null && !"".equals(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1377)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1375 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisMap1376 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1375.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1375);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1375.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1379 = new StringItemType();
                                    explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1379.setContextRef(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisContext1375);
                                    
                                    
                                        explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1379.setValue(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberValue1377);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberElement1378 = instancObjectFactory.createIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberDataType1379);
                                    bodyElements.add(explictMember1DBS01FS_Layout1IncomeTaxReportedForFSIParameterAxisFSMemberElement1378);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1381 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1381.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1382 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1381);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1382 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1382)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1380 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1381 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1380.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1380);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1380.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1384 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1384.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1380);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1384.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1382);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1383 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1384);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1383);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForIncomeTaxReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1386 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1386.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1387 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForIncomeTaxReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1386);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1387 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1387)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1385 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisMap1386 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1385.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1385);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1385.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1389 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1389.setContextRef(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisContext1385);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1389.setValue(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberValue1387);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberElement1388 = instancObjectFactory.createRemarkForIncomeTaxReportedForFSI(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberDataType1389);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForIncomeTaxReportedForFSIParameterAxisFSMemberElement1388);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1390 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1390 == null){
                                    INR1390 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1390.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1390.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1390);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1392 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1392.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1393 = DBS01ReportUtil.retrieveValueForElement(field.getNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1392);
                            
                                if(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1393 != null && !"".equals(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1393)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1391 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1392 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1391.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1391);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1391.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1395 = new StringItemType();
                                    explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1395.setContextRef(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1391);
                                    
                                    
                                        explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1395.setValue(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1393);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1394 = instancObjectFactory.createNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1395);
                                    bodyElements.add(explictMember1DBS01FS_Layout1NetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1394);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1397 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1397.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1398 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1397);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1398 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1398)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1396 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1397 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1396.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1396);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1396.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1400 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1400.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1396);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1400.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1398);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1399 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1400);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1399);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1402 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1402.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1403 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1402);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1403 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1403)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1401 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisMap1402 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1401.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1401);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1401.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1405 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1405.setContextRef(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisContext1401);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1405.setValue(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberValue1403);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1404 = instancObjectFactory.createRemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSI(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberDataType1405);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForNetIncomeAfterExtraordinaryItemsAndTaxesReportedForFSIParameterAxisFSMemberElement1404);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1406 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1406 == null){
                                    INR1406 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1406.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1406.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1406);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1408 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1408.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1409 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1408);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1409 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1409)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1407 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1408 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1407.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1407);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1407.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1411 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1411.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1407);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1411.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1409);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1410 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1411);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1410);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1412 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1412 == null){
                                    INR1412 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1412.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1412.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1412);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1414 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1414.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1415 = DBS01ReportUtil.retrieveValueForElement(field.getDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1414);
                            
                                if(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1415 != null && !"".equals(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1415)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1413 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisMap1414 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1413.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1413);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1413.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1417 = new StringItemType();
                                    explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1417.setContextRef(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisContext1413);
                                    
                                    
                                        explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1417.setValue(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberValue1415);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1416 = instancObjectFactory.createDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberDataType1417);
                                    bodyElements.add(explictMember1DBS01FS_Layout1DividendsPayableReportedForFSIParameterAxisFSMemberElement1416);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDividendsPayableReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1419 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1419.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1420 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDividendsPayableReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1419);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1420 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1420)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1418 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisMap1419 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1418.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1418);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1418.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1422 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1422.setContextRef(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisContext1418);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1422.setValue(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberValue1420);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberElement1421 = instancObjectFactory.createRemarkForDividendsPayableReportedForFSI(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberDataType1422);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForDividendsPayableReportedForFSIParameterAxisFSMemberElement1421);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1423 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1423 == null){
                                    INR1423 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1423.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1423.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1423);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1425 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1425.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1426 = DBS01ReportUtil.retrieveValueForElement(field.getRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1425);
                            
                                if(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1426 != null && !"".equals(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1426)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1424 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisMap1425 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1424.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1424);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1424.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1428 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1428.setContextRef(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisContext1424);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1428.setValue(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberValue1426);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberElement1427 = instancObjectFactory.createRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberDataType1428);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RetainedEarningsReportedForFSIParameterAxisFSMemberElement1427);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1430 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1430.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1431 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1430);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1431 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1431)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1429 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1430 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1429.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1429);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1429.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1433 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1433.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1429);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1433.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1431);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1432 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1433);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1432);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForRetainedEarningsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1435 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1435.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1436 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForRetainedEarningsReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1435);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1436 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1436)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1434 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisMap1435 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1434.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1434);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1434.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1438 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1438.setContextRef(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisContext1434);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1438.setValue(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberValue1436);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberElement1437 = instancObjectFactory.createRemarkForRetainedEarningsReportedForFSI(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberDataType1438);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForRetainedEarningsReportedForFSIParameterAxisFSMemberElement1437);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1440 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1440.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1441 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1440);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1441 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1441)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1439 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1440 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1439.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1439);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1439.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1443 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1443.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1439);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1443.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1441);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1442 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1443);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1442);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1445 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1445.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1446 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1445);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1446 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1446)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1444 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1445 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1444.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1444);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1444.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1448 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1448.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1444);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1448.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1446);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1447 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1448);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1447);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1450 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1450.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1451 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1450);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1451 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1451)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1449 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1450 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1449.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1449);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1449.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1453 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1453.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1449);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1453.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1451);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1452 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1453);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1452);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1454 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1454 == null){
                                    INR1454 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1454.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1454.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1454);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1456 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1456.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1457 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1456);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1457 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1457)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1455 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1456 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1455.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1455);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1455.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1459 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1459.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1455);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1459.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1457);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1458 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1459);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1458);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1461 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1461.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1462 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1461);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1462 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1462)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1460 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1461 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1460.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1460);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1460.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1464 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1464.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1460);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1464.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1462);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1463 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1464);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1463);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1466 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1466.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1467 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1466);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1467 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1467)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1465 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1466 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1465.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1465);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1465.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1469 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1469.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1465);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1469.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1467);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1468 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1469);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1468);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1470 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1470 == null){
                                    INR1470 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1470.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1470.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1470);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1472 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1472.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1473 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1472);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1473 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1473)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1471 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1472 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1471.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1471);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1471.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1475 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1475.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1471);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1475.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1473);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1474 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1475);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1474);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1477 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1477.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1478 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1477);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1478 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1478)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1476 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1477 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1476.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1476);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1476.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1480 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1480.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1476);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1480.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1478);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1479 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1480);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1479);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1482 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1482.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1483 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1482);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1483 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1483)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1481 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1482 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1481.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1481);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1481.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1485 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1485.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1481);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1485.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1483);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1484 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1485);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1484);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1486 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1486 == null){
                                    INR1486 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1486.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1486.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1486);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1488 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1488.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1489 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1488);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1489 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1489)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1487 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1488 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1487.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1487);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1487.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1491 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1491.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1487);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1491.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1489);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1490 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1491);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1490);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1492 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1492 == null){
                                    INR1492 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1492.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1492.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1492);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1494 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1494.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1495 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1494);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1495 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1495)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1493 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1494 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1493.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1493);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1493.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1497 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1497.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1493);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1497.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1495);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1496 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1497);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1496);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1499 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1499.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1500 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1499);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1500 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1500)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1498 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1499 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1498.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1498);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1498.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1502 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1502.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1498);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1502.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1500);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1501 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1502);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1501);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1503 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1503 == null){
                                    INR1503 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1503.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1503.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1503);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - MtmLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1505 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1505.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1506 = DBS01ReportUtil.retrieveValueForElement(field.getMtmLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1505);
                            
                                if(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1506 != null && !"".equals(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1506)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1504 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1505 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1504.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1504);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1504.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1508 = new StringItemType();
                                    explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1508.setContextRef(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1504);
                                    
                                    
                                        explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1508.setValue(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1506);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1507 = instancObjectFactory.createMtmLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1508);
                                    bodyElements.add(explictMember1DBS01FS_Layout1MtmLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1507);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1510 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1510.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1511 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1510);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1511 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1511)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1509 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1510 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1509.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1509);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1509.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1513 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1513.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1509);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1513.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1511);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1512 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1513);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1512);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1515 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1515.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1516 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1515);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1516 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1516)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1514 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisMap1515 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1514.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1514);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1514.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1518 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1518.setContextRef(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisContext1514);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1518.setValue(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1516);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1517 = instancObjectFactory.createRemarkForMTMLossesInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1518);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForMTMLossesInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1517);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1519 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1519 == null){
                                    INR1519 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1519.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1519.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1519);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - UnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1521 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1521.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1522 = DBS01ReportUtil.retrieveValueForElement(field.getUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1521);
                            
                                if(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1522 != null && !"".equals(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1522)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1520 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1521 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1520.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1520);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1520.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1524 = new StringItemType();
                                    explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1524.setContextRef(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1520);
                                    
                                    
                                        explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1524.setValue(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1522);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1523 = instancObjectFactory.createUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1524);
                                    bodyElements.add(explictMember1DBS01FS_Layout1UnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1523);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1AbstractParameterAxisMap1526 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1AbstractParameterAxisMap1526.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1527 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout1AbstractParameterAxisMap1526);
                            
                                if(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1527 != null && !"".equals(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1527)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1AbstractParameterAxisContext1525 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1AbstractParameterAxisMap1526 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1525.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1525);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1525.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1529 = new StringItemType();
                                    explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1529.setContextRef(explictMember1DBS01FS_Layout1AbstractParameterAxisContext1525);
                                    
                                    
                                        explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1529.setValue(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberValue1527);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1528 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberDataType1529);
                                    bodyElements.add(explictMember1DBS01FS_Layout1AbstractParameterAxisFSMemberElement1528);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1531 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1531.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1532 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1531);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1532 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1532)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1530 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisMap1531 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1530.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1530);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1530.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1534 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1534.setContextRef(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisContext1530);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1534.setValue(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberValue1532);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1533 = instancObjectFactory.createRemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSI(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberDataType1534);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForUnrealisedGainsInTheInvestmentPortfolioReportedForFSIParameterAxisFSMemberElement1533);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1535 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1535 == null){
                                    INR1535 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1535.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1535.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1535);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1537 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1537.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1538 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1537);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1538 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1538)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1536 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1537 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1536.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1536);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1536.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1540 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1540.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1536);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1540.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1538);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1539 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1540);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1539);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1541 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1541 == null){
                                    INR1541 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1541.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1541.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1541);
                                }
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1543 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1543.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1544 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1543);
                            
                                if(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1544 != null && !"".equals(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1544)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1542 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1543 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1542.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1542);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1542.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1546 = new StringItemType();
                                    explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1546.setContextRef(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1542);
                                    
                                    
                                        explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1546.setValue(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1544);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1545 = instancObjectFactory.createCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1546);
                                    bodyElements.add(explictMember1DBS01FS_Layout1CapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1545);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(), explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548);
                            
                                if(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549 != null && !"".equals(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisMap1548 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551 = new StringItemType();
                                    explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551.setContextRef(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisContext1547);
                                    
                                    
                                        explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551.setValue(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberValue1549);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1550 = instancObjectFactory.createRemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSI(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberDataType1551);
                                    bodyElements.add(explictMember1DBS01FS_Layout1RemarkForCapitalGainsOrLossOnSaleOfAssociateOrSubsidiaryReportedForFSIParameterAxisFSMemberElement1550);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout2 if any typeMembers then List or Single
                DBS01FS_Layout2 dBS01FS_Layout2 = mainReportData.getDBS01FS_Layout2();
            
                
                    {
            
                    DBS01FS_Layout2 field = dBS01FS_Layout2;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR1552 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1552 == null){
                                    INR1552 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1552.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1552.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1552);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - TotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1554 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1554.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1555 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1554);
                            
                                if(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1555 != null && !"".equals(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1555)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1553 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap1554 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1553.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1553);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1553.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1557 = new StringItemType();
                                    explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1557.setContextRef(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext1553);
                                    
                                    
                                        explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1557.setValue(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1555);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1556 = instancObjectFactory.createTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1557);
                                    bodyElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1556);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1559 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1559.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1560 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1559);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1560 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1560)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1558 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1559 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1558.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1558);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1558.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1562 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1562.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1558);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1562.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1560);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1561 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1562);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1561);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForTotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1564 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1564.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1565 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1564);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1565 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1565)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1563 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap1564 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1563.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1563);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1563.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1567 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1567.setContextRef(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext1563);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1567.setValue(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1565);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1566 = instancObjectFactory.createRemarkForTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1567);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1566);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1568 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1568 == null){
                                    INR1568 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1568.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1568.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1568);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1570 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1570.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1571 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1570);
                            
                                if(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1571 != null && !"".equals(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1571)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1569 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap1570 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1569.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1569);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1569.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1573 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1573.setContextRef(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext1569);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1573.setValue(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1571);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1572 = instancObjectFactory.createNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1573);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1572);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1575 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1575.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1576 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1575);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1576 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1576)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1574 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1575 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1574.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1574);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1574.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1578 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1578.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1574);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1578.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1576);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1577 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1578);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1577);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1580 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1580.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1581 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1580);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1581 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1581)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1579 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap1580 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1579.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1579);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1579.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1583 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1583.setContextRef(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext1579);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1583.setValue(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1581);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1582 = instancObjectFactory.createRemarkForNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1583);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1582);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1584 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1584 == null){
                                    INR1584 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1584.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1584.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1584);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1586 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1586.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1587 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1586);
                            
                                if(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1587 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1587)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1585 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap1586 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1585.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1585);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1585.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1589 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1589.setContextRef(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext1585);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1589.setValue(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1587);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1588 = instancObjectFactory.createFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1589);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1588);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1591 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1591.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1592 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1591);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1592 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1592)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1590 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1591 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1590.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1590);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1590.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1594 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1594.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1590);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1594.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1592);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1593 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1594);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1593);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1596 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1596.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1597 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1596);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1597 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1597)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1595 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap1596 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1595.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1595);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1595.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1599 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1599.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext1595);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1599.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1597);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1598 = instancObjectFactory.createRemarkForFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1599);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1598);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1600 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1600 == null){
                                    INR1600 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1600.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1600.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1600);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1602 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1602.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1603 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1602);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1603 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1603)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1601 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1602 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1601.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1601);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1601.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1605 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1605.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1601);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1605.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1603);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1604 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1605);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1604);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1606 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1606 == null){
                                    INR1606 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1606.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1606.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1606);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1608 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1608.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1608);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1607 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap1608 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1607.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1607);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1607.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext1607);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1609);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1610 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1611);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1610);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1613 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1613.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1613);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1612 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap1613 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1612.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1612);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1612.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616.setContextRef(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext1612);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616.setValue(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1614);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1615 = instancObjectFactory.createRemarkForCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1616);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1615);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1617 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1617 == null){
                                    INR1617 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1617.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1617.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1617);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1619 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1619.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1620 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1619);
                            
                                if(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1620 != null && !"".equals(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1620)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1618 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1619 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1618.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1618);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1618.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1622 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1622.setContextRef(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1618);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1622.setValue(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1620);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1621 = instancObjectFactory.createLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1622);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1621);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1624 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1624.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1624);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1623 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1624 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1623.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1623);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1623.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1623);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1625);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1626 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1627);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1626);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1629 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1629.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1629);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1628 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap1629 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1628.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1628);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1628.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext1628);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632.setValue(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1630);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1631 = instancObjectFactory.createRemarkForLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1632);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1631);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1633 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1633 == null){
                                    INR1633 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1633.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1633.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1633);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1635 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1635.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1636 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1635);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1636 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1636)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1634 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1635 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1634.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1634);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1634.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1638 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1638.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1634);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1638.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1636);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1637 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1638);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1637);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1639 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1639 == null){
                                    INR1639 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1639.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1639.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1639);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1641 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1641.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1642 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1641);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1642 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1642)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1640 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1641 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1640.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1640);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1640.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1644 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1644.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1640);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1644.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1642);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1643 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1644);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1643);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1646 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1646.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1647 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1646);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1647 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1647)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1645 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1646 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1645.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1645);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1645.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1649 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1649.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1645);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1649.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1647);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1648 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1649);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1648);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1650 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1650 == null){
                                    INR1650 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1650.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1650.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1650);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1652 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1652.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1653 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1652);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1653 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1653)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1651 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1652 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1651.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1651);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1651.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1655 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1655.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1651);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1655.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1653);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1654 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1655);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1654);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1657 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1657.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1658 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1657);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1658 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1658)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1656 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1657 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1656.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1656);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1656.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1660 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1660.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1656);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1660.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1658);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1659 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1660);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1659);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1662 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1662.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1662);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1661 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1662 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1661.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1661);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1661.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1661);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1663);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1664 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1665);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1664);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1666 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1666 == null){
                                    INR1666 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1666.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1666.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1666);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1668 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1668.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1669 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1668);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1669 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1669)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1667 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1668 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1667.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1667);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1667.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1671 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1671.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1667);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1671.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1669);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1670 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1671);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1670);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1673 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1673.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1673);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1672 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1673 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1672.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1672);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1672.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1672);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1674);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1675 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1676);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1675);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1678 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1678.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1678);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1677 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1678 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1677.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1677);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1677.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1677);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1679);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1680 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1681);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1680);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1682 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1682 == null){
                                    INR1682 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1682.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1682.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1682);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1684 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1684.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1685 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1684);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1685 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1685)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1683 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1684 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1683.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1683);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1683.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1687 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1687.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1683);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1687.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1685);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1686 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1687);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1686);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1689 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1689.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1689);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1688 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1689 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1688.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1688);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1688.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1688);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1690);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1691 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1692);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1691);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1694 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1694.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1695 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1694);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1695 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1695)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1693 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1694 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1693.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1693);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1693.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1697 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1697.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1693);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1697.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1695);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1696 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1697);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1696);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1698 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1698 == null){
                                    INR1698 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1698.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1698.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1698);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1700 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1700.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1700);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1699 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1700 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1699.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1699);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1699.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1699);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1701);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1702 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1703);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1702);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1705 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1705.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1706 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1705);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1706 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1706)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1704 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1705 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1704.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1704);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1704.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1708 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1708.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1704);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1708.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1706);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1707 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1708);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1707);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1710 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1710.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1711 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1710);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1711 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1711)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1709 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1710 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1709.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1709);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1709.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1713 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1713.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1709);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1713.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1711);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1712 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1713);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1712);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1714 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1714 == null){
                                    INR1714 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1714.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1714.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1714);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1716 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1716.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1716);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1715 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1716 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1715.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1715);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1715.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1715);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1717);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1718 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1719);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1718);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1721 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1721.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1722 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1721);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1722 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1722)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1720 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1721 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1720.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1720);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1720.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1724 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1724.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1720);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1724.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1722);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1723 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1724);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1723);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1726 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1726.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1727 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1726);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1727 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1727)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1725 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1726 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1725.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1725);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1725.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1729 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1729.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1725);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1729.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1727);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1728 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1729);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1728);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1730 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1730 == null){
                                    INR1730 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1730.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1730.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1730);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1732 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1732.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1732);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1731 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1732 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1731.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1731);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1731.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1731);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1733);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1734 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1735);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1734);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1737 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1737.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1738 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1737);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1738 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1738)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1736 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1737 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1736.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1736);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1736.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1740 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1740.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1736);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1740.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1738);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1739 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1740);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1739);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1742 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1742.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1743 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1742);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1743 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1743)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1741 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1742 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1741.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1741);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1741.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1745 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1745.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1741);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1745.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1743);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1744 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1745);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1744);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1746 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1746 == null){
                                    INR1746 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1746.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1746.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1746);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1748 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1748.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1748);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1747 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1748 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1747.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1747);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1747.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1747);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1749);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1750 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1751);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1750);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1753 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1753.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1754 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1753);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1754 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1754)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1752 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1753 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1752.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1752);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1752.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1756 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1756.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1752);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1756.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1754);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1755 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1756);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1755);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1758 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1758.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1759 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1758);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1759 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1759)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1757 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1758 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1757.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1757);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1757.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1761 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1761.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1757);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1761.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1759);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1760 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1761);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1760);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1762 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1762 == null){
                                    INR1762 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1762.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1762.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1762);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1764 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1764.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1764);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1763 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1764 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1763.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1763);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1763.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1763);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1765);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1766 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1767);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1766);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1769 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1769.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1770 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1769);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1770 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1770)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1768 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1769 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1768.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1768);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1768.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1772 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1772.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1768);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1772.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1770);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1771 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1772);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1771);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1774 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1774.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1775 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1774);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1775 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1775)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1773 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1774 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1773.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1773);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1773.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1777 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1777.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1773);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1777.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1775);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1776 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1777);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1776);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1778 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1778 == null){
                                    INR1778 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1778.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1778.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1778);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1780 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1780.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1780);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1779 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1780 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1779.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1779);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1779.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1779);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1781);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1782 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1783);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1782);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1785 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1785.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1786 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1785);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1786 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1786)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1784 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1785 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1784.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1784);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1784.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1788 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1788.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1784);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1788.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1786);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1787 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1788);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1787);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1790 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1790.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1791 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1790);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1791 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1791)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1789 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1790 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1789.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1789);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1789.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1793 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1793.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1789);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1793.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1791);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1792 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1793);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1792);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1794 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1794 == null){
                                    INR1794 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1794.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1794.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1794);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1796 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1796.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1796);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1795 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1796 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1795.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1795);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1795.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1795);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1797);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1798 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1799);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1798);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1801 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1801.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1802 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1801);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1802 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1802)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1800 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1801 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1800.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1800);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1800.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1804 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1804.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1800);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1804.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1802);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1803 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1804);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1803);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1806 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1806.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1807 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1806);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1807 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1807)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1805 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1806 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1805.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1805);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1805.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1809 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1809.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1805);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1809.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1807);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1808 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1809);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1808);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1810 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1810 == null){
                                    INR1810 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1810.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1810.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1810);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1812 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1812.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1812);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1811 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap1812 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1811.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1811);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1811.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext1811);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1813);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1814 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1815);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1814);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1817 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1817.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1818 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1817);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1818 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1818)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1816 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1817 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1816.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1816);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1816.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1820 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1820.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1816);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1820.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1818);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1819 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1820);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1819);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1822 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1822.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1823 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1822);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1823 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1823)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1821 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap1822 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1821.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1821);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1821.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1825 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1825.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext1821);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1825.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1823);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1824 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1825);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1824);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1826 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1826 == null){
                                    INR1826 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1826.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1826.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1826);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1828 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1828.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1828);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1827 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1828 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1827.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1827);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1827.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1827);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1829);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1830 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1831);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1830);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1832 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1832 == null){
                                    INR1832 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1832.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1832.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1832);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1834 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1834.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1834);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1833 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap1834 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1833.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1833);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1833.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext1833);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1835);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1836 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1837);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1836);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1839 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1839.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1839);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1838 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap1839 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1838.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1838);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1838.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842.setContextRef(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext1838);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842.setValue(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1840);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1841 = instancObjectFactory.createRemarkForSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1842);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1841);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1843 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1843 == null){
                                    INR1843 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1843.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1843.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1843);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1845 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1845.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1846 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1845);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1846 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1846)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1844 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1845 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1844.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1844);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1844.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1848 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1848.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1844);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1848.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1846);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1847 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1848);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1847);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1849 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1849 == null){
                                    INR1849 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1849.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1849.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1849);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1851 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1851.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1852 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1851);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1852 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1852)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1850 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap1851 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1850.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1850);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1850.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1854 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1854.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext1850);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1854.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1852);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1853 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1854);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1853);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1856 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1856.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1857 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1856);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1857 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1857)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1855 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap1856 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1855.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1855);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1855.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1859 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1859.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext1855);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1859.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1857);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1858 = instancObjectFactory.createRemarkForDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1859);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1858);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1860 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1860 == null){
                                    INR1860 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1860.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1860.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1860);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1862 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1862.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1863 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1862);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1863 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1863)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1861 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1862 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1861.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1861);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1861.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1865 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1865.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1861);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1865.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1863);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1864 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1865);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1864);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1866 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1866 == null){
                                    INR1866 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1866.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1866.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1866);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1868 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1868.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1869 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1868);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1869 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1869)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1867 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap1868 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1867.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1867);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1867.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1871 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1871.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext1867);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1871.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1869);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1870 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1871);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1870);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1873 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1873.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1874 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1873);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1874 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1874)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1872 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap1873 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1872.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1872);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1872.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1876 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1876.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext1872);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1876.setValue(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1874);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1875 = instancObjectFactory.createRemarkForSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1876);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1875);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1877 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1877 == null){
                                    INR1877 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1877.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1877.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1877);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1879 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1879.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1880 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1879);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1880 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1880)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1878 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1879 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1878.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1878);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1878.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1882 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1882.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1878);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1882.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1880);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1881 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1882);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1881);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1883 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1883 == null){
                                    INR1883 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1883.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1883.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1883);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1885 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1885.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1886 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1885);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1886 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1886)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1884 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap1885 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1884.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1884);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1884.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1888 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1888.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext1884);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1888.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1886);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1887 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1888);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1887);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1890 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1890.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1891 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1890);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1891 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1891)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1889 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap1890 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1889.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1889);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1889.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1893 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1893.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext1889);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1893.setValue(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1891);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1892 = instancObjectFactory.createRemarkForOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1893);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1892);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1894 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1894 == null){
                                    INR1894 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1894.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1894.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1894);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1896 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1896.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1897 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1896);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1897 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1897)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1895 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1896 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1895.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1895);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1895.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1899 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1899.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1895);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1899.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1897);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1898 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1899);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1898);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1900 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1900 == null){
                                    INR1900 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1900.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1900.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1900);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1902 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1902.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1903 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1902);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1903 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1903)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1901 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap1902 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1901.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1901);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1901.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1905 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1905.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext1901);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1905.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1903);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1904 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1905);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1904);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1907 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1907.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1908 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1907);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1908 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1908)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1906 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap1907 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1906.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1906);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1906.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1910 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1910.setContextRef(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext1906);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1910.setValue(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1908);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1909 = instancObjectFactory.createRemarkForLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1910);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1909);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1911 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1911 == null){
                                    INR1911 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1911.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1911.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1911);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1913 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1913.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1914 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1913);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1914 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1914)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1912 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1913 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1912.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1912);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1912.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1916 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1916.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1912);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1916.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1914);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1915 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1916);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1915);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1918 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1918.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1919 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1918);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1919 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1919)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1917 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1918 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1917.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1917);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1917.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1921 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1921.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1917);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1921.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1919);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1920 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1921);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1920);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1923 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1923.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1924 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1923);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1924 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1924)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1922 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1923 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1922.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1922);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1922.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1926 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1926.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1922);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1926.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1924);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1925 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1926);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1925);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1927 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1927 == null){
                                    INR1927 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1927.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1927.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1927);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1929 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1929.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1930 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1929);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1930 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1930)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1928 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1929 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1928.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1928);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1928.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1932 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1932.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1928);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1932.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1930);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1931 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1932);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1931);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1934 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1934.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1935 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1934);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1935 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1935)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1933 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1934 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1933.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1933);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1933.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1937 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1937.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1933);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1937.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1935);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1936 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1937);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1936);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1939 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1939.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1939);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1938 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1939 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1938.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1938);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1938.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1938);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1940);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1941 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1942);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1941);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1943 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1943 == null){
                                    INR1943 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1943.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1943.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1943);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1945 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1945.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1946 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1945);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1946 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1946)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1944 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1945 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1944.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1944);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1944.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1948 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1948.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1944);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1948.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1946);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1947 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1948);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1947);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1950 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1950.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1950);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1949 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1950 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1949.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1949);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1949.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1949);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1951);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1952 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1953);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1952);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1955 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1955.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1956 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1955);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1956 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1956)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1954 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1955 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1954.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1954);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1954.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1958 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1958.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1954);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1958.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1956);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1957 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1958);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1957);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1959 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1959 == null){
                                    INR1959 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1959.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1959.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1959);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1961 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1961.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1961);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1960 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1961 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1960.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1960);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1960.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1960);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1962);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1963 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1964);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1966 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1966.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1967 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1966);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1967 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1967)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1965 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1966 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1965.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1965);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1965.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1969 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1969.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1965);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1969.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1967);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1968 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1969);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1968);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1971 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1971.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1972 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1971);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1972 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1972)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1970 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1971 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1970.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1970);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1970.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1974 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1974.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1970);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1974.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1972);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1973 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1974);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1973);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1975 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1975 == null){
                                    INR1975 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1975.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1975.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1975);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1977 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1977.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1977);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1976 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1977 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1976.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1976);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1976.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1976);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1978);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1979 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1980);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1979);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1982 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1982.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1983 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1982);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1983 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1983)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1981 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1982 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1981.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1981);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1981.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1985 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1985.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1981);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1985.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1983);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1984 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1985);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1984);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1987 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1987.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1988 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1987);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1988 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1988)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1986 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap1987 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1986.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1986);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1986.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1990 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1990.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext1986);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1990.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1988);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1989 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1990);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1989);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1991 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1991 == null){
                                    INR1991 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1991.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1991.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1991);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1993 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1993.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1993);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1992 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap1993 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1992.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1992);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1992.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext1992);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1994);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1995 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType1996);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement1995);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap1998 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap1998.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1999 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap1998);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1999 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1999)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext1997 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap1998 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1997.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1997);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1997.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2001 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2001.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext1997);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2001.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue1999);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2000 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2001);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2000);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2003 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2003.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2004 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2003);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2004 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2004)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2002 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2003 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2002.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2002);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2002.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2006 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2006.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2002);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2006.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2004);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2005 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2006);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2005);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2007 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2007 == null){
                                    INR2007 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2007.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2007.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2007);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2009 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2009.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2009);
                            
                                if(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010 != null && !"".equals(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2008 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2009 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2008.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2008);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012.setContextRef(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2008);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012.setValue(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2011 = instancObjectFactory.createBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2012);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2014 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2014.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2015 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2014);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2015 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2015)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2013 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2014 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2013.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2013);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2013.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2017 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2017.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2013);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2017.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2015);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2016 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2017);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2016);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2019 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2019.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2020 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2019);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2020 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2020)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2018 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2019 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2018.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2018);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2018.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2022 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2022.setContextRef(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2018);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2022.setValue(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2020);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2021 = instancObjectFactory.createRemarkForBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2022);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2021);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2023 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2023 == null){
                                    INR2023 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2023.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2023.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2023);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2025 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2025.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2025);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2024 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2025 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2024.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2024);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2024.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2024);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2026);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2027 = instancObjectFactory.createDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2028);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2027);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2030 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2030.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2031 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2030);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2031 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2031)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2029 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2030 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2029.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2029);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2029.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2033 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2033.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2029);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2033.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2031);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2032 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2033);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2032);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2035 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2035.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2036 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2035);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2036 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2036)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2034 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2035 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2034.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2034);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2034.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2038 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2038.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2034);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2038.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2036);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2037 = instancObjectFactory.createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2038);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2037);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2039 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2039 == null){
                                    INR2039 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2039.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2039.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2039);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2041 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2041.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2041);
                            
                                if(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042 != null && !"".equals(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2040 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2041 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2040.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2040);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2040.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044.setContextRef(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2040);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044.setValue(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2042);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2043 = instancObjectFactory.createOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2044);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2043);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2046 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2046.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2047 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2046);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2047 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2047)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2045 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2046 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2045.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2045);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2045.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2049 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2049.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2045);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2049.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2047);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2048 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2049);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2048);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2051 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2051.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2052 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2051);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2052 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2052)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2050 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2051 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2050.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2050);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2050.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2054 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2054.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2050);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2054.setValue(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2052);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2053 = instancObjectFactory.createRemarkForOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2054);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2053);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2055 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2055 == null){
                                    INR2055 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2055.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2055.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2055);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2057 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2057.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2057);
                            
                                if(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058 != null && !"".equals(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2056 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2057 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2056.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2056);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2056.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060.setContextRef(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2056);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060.setValue(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2058);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2059 = instancObjectFactory.createCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2060);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2059);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2062 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2062.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2063 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2062);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2063 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2063)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2061 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2062 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2061.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2061);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2061.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2065 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2065.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2061);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2065.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2063);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2064 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2065);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2064);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2067 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2067.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2068 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2067);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2068 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2068)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2066 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2067 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2066.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2066);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2066.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2070 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2070.setContextRef(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2066);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2070.setValue(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2068);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2069 = instancObjectFactory.createRemarkForCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2070);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2069);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2071 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2071 == null){
                                    INR2071 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2071.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2071.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2071);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2073 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2073.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2073);
                            
                                if(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074 != null && !"".equals(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2072 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2073 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2072.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2072);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2072.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076.setContextRef(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2072);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076.setValue(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2074);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2075 = instancObjectFactory.createNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2076);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2075);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2078 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2078.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2079 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2078);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2079 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2079)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2077 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2078 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2077.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2077);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2077.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2081 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2081.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2077);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2081.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2079);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2080 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2081);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2080);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2083 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2083.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2084 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2083);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2084 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2084)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2082 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2083 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2082.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2082);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2082.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2086 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2086.setContextRef(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2082);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2086.setValue(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2084);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2085 = instancObjectFactory.createRemarkForNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2086);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2085);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2087 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2087 == null){
                                    INR2087 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2087.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2087.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2087);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2089 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2089.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2089);
                            
                                if(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090 != null && !"".equals(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2088 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2089 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2088.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2088);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2088.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092.setContextRef(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2088);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092.setValue(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2090);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2091 = instancObjectFactory.createBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2092);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2091);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2094 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2094.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2095 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2094);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2095 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2095)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2093 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2094 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2093.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2093);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2093.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2097 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2097.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2093);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2097.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2095);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2096 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2097);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2096);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2099 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2099.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2100 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2099);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2100 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2100)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2098 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2099 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2098.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2098);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2098.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2102 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2102.setContextRef(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2098);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2102.setValue(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2100);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2101 = instancObjectFactory.createRemarkForBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2102);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2101);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2104 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2104.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2105 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2104);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2105 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2105)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2103 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2104 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2103.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2103);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2103.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2107 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2107.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2103);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2107.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2105);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2106 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2107);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2106);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2109 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2109.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2110 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2109);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2110 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2110)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2108 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2109 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2108.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2108);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2108.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2112 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2112.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2108);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2112.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2110);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2111 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2112);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2111);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2114 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2114.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2115 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2114);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2115 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2115)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2113 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2114 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2113.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2113);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2113.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2117 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2117.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2113);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2117.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2115);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2116 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2117);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2116);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2118 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2118 == null){
                                    INR2118 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2118.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2118.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2118);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2120 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2120.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2121 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2120);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2121 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2121)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2119 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2120 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2119.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2119);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2119.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2123 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2123.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2119);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2123.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2121);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2122 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2123);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2122);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2124 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2124 == null){
                                    INR2124 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2124.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2124.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2124);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2126 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2126.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2127 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2126);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2127 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2127)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2125 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2126 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2125.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2125);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2125.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2129 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2129.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2125);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2129.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2127);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2128 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2129);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2128);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2131 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2131.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2132 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2131);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2132 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2132)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2130 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2131 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2130.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2130);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2130.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2134 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2134.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2130);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2134.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2132);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2133 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2134);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2133);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2135 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2135 == null){
                                    INR2135 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2135.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2135.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2135);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2137 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2137.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2137);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2136 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2137 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2136.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2136);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2136.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2136);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2138);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2139 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2140);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2139);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2141 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2141 == null){
                                    INR2141 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2141.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2141.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2141);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2143 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2143.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2143);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2142 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2143 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2142.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2142);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2142.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2142);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2144);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2145 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2146);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2145);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2148 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2148.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2148);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2147 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2148 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2147.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2147);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2147.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2147);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2149);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2150 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2151);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2150);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2152 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2152 == null){
                                    INR2152 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2152.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2152.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2152);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2154 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2154.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2155 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2154);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2155 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2155)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2153 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2154 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2153.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2153);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2153.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2157 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2157.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2153);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2157.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2155);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2156 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2157);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2156);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2158 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2158 == null){
                                    INR2158 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2158.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2158.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2158);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2160 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2160.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2161 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2160);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2161 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2161)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2159 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2160 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2159.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2159);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2159.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2163 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2163.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2159);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2163.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2161);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2162 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2163);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2162);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2165 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2165.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2166 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2165);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2166 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2166)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2164 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2165 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2164.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2164);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2164.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2168 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2168.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2164);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2168.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2166);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2167 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2168);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2167);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2169 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2169 == null){
                                    INR2169 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2169.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2169.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2169);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2171 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2171.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2172 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2171);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2172 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2172)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2170 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2171 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2170.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2170);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2170.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2174 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2174.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2170);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2174.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2172);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2173 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2174);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2173);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2175 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2175 == null){
                                    INR2175 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2175.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2175.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2175);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2177 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2177.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2178 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2177);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2178 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2178)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2176 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2177 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2176.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2176);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2176.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2180 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2180.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2176);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2180.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2178);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2179 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2180);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2179);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2182 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2182.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2183 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2182);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2183 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2183)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2181 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2182 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2181.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2181);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2181.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2185 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2185.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2181);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2185.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2183);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2184 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2185);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2184);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2186 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2186 == null){
                                    INR2186 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2186.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2186.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2186);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2188 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2188.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2189 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2188);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2189 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2189)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2187 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2188 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2187.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2187);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2187.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2191 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2191.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2187);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2191.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2189);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2190 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2191);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2190);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2192 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2192 == null){
                                    INR2192 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2192.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2192.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2192);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2194 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2194.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2195 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2194);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2195 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2195)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2193 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2194 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2193.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2193);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2193.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2197 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2197.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2193);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2197.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2195);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2196 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2197);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2196);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2199 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2199.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2200 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2199);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2200 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2200)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2198 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2199 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2198.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2198);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2198.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2202 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2202.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2198);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2202.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2200);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2201 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2202);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2201);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2203 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2203 == null){
                                    INR2203 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2203.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2203.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2203);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2205 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2205.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2206 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2205);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2206 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2206)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2204 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2205 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2204.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2204);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2204.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2208 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2208.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2204);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2208.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2206);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2207 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2208);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2207);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2209 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2209 == null){
                                    INR2209 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2209.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2209.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2209);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2211 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2211.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2212 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2211);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2212 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2212)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2210 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2211 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2210.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2210);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2210.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2214 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2214.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2210);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2214.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2212);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2213 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2214);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2213);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2216 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2216.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2217 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2216);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2217 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2217)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2215 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2216 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2215.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2215);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2215.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2219 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2219.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2215);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2219.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2217);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2218 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2219);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2218);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2220 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2220 == null){
                                    INR2220 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2220.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2220.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2220);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2222 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2222.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2223 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2222);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2223 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2223)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2221 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2222 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2221.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2221);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2221.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2225 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2225.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2221);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2225.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2223);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2224 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2225);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2224);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2226 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2226 == null){
                                    INR2226 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2226.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2226.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2226);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2228 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2228.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2229 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2228);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2229 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2229)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2227 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2228 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2227.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2227);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2227.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2231 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2231.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2227);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2231.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2229);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2230 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2231);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2230);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2233 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2233.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2234 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2233);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2234 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2234)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2232 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2233 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2232.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2232);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2232.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2236 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2236.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2232);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2236.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2234);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2235 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2236);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2235);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2237 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2237 == null){
                                    INR2237 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2237.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2237.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2237);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2239 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2239.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2240 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2239);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2240 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2240)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2238 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2239 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2238.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2238);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2238.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2242 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2242.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2238);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2242.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2240);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2241 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2242);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2241);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2243 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2243 == null){
                                    INR2243 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2243.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2243.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2243);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2245 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2245.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2246 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2245);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2246 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2246)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2244 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2245 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2244.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2244);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2244.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2248 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2248.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2244);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2248.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2246);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2247 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2248);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2247);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2250 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2250.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2251 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2250);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2251 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2251)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2249 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2250 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2249.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2249);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2249.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2253 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2253.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2249);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2253.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2251);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2252 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2253);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2252);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2254 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2254 == null){
                                    INR2254 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2254.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2254.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2254);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2256 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2256.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2257 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2256);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2257 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2257)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2255 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2256 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2255.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2255);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2255.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2259 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2259.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2255);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2259.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2257);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2258 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2259);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2258);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2260 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2260 == null){
                                    INR2260 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2260.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2260.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2260);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2262 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2262.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2263 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2262);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2263 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2263)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2261 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2262 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2261.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2261);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2261.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2265 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2265.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2261);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2265.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2263);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2264 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2265);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2264);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2267 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2267.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2268 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2267);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2268 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2268)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2266 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2267 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2266.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2266);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2266.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2270 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2270.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2266);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2270.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2268);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2269 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2270);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2269);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2271 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2271 == null){
                                    INR2271 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2271.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2271.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2271);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2273 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2273.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2274 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2273);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2274 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2274)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2272 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2273 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2272.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2272);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2272.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2276 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2276.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2272);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2276.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2274);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2275 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2276);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2275);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2277 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2277 == null){
                                    INR2277 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2277.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2277.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2277);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2279 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2279.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2280 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2279);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2280 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2280)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2278 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2279 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2278.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2278);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2278.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2282 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2282.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2278);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2282.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2280);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2281 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2282);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2281);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2284 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2284.put("ParameterAxis", "ConsolidatedEntityIncludingInternationalOperationsMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2285 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2284);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2285 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2285)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2283 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2284 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2283.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2283);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2283.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2287 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2287.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2283);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2287.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberValue2285);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2286 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberDataType2287);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisConsolidatedEntityIncludingInternationalOperationsMemberElement2286);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2288 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2288 == null){
                                    INR2288 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2288.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2288.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2288);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - TotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2290 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2290.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2291 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2290);
                            
                                if(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2291 != null && !"".equals(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2291)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2289 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap2290 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2289.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2289);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2289.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2293 = new StringItemType();
                                    explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2293.setContextRef(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext2289);
                                    
                                    
                                        explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2293.setValue(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2291);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2292 = instancObjectFactory.createTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2293);
                                    bodyElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2292);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2295 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2295.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2296 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2295);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2296 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2296)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2294 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2295 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2294.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2294);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2294.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2298 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2298.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2294);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2298.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2296);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2297 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2298);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2297);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForTotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2300 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2300.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2301 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2300);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2301 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2301)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2299 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap2300 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2299.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2299);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2299.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2303 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2303.setContextRef(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext2299);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2303.setValue(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2301);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2302 = instancObjectFactory.createRemarkForTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2303);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2302);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2304 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2304 == null){
                                    INR2304 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2304.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2304.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2304);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2306 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2306.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2307 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2306);
                            
                                if(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2307 != null && !"".equals(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2307)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2305 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap2306 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2305.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2305);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2305.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2309 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2309.setContextRef(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext2305);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2309.setValue(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2307);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2308 = instancObjectFactory.createNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2309);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2308);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2311 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2311.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2312 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2311);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2312 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2312)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2310 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2311 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2310.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2310);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2310.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2314 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2314.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2310);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2314.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2312);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2313 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2314);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2313);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2316 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2316.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2317 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2316);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2317 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2317)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2315 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap2316 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2315.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2315);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2315.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2319 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2319.setContextRef(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext2315);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2319.setValue(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2317);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2318 = instancObjectFactory.createRemarkForNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2319);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2318);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2320 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2320 == null){
                                    INR2320 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2320.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2320.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2320);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2322 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2322.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2323 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2322);
                            
                                if(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2323 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2323)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2321 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap2322 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2321.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2321);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2321.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2325 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2325.setContextRef(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext2321);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2325.setValue(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2323);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2324 = instancObjectFactory.createFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2325);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2324);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2327 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2327.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2328 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2327);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2328 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2328)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2326 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2327 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2326.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2326);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2326.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2330 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2330.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2326);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2330.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2328);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2329 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2330);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2329);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2332 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2332.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2333 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2332);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2333 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2333)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2331 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap2332 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2331.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2331);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2331.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2335 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2335.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext2331);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2335.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2333);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2334 = instancObjectFactory.createRemarkForFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2335);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2334);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2336 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2336 == null){
                                    INR2336 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2336.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2336.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2336);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2338 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2338.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2339 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2338);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2339 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2339)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2337 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2338 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2337.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2337);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2337.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2341 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2341.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2337);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2341.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2339);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2340 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2341);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2342 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2342 == null){
                                    INR2342 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2342.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2342.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2342);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2344 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2344.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2344);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2343 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap2344 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2343.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2343);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2343.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext2343);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2345);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2346 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2347);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2346);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2349 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2349.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2350 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2349);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2350 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2350)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2348 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap2349 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2348.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2348);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2348.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2352 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2352.setContextRef(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext2348);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2352.setValue(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2350);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2351 = instancObjectFactory.createRemarkForCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2352);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2351);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2353 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2353 == null){
                                    INR2353 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2353.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2353.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2353);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2355 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2355.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2356 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2355);
                            
                                if(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2356 != null && !"".equals(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2356)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2354 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2355 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2354.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2354);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2354.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2358 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2358.setContextRef(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2354);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2358.setValue(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2356);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2357 = instancObjectFactory.createLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2358);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2357);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2360 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2360.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2361 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2360);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2361 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2361)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2359 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2360 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2359.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2359);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2359.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2363 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2363.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2359);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2363.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2361);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2362 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2363);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2362);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2365 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2365.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2366 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2365);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2366 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2366)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2364 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap2365 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2364.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2364);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2364.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2368 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2368.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext2364);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2368.setValue(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2366);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2367 = instancObjectFactory.createRemarkForLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2368);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2367);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2369 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2369 == null){
                                    INR2369 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2369.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2369.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2369);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2371 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2371.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2372 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2371);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2372 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2372)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2370 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2371 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2370.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2370);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2370.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2374 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2374.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2370);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2374.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2372);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2373 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2374);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2373);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2375 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2375 == null){
                                    INR2375 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2375.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2375.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2375);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2377 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2377.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2378 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2377);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2378 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2378)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2376 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2377 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2376.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2376);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2376.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2380 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2380.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2376);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2380.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2378);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2379 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2380);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2379);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2382 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2382.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2383 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2382);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2383 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2383)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2381 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2382 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2381.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2381);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2381.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2385 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2385.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2381);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2385.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2383);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2384 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2385);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2384);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2386 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2386 == null){
                                    INR2386 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2386.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2386.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2386);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2388 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2388.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2389 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2388);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2389 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2389)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2387 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2388 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2387.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2387);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2387.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2391 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2391.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2387);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2391.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2389);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2390 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2391);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2390);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2393 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2393.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2394 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2393);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2394 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2394)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2392 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2393 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2392.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2392);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2392.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2396 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2396.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2392);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2396.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2394);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2395 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2396);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2395);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2398 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2398.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2398);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2397 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2398 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2397.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2397);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2397.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2397);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2399);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2400 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2401);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2400);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2402 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2402 == null){
                                    INR2402 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2402.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2402.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2402);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2404 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2404.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2405 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2404);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2405 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2405)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2403 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2404 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2403.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2403);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2403.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2407 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2407.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2403);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2407.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2405);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2406 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2407);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2406);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2409 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2409.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2410 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2409);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2410 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2410)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2408 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2409 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2408.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2408);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2408.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2412 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2412.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2408);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2412.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2410);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2411 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2412);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2411);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2414 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2414.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2415 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2414);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2415 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2415)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2413 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2414 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2413.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2413);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2413.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2417 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2417.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2413);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2417.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2415);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2416 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2417);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2416);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2418 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2418 == null){
                                    INR2418 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2418.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2418.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2418);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2420 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2420.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2421 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2420);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2421 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2421)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2419 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2420 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2419.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2419);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2419.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2423 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2423.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2419);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2423.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2421);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2422 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2423);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2422);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2425 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2425.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2426 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2425);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2426 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2426)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2424 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2425 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2424.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2424);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2424.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2428 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2428.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2424);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2428.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2426);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2427 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2428);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2427);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2430 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2430.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2431 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2430);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2431 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2431)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2429 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2430 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2429.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2429);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2429.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2433 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2433.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2429);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2433.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2431);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2432 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2433);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2432);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2434 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2434 == null){
                                    INR2434 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2434.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2434.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2434);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2436 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2436.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2436);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2435 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2436 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2435.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2435);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2435.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2435);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2437);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2438 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2439);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2438);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2441 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2441.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2442 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2441);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2442 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2442)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2440 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2441 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2440.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2440);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2440.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2444 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2444.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2440);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2444.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2442);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2443 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2444);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2443);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2446 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2446.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2447 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2446);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2447 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2447)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2445 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2446 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2445.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2445);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2445.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2449 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2449.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2445);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2449.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2447);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2448 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2449);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2448);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2450 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2450 == null){
                                    INR2450 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2450.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2450.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2450);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2452 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2452.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2452);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2451 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2452 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2451.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2451);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2451.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2451);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2453);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2454 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2455);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2454);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2457 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2457.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2458 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2457);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2458 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2458)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2456 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2457 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2456.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2456);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2456.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2460 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2460.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2456);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2460.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2458);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2459 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2460);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2459);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2462 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2462.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2463 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2462);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2463 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2463)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2461 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2462 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2461.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2461);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2461.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2465 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2465.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2461);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2465.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2463);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2464 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2465);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2464);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2466 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2466 == null){
                                    INR2466 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2466.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2466.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2466);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2468 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2468.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2468);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2467 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2468 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2467.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2467);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2467.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2467);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2469);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2470 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2471);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2470);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2473 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2473.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2474 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2473);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2474 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2474)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2472 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2473 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2472.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2472);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2472.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2476 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2476.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2472);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2476.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2474);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2475 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2476);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2475);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2478 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2478.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2479 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2478);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2479 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2479)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2477 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2478 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2477.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2477);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2477.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2481 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2481.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2477);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2481.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2479);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2480 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2481);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2480);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2482 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2482 == null){
                                    INR2482 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2482.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2482.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2482);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2484 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2484.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2484);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2483 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2484 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2483.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2483);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2483.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2483);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2485);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2486 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2487);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2486);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2489 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2489.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2490 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2489);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2490 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2490)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2488 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2489 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2488.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2488);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2488.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2492 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2492.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2488);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2492.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2490);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2491 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2492);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2491);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2494 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2494.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2495 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2494);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2495 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2495)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2493 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2494 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2493.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2493);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2493.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2497 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2497.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2493);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2497.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2495);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2496 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2497);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2496);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2498 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2498 == null){
                                    INR2498 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2498.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2498.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2498);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2500 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2500.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2500);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2499 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2500 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2499.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2499);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2499.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2499);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2501);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2502 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2503);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2502);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2505 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2505.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2506 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2505);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2506 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2506)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2504 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2505 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2504.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2504);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2504.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2508 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2508.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2504);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2508.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2506);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2507 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2508);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2507);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2510 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2510.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2511 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2510);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2511 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2511)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2509 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2510 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2509.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2509);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2509.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2513 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2513.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2509);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2513.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2511);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2512 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2513);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2512);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2514 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2514 == null){
                                    INR2514 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2514.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2514.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2514);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2516 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2516.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2516);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2515 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2516 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2515.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2515);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2515.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2515);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2517);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2518 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2519);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2518);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2521 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2521.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2522 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2521);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2522 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2522)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2520 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2521 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2520.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2520);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2520.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2524 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2524.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2520);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2524.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2522);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2523 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2524);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2523);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2526 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2526.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2527 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2526);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2527 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2527)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2525 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2526 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2525.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2525);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2525.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2529 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2529.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2525);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2529.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2527);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2528 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2529);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2528);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2530 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2530 == null){
                                    INR2530 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2530.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2530.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2530);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2532 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2532.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2532);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2531 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2532 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2531.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2531);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2531.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2531);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2533);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2534 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2535);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2534);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2537 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2537.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2538 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2537);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2538 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2538)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2536 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2537 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2536.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2536);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2536.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2540 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2540.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2536);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2540.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2538);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2539 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2540);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2539);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2542 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2542.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2543 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2542);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2543 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2543)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2541 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2542 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2541.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2541);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2541.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2545 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2545.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2541);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2545.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2543);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2544 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2545);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2544);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2546 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2546 == null){
                                    INR2546 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2546.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2546.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2546);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2548 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2548.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2548);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2547 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap2548 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2547.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2547);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2547.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext2547);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2549);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2550 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2551);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2550);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2553 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2553.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2554 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2553);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2554 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2554)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2552 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2553 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2552.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2552);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2552.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2556 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2556.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2552);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2556.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2554);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2555 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2556);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2555);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2558 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2558.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2559 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2558);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2559 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2559)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2557 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap2558 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2557.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2557);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2557.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2561 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2561.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext2557);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2561.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2559);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2560 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2561);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2560);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2562 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2562 == null){
                                    INR2562 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2562.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2562.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2562);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2564 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2564.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2564);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2563 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2564 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2563.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2563);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2563.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2563);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2565);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2566 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2567);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2566);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2568 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2568 == null){
                                    INR2568 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2568.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2568.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2568);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2570 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2570.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2570);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2569 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap2570 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2569.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2569);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2569.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext2569);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2571);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2572 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2573);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2572);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2575 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2575.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2576 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2575);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2576 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2576)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2574 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap2575 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2574.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2574);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2574.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2578 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2578.setContextRef(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext2574);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2578.setValue(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2576);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2577 = instancObjectFactory.createRemarkForSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2578);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2577);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2579 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2579 == null){
                                    INR2579 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2579.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2579.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2579);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2581 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2581.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2582 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2581);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2582 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2582)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2580 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2581 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2580.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2580);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2580.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2584 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2584.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2580);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2584.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2582);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2583 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2584);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2583);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2585 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2585 == null){
                                    INR2585 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2585.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2585.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2585);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2587 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2587.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2588 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2587);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2588 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2588)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2586 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap2587 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2586.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2586);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2586.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2590 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2590.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext2586);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2590.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2588);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2589 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2590);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2589);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2592 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2592.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2593 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2592);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2593 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2593)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2591 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap2592 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2591.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2591);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2591.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2595 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2595.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext2591);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2595.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2593);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2594 = instancObjectFactory.createRemarkForDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2595);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2594);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2596 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2596 == null){
                                    INR2596 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2596.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2596.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2596);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2598 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2598.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2599 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2598);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2599 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2599)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2597 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2598 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2597.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2597);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2597.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2601 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2601.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2597);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2601.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2599);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2600 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2601);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2600);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2602 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2602 == null){
                                    INR2602 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2602.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2602.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2602);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2604 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2604.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2605 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2604);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2605 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2605)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2603 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap2604 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2603.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2603);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2603.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2607 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2607.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext2603);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2607.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2605);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2606 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2607);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2606);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2609 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2609.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2610 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2609);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2610 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2610)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2608 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap2609 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2608.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2608);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2608.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2612 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2612.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext2608);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2612.setValue(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2610);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2611 = instancObjectFactory.createRemarkForSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2612);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2611);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2613 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2613 == null){
                                    INR2613 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2613.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2613.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2613);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2615 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2615.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2616 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2615);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2616 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2616)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2614 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2615 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2614.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2614);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2614.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2618 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2618.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2614);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2618.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2616);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2617 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2618);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2617);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2619 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2619 == null){
                                    INR2619 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2619.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2619.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2619);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2621 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2621.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2622 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2621);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2622 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2622)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2620 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap2621 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2620.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2620);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2620.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2624 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2624.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext2620);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2624.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2622);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2623 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2624);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2623);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2626 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2626.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2627 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2626);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2627 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2627)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2625 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap2626 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2625.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2625);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2625.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2629 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2629.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext2625);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2629.setValue(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2627);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2628 = instancObjectFactory.createRemarkForOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2629);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2628);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2630 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2630 == null){
                                    INR2630 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2630.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2630.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2630);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2632 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2632.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2633 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2632);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2633 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2633)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2631 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2632 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2631.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2631);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2631.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2635 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2635.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2631);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2635.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2633);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2634 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2635);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2634);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2636 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2636 == null){
                                    INR2636 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2636.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2636.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2636);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2638 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2638.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2639 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2638);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2639 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2639)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2637 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap2638 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2637.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2637);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2637.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2641 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2641.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext2637);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2641.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2639);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2640 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2641);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2640);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2643 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2643.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2644 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2643);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2644 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2644)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2642 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap2643 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2642.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2642);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2642.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2646 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2646.setContextRef(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext2642);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2646.setValue(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2644);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2645 = instancObjectFactory.createRemarkForLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2646);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2645);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2647 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2647 == null){
                                    INR2647 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2647.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2647.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2647);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2649 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2649.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2650 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2649);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2650 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2650)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2648 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2649 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2648.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2648);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2648.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2652 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2652.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2648);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2652.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2650);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2651 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2652);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2651);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2654 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2654.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2655 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2654);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2655 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2655)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2653 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2654 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2653.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2653);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2653.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2657 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2657.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2653);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2657.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2655);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2656 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2657);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2656);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2659 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2659.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2660 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2659);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2660 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2660)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2658 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2659 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2658.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2658);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2658.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2662 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2662.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2658);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2662.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2660);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2661 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2662);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2661);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2663 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2663 == null){
                                    INR2663 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2663.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2663.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2663);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2665 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2665.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2666 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2665);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2666 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2666)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2664 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2665 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2664.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2664);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2664.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2668 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2668.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2664);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2668.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2666);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2667 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2668);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2667);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2670 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2670.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2671 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2670);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2671 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2671)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2669 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2670 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2669.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2669);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2669.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2673 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2673.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2669);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2673.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2671);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2672 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2673);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2672);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2675 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2675.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2675);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2674 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2675 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2674.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2674);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2674.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2674);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2676);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2677 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2678);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2677);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2679 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2679 == null){
                                    INR2679 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2679.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2679.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2679);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2681 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2681.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2682 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2681);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2682 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2682)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2680 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2681 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2680.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2680);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2680.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2684 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2684.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2680);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2684.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2682);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2683 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2684);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2683);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2686 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2686.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2687 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2686);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2687 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2687)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2685 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2686 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2685.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2685);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2685.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2689 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2689.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2685);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2689.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2687);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2688 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2689);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2688);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2691 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2691.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2692 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2691);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2692 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2692)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2690 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2691 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2690.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2690);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2690.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2694 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2694.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2690);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2694.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2692);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2693 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2694);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2693);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2695 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2695 == null){
                                    INR2695 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2695.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2695.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2695);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2697 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2697.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2697);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2696 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2697 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2696.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2696);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2696.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2696);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2698);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2699 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2700);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2699);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2702 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2702.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2703 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2702);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2703 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2703)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2701 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2702 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2701.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2701);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2701.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2705 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2705.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2701);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2705.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2703);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2704 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2705);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2704);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2707 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2707.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2708 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2707);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2708 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2708)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2706 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2707 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2706.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2706);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2706.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2710 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2710.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2706);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2710.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2708);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2709 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2710);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2709);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2711 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2711 == null){
                                    INR2711 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2711.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2711.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2711);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2713 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2713.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2713);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2712 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2713 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2712.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2712);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2712.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2712);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2714);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2715 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2716);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2715);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2718 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2718.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2719 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2718);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2719 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2719)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2717 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2718 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2717.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2717);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2717.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2721 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2721.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2717);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2721.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2719);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2720 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2721);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2720);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2723 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2723.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2724 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2723);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2724 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2724)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2722 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2723 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2722.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2722);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2722.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2726 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2726.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2722);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2726.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2724);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2725 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2726);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2725);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2727 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2727 == null){
                                    INR2727 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2727.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2727.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2727);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2729 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2729.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2729);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2728 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap2729 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2728.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2728);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2728.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext2728);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2730);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2731 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2732);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2731);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2734 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2734.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2735 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2734);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2735 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2735)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2733 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2734 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2733.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2733);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2733.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2737 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2737.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2733);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2737.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2735);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2736 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2737);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2736);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2739 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2739.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2740 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2739);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2740 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2740)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2738 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap2739 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2738.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2738);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2738.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2742 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2742.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext2738);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2742.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2740);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2741 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2742);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2741);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2743 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2743 == null){
                                    INR2743 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2743.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2743.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2743);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2745 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2745.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2745);
                            
                                if(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746 != null && !"".equals(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2744 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap2745 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2744.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2744);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2744.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748.setContextRef(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext2744);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748.setValue(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2746);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2747 = instancObjectFactory.createBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2748);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2747);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2750 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2750.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2751 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2750);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2751 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2751)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2749 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2750 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2749.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2749);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2749.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2753 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2753.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2749);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2753.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2751);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2752 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2753);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2752);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2755 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2755.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2756 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2755);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2756 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2756)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2754 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap2755 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2754.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2754);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2754.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2758 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2758.setContextRef(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext2754);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2758.setValue(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2756);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2757 = instancObjectFactory.createRemarkForBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2758);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2757);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2759 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2759 == null){
                                    INR2759 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2759.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2759.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2759);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2761 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2761.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2761);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2760 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2761 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2760.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2760);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2760.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2760);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2762);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2763 = instancObjectFactory.createDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2764);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2763);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2766 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2766.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2767 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2766);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2767 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2767)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2765 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2766 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2765.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2765);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2765.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2769 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2769.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2765);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2769.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2767);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2768 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2769);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2768);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2771 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2771.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2772 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2771);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2772 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2772)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2770 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap2771 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2770.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2770);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2770.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2774 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2774.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext2770);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2774.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2772);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2773 = instancObjectFactory.createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2774);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2773);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2775 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2775 == null){
                                    INR2775 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2775.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2775.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2775);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2777 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2777.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2777);
                            
                                if(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778 != null && !"".equals(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2776 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap2777 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2776.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2776);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2776.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780.setContextRef(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext2776);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780.setValue(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2778);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2779 = instancObjectFactory.createOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2780);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2779);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2782 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2782.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2783 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2782);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2783 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2783)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2781 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2782 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2781.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2781);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2781.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2785 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2785.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2781);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2785.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2783);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2784 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2785);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2784);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2787 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2787.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2788 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2787);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2788 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2788)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2786 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap2787 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2786.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2786);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2786.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2790 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2790.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext2786);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2790.setValue(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2788);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2789 = instancObjectFactory.createRemarkForOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2790);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2789);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2791 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2791 == null){
                                    INR2791 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2791.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2791.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2791);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2793 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2793.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2793);
                            
                                if(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794 != null && !"".equals(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2792 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap2793 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2792.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2792);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2792.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796.setContextRef(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext2792);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796.setValue(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2794);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2795 = instancObjectFactory.createCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2796);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2795);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2798 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2798.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2799 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2798);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2799 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2799)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2797 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2798 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2797.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2797);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2797.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2801 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2801.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2797);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2801.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2799);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2800 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2801);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2800);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2803 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2803.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2804 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2803);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2804 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2804)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2802 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap2803 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2802.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2802);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2802.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2806 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2806.setContextRef(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext2802);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2806.setValue(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2804);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2805 = instancObjectFactory.createRemarkForCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2806);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2805);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2807 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2807 == null){
                                    INR2807 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2807.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2807.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2807);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2809 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2809.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2809);
                            
                                if(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810 != null && !"".equals(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2808 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap2809 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2808.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2808);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2808.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812.setContextRef(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext2808);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812.setValue(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2810);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2811 = instancObjectFactory.createNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2812);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2811);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2814 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2814.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2815 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2814);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2815 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2815)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2813 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2814 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2813.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2813);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2813.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2817 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2817.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2813);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2817.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2815);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2816 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2817);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2816);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2819 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2819.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2820 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2819);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2820 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2820)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2818 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap2819 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2818.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2818);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2818.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2822 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2822.setContextRef(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext2818);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2822.setValue(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2820);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2821 = instancObjectFactory.createRemarkForNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2822);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2821);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2823 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2823 == null){
                                    INR2823 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2823.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2823.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2823);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2825 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2825.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2825);
                            
                                if(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826 != null && !"".equals(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2824 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap2825 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2824.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2824);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2824.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828.setContextRef(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext2824);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828.setValue(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2826);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2827 = instancObjectFactory.createBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2828);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2827);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2830 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2830.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2831 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2830);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2831 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2831)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2829 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2830 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2829.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2829);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2829.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2833 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2833.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2829);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2833.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2831);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2832 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2833);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2832);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2835 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2835.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2836 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2835);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2836 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2836)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2834 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap2835 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2834.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2834);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2834.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2838 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2838.setContextRef(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext2834);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2838.setValue(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2836);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2837 = instancObjectFactory.createRemarkForBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2838);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2837);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2840 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2840.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2841 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2840);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2841 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2841)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2839 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2840 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2839.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2839);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2839.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2843 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2843.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2839);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2843.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2841);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2842 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2843);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2842);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2845 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2845.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2846 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2845);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2846 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2846)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2844 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2845 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2844.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2844);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2844.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2848 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2848.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2844);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2848.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2846);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2847 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2848);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2847);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap2850 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap2850.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2851 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap2850);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2851 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2851)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext2849 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap2850 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2849.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2849);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2849.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2853 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2853.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext2849);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2853.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersValue2851);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2852 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersDataType2853);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisOtherBanksOrDepositTakersMembersElement2852);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2854 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2854 == null){
                                    INR2854 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2854.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2854.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2854);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2856 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2856.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2857 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2856);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2857 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2857)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2855 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2856 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2855.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2855);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2855.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2859 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2859.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2855);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2859.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2857);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2858 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2859);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2858);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2860 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2860 == null){
                                    INR2860 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2860.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2860.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2860);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2862 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2862.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2863 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2862);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2863 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2863)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2861 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2862 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2861.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2861);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2861.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2865 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2865.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2861);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2865.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2863);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2864 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2865);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2864);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2867 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2867.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2868 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2867);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2868 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2868)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2866 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2867 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2866.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2866);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2866.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2870 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2870.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2866);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2870.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2868);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2869 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2870);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2869);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2871 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2871 == null){
                                    INR2871 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2871.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2871.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2871);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2873 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2873.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2873);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2872 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2873 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2872.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2872);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2872.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2872);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2874);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2875 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2876);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2875);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2877 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2877 == null){
                                    INR2877 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2877.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2877.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2877);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2879 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2879.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2879);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2878 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2879 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2878.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2878);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2878.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2878);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2880);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2881 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2882);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2881);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2884 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2884.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2885 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2884);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2885 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2885)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2883 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2884 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2883.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2883);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2883.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2887 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2887.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2883);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2887.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2885);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2886 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2887);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2886);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2888 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2888 == null){
                                    INR2888 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2888.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2888.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2888);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2890 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2890.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2891 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2890);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2891 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2891)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2889 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2890 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2889.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2889);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2889.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2893 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2893.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2889);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2893.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2891);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2892 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2893);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2892);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2894 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2894 == null){
                                    INR2894 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2894.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2894.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2894);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2896 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2896.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2897 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2896);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2897 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2897)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2895 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2896 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2895.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2895);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2895.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2899 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2899.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2895);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2899.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2897);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2898 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2899);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2898);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2901 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2901.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2902 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2901);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2902 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2902)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2900 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2901 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2900.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2900);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2900.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2904 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2904.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2900);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2904.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2902);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2903 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2904);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2903);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2905 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2905 == null){
                                    INR2905 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2905.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2905.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2905);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2907 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2907.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2908 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2907);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2908 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2908)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2906 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2907 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2906.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2906);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2906.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2910 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2910.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2906);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2910.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2908);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2909 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2910);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2909);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2911 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2911 == null){
                                    INR2911 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2911.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2911.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2911);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2913 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2913.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2914 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2913);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2914 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2914)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2912 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2913 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2912.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2912);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2912.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2916 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2916.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2912);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2916.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2914);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2915 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2916);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2915);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2918 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2918.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2919 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2918);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2919 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2919)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2917 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2918 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2917.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2917);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2917.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2921 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2921.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2917);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2921.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2919);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2920 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2921);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2920);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2922 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2922 == null){
                                    INR2922 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2922.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2922.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2922);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2924 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2924.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2925 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2924);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2925 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2925)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2923 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2924 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2923.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2923);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2923.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2927 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2927.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2923);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2927.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2925);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2926 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2927);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2926);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2928 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2928 == null){
                                    INR2928 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2928.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2928.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2928);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2930 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2930.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2931 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2930);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2931 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2931)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2929 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2930 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2929.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2929);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2929.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2933 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2933.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2929);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2933.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2931);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2932 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2933);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2932);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2935 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2935.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2936 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2935);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2936 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2936)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2934 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2935 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2934.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2934);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2934.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2938 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2938.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2934);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2938.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2936);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2937 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2938);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2937);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2939 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2939 == null){
                                    INR2939 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2939.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2939.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2939);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2941 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2941.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2942 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2941);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2942 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2942)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2940 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2941 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2940.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2940);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2940.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2944 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2944.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2940);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2944.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2942);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2943 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2944);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2943);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2945 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2945 == null){
                                    INR2945 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2945.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2945.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2945);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2947 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2947.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2948 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2947);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2948 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2948)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2946 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2947 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2946.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2946);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2946.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2950 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2950.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2946);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2950.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2948);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2949 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2950);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2949);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2952 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2952.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2953 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2952);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2953 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2953)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2951 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap2952 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2951.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2951);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2951.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2955 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2955.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext2951);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2955.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2953);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2954 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2955);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2954);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2956 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2956 == null){
                                    INR2956 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2956.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2956.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2956);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2958 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2958.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2959 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2958);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2959 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2959)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2957 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2958 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2957.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2957);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2957.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2961 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2961.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2957);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2961.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2959);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2960 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2961);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2960);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2962 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2962 == null){
                                    INR2962 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2962.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2962.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2962);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2964 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2964.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2965 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2964);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2965 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2965)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2963 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2964 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2963.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2963);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2963.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2967 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2967.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2963);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2967.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2965);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2966 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2967);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2966);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2969 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2969.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2970 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2969);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2970 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2970)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2968 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap2969 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2968.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2968);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2968.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2972 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2972.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext2968);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2972.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2970);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2971 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2972);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2971);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2973 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2973 == null){
                                    INR2973 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2973.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2973.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2973);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2975 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2975.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2976 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2975);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2976 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2976)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2974 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2975 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2974.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2974);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2974.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2978 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2978.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2974);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2978.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2976);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2977 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2978);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2977);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2979 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2979 == null){
                                    INR2979 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2979.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2979.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2979);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2981 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2981.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2982 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2981);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2982 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2982)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2980 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2981 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2980.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2980);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2980.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2984 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2984.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2980);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2984.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2982);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2983 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2984);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2983);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2986 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2986.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2987 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2986);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2987 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2987)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2985 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap2986 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2985.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2985);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2985.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2989 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2989.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext2985);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2989.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2987);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2988 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2989);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2988);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2990 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2990 == null){
                                    INR2990 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2990.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2990.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2990);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2992 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2992.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2993 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2992);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2993 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2993)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2991 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2992 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2991.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2991);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2991.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2995 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2995.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2991);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2995.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2993);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2994 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType2995);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement2994);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2996 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2996 == null){
                                    INR2996 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2996.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2996.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2996);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2998 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2998.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2999 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2998);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2999 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2999)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2997 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap2998 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2997.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2997);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2997.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3001 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3001.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext2997);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3001.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue2999);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3000 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3001);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3000);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3003 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3003.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3004 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3003);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3004 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3004)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3002 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3003 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3002.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3002);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3002.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3006 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3006.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3002);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3006.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3004);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3005 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3006);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3005);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3007 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3007 == null){
                                    INR3007 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3007.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3007.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3007);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3009 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3009.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3010 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3009);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3010 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3010)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3008 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3009 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3008.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3008);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3012 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3012.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3008);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3012.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3011 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3012);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3013 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3013 == null){
                                    INR3013 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3013.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3013.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3013);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3015 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3015.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3016 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3015);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3016 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3016)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3014 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3015 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3014.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3014);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3014.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3018 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3018.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3014);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3018.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3016);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3017 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3018);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3017);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3020 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3020.put("ParameterAxis", "OtherBanksOrDepositTakersMembers");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3021 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3020);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3021 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3021)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3019 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3020 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3019.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3019);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3019.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3023 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3023.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3019);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3023.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersValue3021);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3022 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersDataType3023);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisOtherBanksOrDepositTakersMembersElement3022);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR3024 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3024 == null){
                                    INR3024 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3024.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3024.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3024);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - TotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3026 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3026.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3027 = DBS01ReportUtil.retrieveValueForElement(field.getTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3026);
                            
                                if(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3027 != null && !"".equals(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3027)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3025 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisMap3026 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3025.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3025);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3025.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3029 = new StringItemType();
                                    explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3029.setContextRef(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisContext3025);
                                    
                                    
                                        explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3029.setValue(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberValue3027);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberElement3028 = instancObjectFactory.createTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberDataType3029);
                                    bodyElements.add(explictMember1DBS01FS_Layout2TotalAssetsReportedForFSIParameterAxisFSMemberElement3028);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3031 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3031.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3032 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3031);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3032 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3032)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3030 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3031 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3030.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3030);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3030.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3034 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3034.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3030);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3034.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3032);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3033 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3034);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3033);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForTotalAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3036 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3036.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3037 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForTotalAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3036);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3037 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3037)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3035 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisMap3036 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3035.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3035);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3035.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3039 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3039.setContextRef(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisContext3035);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3039.setValue(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberValue3037);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberElement3038 = instancObjectFactory.createRemarkForTotalAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberDataType3039);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForTotalAssetsReportedForFSIParameterAxisFSMemberElement3038);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3040 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3040 == null){
                                    INR3040 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3040.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3040.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3040);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3042 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3042.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3043 = DBS01ReportUtil.retrieveValueForElement(field.getNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3042);
                            
                                if(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3043 != null && !"".equals(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3043)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3041 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisMap3042 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3041.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3041);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3041.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3045 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3045.setContextRef(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisContext3041);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3045.setValue(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3043);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3044 = instancObjectFactory.createNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3045);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3044);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3047 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3047.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3048 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3047);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3048 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3048)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3046 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3047 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3046.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3046);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3046.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3050 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3050.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3046);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3050.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3048);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3049 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3050);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3049);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNonfinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3052 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3052.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3053 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNonfinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3052);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3053 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3053)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3051 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisMap3052 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3051.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3051);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3051.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3055 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3055.setContextRef(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisContext3051);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3055.setValue(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberValue3053);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3054 = instancObjectFactory.createRemarkForNonfinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberDataType3055);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNonfinancialAssetsReportedForFSIParameterAxisFSMemberElement3054);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3056 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3056 == null){
                                    INR3056 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3056.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3056.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3056);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3058 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3058.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3059 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3058);
                            
                                if(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3059 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3059)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3057 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisMap3058 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3057.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3057);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3057.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3061 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3061.setContextRef(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisContext3057);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3061.setValue(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberValue3059);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberElement3060 = instancObjectFactory.createFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberDataType3061);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialAssetsReportedForFSIParameterAxisFSMemberElement3060);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3063 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3063.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3064 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3063);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3064 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3064)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3062 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3063 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3062.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3062);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3062.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3066 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3066.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3062);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3066.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3064);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3065 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3066);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3065);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3068 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3068.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3069 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3068);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3069 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3069)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3067 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisMap3068 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3067.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3067);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3067.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3071 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3071.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisContext3067);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3071.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberValue3069);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberElement3070 = instancObjectFactory.createRemarkForFinancialAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberDataType3071);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialAssetsReportedForFSIParameterAxisFSMemberElement3070);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3072 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3072 == null){
                                    INR3072 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3072.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3072.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3072);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3074 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3074.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3075 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3074);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3075 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3075)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3073 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3074 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3073.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3073);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3073.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3077 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3077.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3073);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3077.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3075);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3076 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3077);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3076);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3078 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3078 == null){
                                    INR3078 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3078.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3078.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3078);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3080 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3080.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3081 = DBS01ReportUtil.retrieveValueForElement(field.getCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3080);
                            
                                if(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3081 != null && !"".equals(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3081)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3079 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisMap3080 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3079.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3079);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3079.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3083 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3083.setContextRef(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisContext3079);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3083.setValue(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3081);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3082 = instancObjectFactory.createCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3083);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3082);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCurrencyAndDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3085 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3085.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3086 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCurrencyAndDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3085);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3086 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3086)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3084 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisMap3085 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3084.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3084);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3084.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3088 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3088.setContextRef(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisContext3084);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3088.setValue(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberValue3086);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3087 = instancObjectFactory.createRemarkForCurrencyAndDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberDataType3088);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCurrencyAndDepositsReportedForFSIParameterAxisFSMemberElement3087);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3089 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3089 == null){
                                    INR3089 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3089.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3089.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3089);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3091 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3091.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3092 = DBS01ReportUtil.retrieveValueForElement(field.getLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3091);
                            
                                if(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3092 != null && !"".equals(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3092)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3090 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3091 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3090.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3090);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3090.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3094 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3094.setContextRef(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3090);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3094.setValue(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3092);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3093 = instancObjectFactory.createLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3094);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3093);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3096 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3096.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3097 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3096);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3097 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3097)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3095 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3096 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3095.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3095);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3095.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3099 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3099.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3095);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3099.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3097);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3098 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3099);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3098);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansAfterSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3101 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3101.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3102 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansAfterSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3101);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3102 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3102)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3100 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisMap3101 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3100.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3100);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3100.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3104 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3104.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisContext3100);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3104.setValue(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3102);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3103 = instancObjectFactory.createRemarkForLoansAfterSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3104);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansAfterSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3103);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3105 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3105 == null){
                                    INR3105 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3105.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3105.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3105);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3107 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3107.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3108 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3107);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3108 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3108)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3106 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3107 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3106.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3106);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3106.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3110 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3110.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3106);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3110.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3108);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3109 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3110);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3109);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3111 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3111 == null){
                                    INR3111 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3111.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3111.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3111);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3113 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3113.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3114 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3113);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3114 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3114)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3112 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3113 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3112.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3112);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3112.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3116 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3116.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3112);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3116.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3114);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3115 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3116);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3115);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3118 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3118.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3119 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3118);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3119 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3119)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3117 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3118 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3117.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3117);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3117.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3121 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3121.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3117);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3121.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3119);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3120 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3121);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3120);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3122 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3122 == null){
                                    INR3122 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3122.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3122.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3122);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3124 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3124.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3125 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3124);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3125 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3125)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3123 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3124 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3123.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3123);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3123.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3127 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3127.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3123);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3127.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3125);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3126 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3127);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3126);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3129 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3129.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3130 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3129);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3130 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3130)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3128 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3129 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3128.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3128);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3128.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3132 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3132.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3128);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3132.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3130);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3131 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3132);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3131);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3134 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3134.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3135 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3134);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3135 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3135)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3133 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3134 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3133.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3133);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3133.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3137 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3137.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3133);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3137.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3135);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3136 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3137);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3138 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3138 == null){
                                    INR3138 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3138.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3138.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3138);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3140 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3140.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3141 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3140);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3141 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3141)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3139 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3140 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3139.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3139);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3139.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3143 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3143.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3139);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3143.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3141);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3142 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3143);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3142);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3145 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3145.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3146 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3145);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3146 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3146)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3144 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3145 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3144.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3144);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3144.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3148 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3148.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3144);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3148.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3146);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3147 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3148);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3147);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3150 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3150.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3151 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3150);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3151 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3151)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3149 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3150 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3149.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3149);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3149.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3153 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3153.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3149);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3153.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3151);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3152 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3153);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3154 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3154 == null){
                                    INR3154 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3154.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3154.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3154);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3156 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3156.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3157 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3156);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3157 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3157)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3155 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3156 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3155.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3155);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3155.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3159 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3159.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3155);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3159.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3157);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3158 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3159);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3158);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3161 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3161.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3162 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3161);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3162 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3162)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3160 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3161 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3160.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3160);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3160.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3164 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3164.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3160);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3164.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3162);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3163 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3164);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3163);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3166 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3166.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3167 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3166);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3167 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3167)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3165 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3166 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3165.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3165);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3165.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3169 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3169.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3165);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3169.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3167);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3168 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3169);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3168);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3170 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3170 == null){
                                    INR3170 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3170.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3170.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3170);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3172 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3172.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3173 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3172);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3173 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3173)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3171 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3172 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3171.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3171);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3171.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3175 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3175.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3171);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3175.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3173);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3174 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3175);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3174);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3177 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3177.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3178 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3177);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3178 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3178)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3176 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3177 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3176.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3176);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3176.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3180 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3180.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3176);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3180.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3178);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3179 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3180);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3179);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3182 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3182.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3183 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3182);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3183 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3183)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3181 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3182 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3181.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3181);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3181.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3185 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3185.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3181);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3185.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3183);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3184 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3185);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3184);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3186 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3186 == null){
                                    INR3186 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3186.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3186.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3186);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3188 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3188.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3189 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3188);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3189 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3189)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3187 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3188 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3187.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3187);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3187.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3191 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3191.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3187);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3191.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3189);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3190 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3191);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3190);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3193 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3193.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3194 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3193);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3194 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3194)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3192 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3193 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3192.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3192);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3192.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3196 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3196.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3192);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3196.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3194);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3195 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3196);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3195);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3198 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3198.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3199 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3198);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3199 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3199)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3197 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3198 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3197.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3197);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3197.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3201 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3201.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3197);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3201.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3199);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3200 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3201);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3200);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3202 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3202 == null){
                                    INR3202 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3202.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3202.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3202);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3204 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3204.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3205 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3204);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3205 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3205)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3203 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3204 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3203.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3203);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3203.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3207 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3207.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3203);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3207.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3205);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3206 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3207);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3206);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3209 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3209.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3210 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3209);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3210 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3210)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3208 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3209 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3208.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3208);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3208.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3212 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3212.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3208);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3212.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3210);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3211 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3212);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3211);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3214 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3214.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3215 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3214);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3215 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3215)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3213 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3214 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3213.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3213);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3213.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3217 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3217.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3213);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3217.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3215);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3216 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3217);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3216);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3218 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3218 == null){
                                    INR3218 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3218.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3218.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3218);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3220 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3220.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3221 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3220);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3221 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3221)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3219 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3220 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3219.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3219);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3219.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3223 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3223.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3219);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3223.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3221);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3222 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3223);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3222);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3225 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3225.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3226 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3225);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3226 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3226)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3224 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3225 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3224.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3224);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3224.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3228 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3228.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3224);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3228.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3226);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3227 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3228);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3227);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3230 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3230.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3231 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3230);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3231 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3231)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3229 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3230 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3229.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3229);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3229.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3233 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3233.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3229);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3233.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3231);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3232 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3233);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3232);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3234 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3234 == null){
                                    INR3234 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3234.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3234.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3234);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3236 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3236.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3237 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3236);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3237 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3237)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3235 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3236 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3235.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3235);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3235.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3239 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3239.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3235);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3239.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3237);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3238 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3239);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3238);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3241 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3241.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3242 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3241);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3242 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3242)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3240 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3241 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3240.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3240);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3240.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3244 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3244.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3240);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3244.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3242);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3243 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3244);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3243);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3246 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3246.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3247 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3246);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3247 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3247)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3245 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3246 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3245.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3245);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3245.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3249 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3249.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3245);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3249.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3247);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3248 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3249);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3248);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3250 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3250 == null){
                                    INR3250 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3250.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3250.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3250);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3252 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3252.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3253 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3252);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3253 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3253)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3251 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3252 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3251.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3251);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3251.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3255 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3255.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3251);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3255.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3253);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3254 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3255);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3254);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3257 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3257.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3258 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3257);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3258 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3258)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3256 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3257 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3256.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3256);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3256.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3260 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3260.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3256);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3260.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3258);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3259 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3260);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3259);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3262 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3262.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3263 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3262);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3263 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3263)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3261 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3262 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3261.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3261);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3261.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3265 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3265.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3261);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3265.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3263);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3264 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3265);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3264);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3266 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3266 == null){
                                    INR3266 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3266.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3266.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3266);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3268 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3268.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3269 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3268);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3269 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3269)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3267 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3268 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3267.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3267);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3267.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3271 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3271.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3267);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3271.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3269);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3270 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3271);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3270);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3273 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3273.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3274 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3273);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3274 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3274)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3272 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3273 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3272.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3272);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3272.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3276 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3276.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3272);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3276.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3274);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3275 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3276);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3275);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3278 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3278.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3279 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3278);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3279 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3279)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3277 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3278 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3277.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3277);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3277.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3281 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3281.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3277);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3281.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3279);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3280 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3281);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3280);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3282 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3282 == null){
                                    INR3282 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3282.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3282.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3282);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3284 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3284.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3285 = DBS01ReportUtil.retrieveValueForElement(field.getLoansReportedForFSI(), explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3284);
                            
                                if(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3285 != null && !"".equals(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3285)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3283 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisMap3284 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3283.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3283);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3283.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3287 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3287.setContextRef(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisContext3283);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3287.setValue(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberValue3285);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3286 = instancObjectFactory.createLoansReportedForFSI(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberDataType3287);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LoansReportedForFSIParameterAxisFSMemberElement3286);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3289 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3289.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3290 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3289);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3290 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3290)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3288 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3289 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3288.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3288);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3288.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3292 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3292.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3288);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3292.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3290);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3291 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3292);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3291);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLoansReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3294 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3294.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3295 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLoansReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3294);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3295 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3295)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3293 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisMap3294 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3293.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3293);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3293.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3297 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3297.setContextRef(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisContext3293);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3297.setValue(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberValue3295);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3296 = instancObjectFactory.createRemarkForLoansReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberDataType3297);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLoansReportedForFSIParameterAxisFSMemberElement3296);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3298 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3298 == null){
                                    INR3298 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3298.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3298.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3298);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3300 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3300.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3301 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3300);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3301 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3301)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3299 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3300 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3299.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3299);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3299.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3303 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3303.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3299);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3303.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3301);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3302 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3303);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3302);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3304 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3304 == null){
                                    INR3304 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3304.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3304.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3304);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3306 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3306.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3307 = DBS01ReportUtil.retrieveValueForElement(field.getSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3306);
                            
                                if(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3307 != null && !"".equals(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3307)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3305 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisMap3306 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3305.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3305);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3305.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3309 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3309.setContextRef(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisContext3305);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3309.setValue(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberValue3307);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3308 = instancObjectFactory.createSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3309);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SpecificProvisionsReportedForFSIParameterAxisFSMemberElement3308);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSpecificProvisionsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3311 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3311.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3312 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSpecificProvisionsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3311);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3312 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3312)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3310 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisMap3311 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3310.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3310);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3310.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3314 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3314.setContextRef(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisContext3310);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3314.setValue(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberValue3312);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3313 = instancObjectFactory.createRemarkForSpecificProvisionsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberDataType3314);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSpecificProvisionsReportedForFSIParameterAxisFSMemberElement3313);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3315 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3315 == null){
                                    INR3315 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3315.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3315.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3315);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3317 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3317.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3318 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3317);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3318 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3318)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3316 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3317 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3316.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3316);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3316.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3320 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3320.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3316);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3320.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3318);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3319 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3320);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3319);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3321 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3321 == null){
                                    INR3321 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3321.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3321.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3321);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3323 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3323.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3324 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3323);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3324 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3324)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3322 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisMap3323 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3322.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3322);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3322.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3326 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3326.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisContext3322);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3326.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberValue3324);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3325 = instancObjectFactory.createDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3326);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesReportedForFSIParameterAxisFSMemberElement3325);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3328 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3328.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3329 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3328);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3329 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3329)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3327 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisMap3328 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3327.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3327);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3327.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3331 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3331.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisContext3327);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3331.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberValue3329);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberElement3330 = instancObjectFactory.createRemarkForDebtSecuritiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberDataType3331);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesReportedForFSIParameterAxisFSMemberElement3330);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3332 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3332 == null){
                                    INR3332 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3332.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3332.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3332);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3334 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3334.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3335 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3334);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3335 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3335)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3333 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3334 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3333.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3333);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3333.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3337 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3337.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3333);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3337.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3335);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3336 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3337);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3336);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3338 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3338 == null){
                                    INR3338 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3338.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3338.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3338);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3340 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3340.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3341 = DBS01ReportUtil.retrieveValueForElement(field.getSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3340);
                            
                                if(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3341 != null && !"".equals(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3341)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3339 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisMap3340 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3339.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3339);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3339.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3343 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3343.setContextRef(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisContext3339);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3343.setValue(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3341);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3342 = instancObjectFactory.createSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3343);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3342);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesAndOtherEquityReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3345 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3345.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3346 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesAndOtherEquityReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3345);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3346 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3346)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3344 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisMap3345 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3344.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3344);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3344.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3348 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3348.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisContext3344);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3348.setValue(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberValue3346);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3347 = instancObjectFactory.createRemarkForSharesAndOtherEquityReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberDataType3348);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesAndOtherEquityReportedForFSIParameterAxisFSMemberElement3347);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3349 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3349 == null){
                                    INR3349 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3349.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3349.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3349);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3351 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3351.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3352 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3351);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3352 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3352)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3350 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3351 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3350.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3350);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3350.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3354 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3354.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3350);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3354.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3352);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3353 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3354);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3353);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3355 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3355 == null){
                                    INR3355 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3355.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3355.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3355);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3357 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3357.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3358 = DBS01ReportUtil.retrieveValueForElement(field.getOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3357);
                            
                                if(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3358 != null && !"".equals(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3358)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3356 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisMap3357 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3356.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3356);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3356.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3360 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3360.setContextRef(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisContext3356);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3360.setValue(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberValue3358);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3359 = instancObjectFactory.createOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberDataType3360);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherAssetsReportedForFSIParameterAxisFSMemberElement3359);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherAssetsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3362 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3362.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3363 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherAssetsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3362);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3363 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3363)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3361 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisMap3362 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3361.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3361);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3361.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3365 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3365.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisContext3361);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3365.setValue(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberValue3363);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberElement3364 = instancObjectFactory.createRemarkForOtherAssetsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberDataType3365);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherAssetsReportedForFSIParameterAxisFSMemberElement3364);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3366 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3366 == null){
                                    INR3366 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3366.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3366.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3366);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3368 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3368.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3369 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3368);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3369 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3369)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3367 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3368 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3367.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3367);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3367.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3371 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3371.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3367);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3371.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3369);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3370 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3371);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3370);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3372 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3372 == null){
                                    INR3372 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3372.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3372.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3372);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - LiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3374 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3374.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3375 = DBS01ReportUtil.retrieveValueForElement(field.getLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3374);
                            
                                if(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3375 != null && !"".equals(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3375)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3373 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisMap3374 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3373.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3373);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3373.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3377 = new StringItemType();
                                    explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3377.setContextRef(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisContext3373);
                                    
                                    
                                        explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3377.setValue(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberValue3375);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3376 = instancObjectFactory.createLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberDataType3377);
                                    bodyElements.add(explictMember1DBS01FS_Layout2LiabilitiesReportedForFSIParameterAxisFSMemberElement3376);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3379 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3379.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3380 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3379);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3380 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3380)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3378 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisMap3379 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3378.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3378);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3378.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3382 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3382.setContextRef(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisContext3378);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3382.setValue(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberValue3380);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberElement3381 = instancObjectFactory.createRemarkForLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberDataType3382);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForLiabilitiesReportedForFSIParameterAxisFSMemberElement3381);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3383 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3383 == null){
                                    INR3383 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3383.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3383.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3383);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3385 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3385.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3386 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3385);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3386 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3386)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3384 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3385 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3384.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3384);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3384.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3388 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3388.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3384);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3388.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3386);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3387 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3388);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3387);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3390 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3390.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3391 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3390);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3391 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3391)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3389 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3390 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3389.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3389);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3389.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3393 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3393.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3389);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3393.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3391);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3392 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3393);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3392);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3395 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3395.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3396 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3395);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3396 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3396)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3394 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3395 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3394.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3394);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3394.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3398 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3398.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3394);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3398.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3396);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3397 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3398);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3397);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3399 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3399 == null){
                                    INR3399 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3399.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3399.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3399);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3401 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3401.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3402 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3401);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3402 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3402)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3400 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3401 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3400.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3400);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3400.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3404 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3404.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3400);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3404.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3402);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3403 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3404);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3403);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3406 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3406.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3407 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3406);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3407 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3407)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3405 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3406 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3405.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3405);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3405.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3409 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3409.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3405);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3409.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3407);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3408 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3409);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3408);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3411 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3411.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3412 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3411);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3412 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3412)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3410 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3411 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3410.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3410);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3410.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3414 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3414.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3410);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3414.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3412);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3413 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3414);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3413);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3415 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3415 == null){
                                    INR3415 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3415.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3415.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3415);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3417 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3417.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3418 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3417);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3418 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3418)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3416 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3417 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3416.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3416);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3416.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3420 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3420.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3416);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3420.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3418);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3419 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3420);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3419);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3422 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3422.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3423 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3422);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3423 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3423)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3421 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3422 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3421.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3421);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3421.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3425 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3425.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3421);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3425.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3423);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3424 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3425);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3424);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3427 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3427.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3428 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3427);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3428 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3428)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3426 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3427 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3426.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3426);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3426.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3430 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3430.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3426);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3430.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3428);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3429 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3430);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3429);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3431 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3431 == null){
                                    INR3431 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3431.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3431.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3431);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3433 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3433.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3434 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3433);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3434 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3434)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3432 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3433 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3432.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3432);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3432.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3436 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3436.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3432);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3436.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3434);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3435 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3436);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3435);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3438 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3438.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3439 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3438);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3439 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3439)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3437 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3438 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3437.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3437);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3437.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3441 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3441.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3437);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3441.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3439);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3440 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3441);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3440);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3443 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3443.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3444 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3443);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3444 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3444)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3442 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3443 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3442.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3442);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3442.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3446 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3446.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3442);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3446.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3444);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3445 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3446);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3445);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3447 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3447 == null){
                                    INR3447 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3447.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3447.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3447);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3449 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3449.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3450 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3449);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3450 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3450)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3448 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3449 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3448.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3448);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3448.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3452 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3452.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3448);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3452.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3450);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3451 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3452);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3451);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3454 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3454.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3455 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3454);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3455 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3455)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3453 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3454 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3453.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3453);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3453.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3457 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3457.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3453);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3457.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3455);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3456 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3457);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3456);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3459 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3459.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3460 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3459);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3460 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3460)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3458 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3459 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3458.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3458);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3458.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3462 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3462.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3458);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3462.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3460);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3461 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3462);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3461);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3463 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3463 == null){
                                    INR3463 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3463.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3463.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3463);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3465 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3465.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3466 = DBS01ReportUtil.retrieveValueForElement(field.getDepositsReportedForFSI(), explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3465);
                            
                                if(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3466 != null && !"".equals(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3466)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3464 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisMap3465 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3464.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3464);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3464.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3468 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3468.setContextRef(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisContext3464);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3468.setValue(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberValue3466);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3467 = instancObjectFactory.createDepositsReportedForFSI(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberDataType3468);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DepositsReportedForFSIParameterAxisFSMemberElement3467);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3470 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3470.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3471 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3470);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3471 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3471)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3469 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3470 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3469.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3469);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3469.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3473 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3473.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3469);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3473.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3471);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3472 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3473);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3472);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDepositsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3475 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3475.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3476 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDepositsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3475);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3476 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3476)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3474 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisMap3475 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3474.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3474);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3474.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3478 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3478.setContextRef(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisContext3474);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3478.setValue(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberValue3476);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3477 = instancObjectFactory.createRemarkForDepositsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberDataType3478);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDepositsReportedForFSIParameterAxisFSMemberElement3477);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3479 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3479 == null){
                                    INR3479 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3479.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3479.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3479);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3481 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3481.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3482 = DBS01ReportUtil.retrieveValueForElement(field.getBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3481);
                            
                                if(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3482 != null && !"".equals(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3482)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3480 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisMap3481 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3480.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3480);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3480.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3484 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3484.setContextRef(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisContext3480);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3484.setValue(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberValue3482);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberElement3483 = instancObjectFactory.createBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberDataType3484);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BorrowingsReportedForFSIParameterAxisFSMemberElement3483);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3486 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3486.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3487 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3486);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3487 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3487)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3485 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3486 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3485.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3485);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3485.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3489 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3489.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3485);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3489.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3487);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3488 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3489);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3488);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBorrowingsReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3491 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3491.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3492 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBorrowingsReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3491);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3492 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3492)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3490 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisMap3491 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3490.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3490);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3490.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3494 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3494.setContextRef(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisContext3490);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3494.setValue(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberValue3492);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberElement3493 = instancObjectFactory.createRemarkForBorrowingsReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberDataType3494);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBorrowingsReportedForFSIParameterAxisFSMemberElement3493);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3495 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3495 == null){
                                    INR3495 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3495.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3495.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3495);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - DebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3497 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3497.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3498 = DBS01ReportUtil.retrieveValueForElement(field.getDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3497);
                            
                                if(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3498 != null && !"".equals(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3498)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3496 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3497 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3496.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3496);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3496.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3500 = new StringItemType();
                                    explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3500.setContextRef(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3496);
                                    
                                    
                                        explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3500.setValue(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3498);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3499 = instancObjectFactory.createDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3500);
                                    bodyElements.add(explictMember1DBS01FS_Layout2DebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3499);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3502 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3502.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3503 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3502);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3503 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3503)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3501 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3502 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3501.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3501);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3501.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3505 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3505.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3501);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3505.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3503);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3504 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3505);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3504);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForDebtSecuritiesLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3507 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3507.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3508 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForDebtSecuritiesLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3507);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3508 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3508)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3506 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisMap3507 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3506.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3506);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3506.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3510 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3510.setContextRef(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisContext3506);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3510.setValue(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberValue3508);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3509 = instancObjectFactory.createRemarkForDebtSecuritiesLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberDataType3510);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForDebtSecuritiesLiabilitiesReportedForFSIParameterAxisFSMemberElement3509);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3511 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3511 == null){
                                    INR3511 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3511.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3511.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3511);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - OtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3513 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3513.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3514 = DBS01ReportUtil.retrieveValueForElement(field.getOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3513);
                            
                                if(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3514 != null && !"".equals(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3514)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3512 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisMap3513 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3512.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3512);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3512.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3516 = new StringItemType();
                                    explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3516.setContextRef(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisContext3512);
                                    
                                    
                                        explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3516.setValue(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3514);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3515 = instancObjectFactory.createOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3516);
                                    bodyElements.add(explictMember1DBS01FS_Layout2OtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3515);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3518 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3518.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3519 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3518);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3519 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3519)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3517 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3518 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3517.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3517);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3517.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3521 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3521.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3517);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3521.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3519);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3520 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3521);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3520);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForOtherLiabilitiesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3523 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3523.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3524 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForOtherLiabilitiesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3523);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3524 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3524)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3522 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisMap3523 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3522.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3522);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3522.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3526 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3526.setContextRef(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisContext3522);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3526.setValue(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberValue3524);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3525 = instancObjectFactory.createRemarkForOtherLiabilitiesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberDataType3526);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForOtherLiabilitiesReportedForFSIParameterAxisFSMemberElement3525);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3527 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3527 == null){
                                    INR3527 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3527.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3527.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3527);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - CapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3529 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3529.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3530 = DBS01ReportUtil.retrieveValueForElement(field.getCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3529);
                            
                                if(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3530 != null && !"".equals(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3530)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3528 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisMap3529 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3528.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3528);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3528.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3532 = new StringItemType();
                                    explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3532.setContextRef(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisContext3528);
                                    
                                    
                                        explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3532.setValue(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberValue3530);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberElement3531 = instancObjectFactory.createCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3532);
                                    bodyElements.add(explictMember1DBS01FS_Layout2CapitalAndReservesReportedForFSIParameterAxisFSMemberElement3531);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3534 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3534.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3535 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3534);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3535 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3535)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3533 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3534 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3533.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3533);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3533.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3537 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3537.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3533);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3537.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3535);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3536 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3537);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3536);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3539 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3539.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3540 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3539);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3540 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3540)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3538 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisMap3539 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3538.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3538);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3538.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3542 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3542.setContextRef(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisContext3538);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3542.setValue(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3540);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3541 = instancObjectFactory.createRemarkForCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3542);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3541);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3543 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3543 == null){
                                    INR3543 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3543.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3543.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3543);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - NarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3545 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3545.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3546 = DBS01ReportUtil.retrieveValueForElement(field.getNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3545);
                            
                                if(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3546 != null && !"".equals(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3546)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3544 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisMap3545 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3544.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3544);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3544.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3548 = new StringItemType();
                                    explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3548.setContextRef(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisContext3544);
                                    
                                    
                                        explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3548.setValue(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3546);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3547 = instancObjectFactory.createNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3548);
                                    bodyElements.add(explictMember1DBS01FS_Layout2NarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3547);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3550 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3550.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3551 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3550);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3551 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3551)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3549 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3550 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3549.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3549);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3549.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3553 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3553.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3549);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3553.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3551);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3552 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3553);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3552);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForNarrowCapitalAndReservesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3555 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3555.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3556 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForNarrowCapitalAndReservesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3555);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3556 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3556)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3554 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisMap3555 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3554.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3554);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3554.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3558 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3558.setContextRef(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisContext3554);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3558.setValue(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberValue3556);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3557 = instancObjectFactory.createRemarkForNarrowCapitalAndReservesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberDataType3558);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForNarrowCapitalAndReservesReportedForFSIParameterAxisFSMemberElement3557);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3559 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3559 == null){
                                    INR3559 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3559.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3559.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3559);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - BalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3561 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3561.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3562 = DBS01ReportUtil.retrieveValueForElement(field.getBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3561);
                            
                                if(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3562 != null && !"".equals(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3562)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3560 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisMap3561 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3560.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3560);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3560.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3564 = new StringItemType();
                                    explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3564.setContextRef(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisContext3560);
                                    
                                    
                                        explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3564.setValue(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3562);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3563 = instancObjectFactory.createBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3564);
                                    bodyElements.add(explictMember1DBS01FS_Layout2BalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3563);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3566 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3566.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3567 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3566);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3567 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3567)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3565 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3566 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3565.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3565);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3565.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3569 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3569.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3565);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3569.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3567);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3568 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3569);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3568);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForBalanceSheetTotalReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3571 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3571.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3572 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForBalanceSheetTotalReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3571);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3572 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3572)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3570 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisMap3571 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3570.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3570);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3570.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3574 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3574.setContextRef(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisContext3570);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3574.setValue(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberValue3572);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3573 = instancObjectFactory.createRemarkForBalanceSheetTotalReportedForFSI(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberDataType3574);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForBalanceSheetTotalReportedForFSIParameterAxisFSMemberElement3573);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3576 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3576.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3577 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3576);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3577 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3577)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3575 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3576 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3575.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3575);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3575.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3579 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3579.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3575);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3579.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3577);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3578 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3579);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3578);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3581 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3581.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3582 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3581);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3582 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3582)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3580 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3581 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3580.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3580);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3580.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3584 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3584.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3580);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3584.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3582);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3583 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3584);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3583);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2AbstractParameterAxisMap3586 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2AbstractParameterAxisMap3586.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3587 = DBS01ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBS01FS_Layout2AbstractParameterAxisMap3586);
                            
                                if(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3587 != null && !"".equals(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3587)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2AbstractParameterAxisContext3585 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2AbstractParameterAxisMap3586 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3585.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3585);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3585.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3589 = new StringItemType();
                                    explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3589.setContextRef(explictMember1DBS01FS_Layout2AbstractParameterAxisContext3585);
                                    
                                    
                                        explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3589.setValue(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberValue3587);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3588 = instancObjectFactory.createAbstract(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberDataType3589);
                                    bodyElements.add(explictMember1DBS01FS_Layout2AbstractParameterAxisFSMemberElement3588);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3590 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3590 == null){
                                    INR3590 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3590.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3590.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3590);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3592 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3592.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3593 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3592);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3593 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3593)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3591 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3592 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3591.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3591);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3591.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3595 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3595.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3591);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3595.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3593);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3594 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3595);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3594);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3596 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3596 == null){
                                    INR3596 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3596.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3596.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3596);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3598 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3598.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3599 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3598);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3599 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3599)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3597 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3598 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3597.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3597);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3597.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3601 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3601.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3597);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3601.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3599);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3600 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3601);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3600);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3603 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3603.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3604 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3603);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3604 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3604)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3602 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3603 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3602.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3602);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3602.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3606 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3606.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3602);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3606.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3604);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3605 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3606);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3605);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3607 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3607 == null){
                                    INR3607 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3607.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3607.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3607);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3609 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3609.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3610 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3609);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3610 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3610)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3608 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3609 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3608.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3608);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3608.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3612 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3612.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3608);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3612.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3610);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3611 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3612);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3611);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3613 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3613 == null){
                                    INR3613 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3613.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3613.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3613);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3615 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3615.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3616 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3615);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3616 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3616)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3614 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3615 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3614.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3614);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3614.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3618 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3618.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3614);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3618.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3616);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3617 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3618);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3617);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3620 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3620.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3621 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3620);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3621 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3621)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3619 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3620 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3619.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3619);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3619.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3623 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3623.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3619);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3623.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3621);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3622 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3623);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3622);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3624 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3624 == null){
                                    INR3624 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3624.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3624.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3624);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3626 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3626.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3627 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3626);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3627 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3627)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3625 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3626 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3625.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3625);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3625.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3629 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3629.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3625);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3629.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3627);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3628 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3629);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3628);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3630 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3630 == null){
                                    INR3630 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3630.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3630.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3630);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3632 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3632.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3633 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3632);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3633 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3633)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3631 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3632 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3631.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3631);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3631.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3635 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3635.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3631);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3635.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3633);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3634 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3635);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3634);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3637 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3637.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3638 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3637);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3638 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3638)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3636 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3637 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3636.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3636);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3636.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3640 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3640.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3636);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3640.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3638);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3639 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3640);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3639);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3641 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3641 == null){
                                    INR3641 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3641.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3641.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3641);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3643 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3643.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3644 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3643);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3644 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3644)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3642 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3643 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3642.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3642);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3642.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3646 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3646.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3642);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3646.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3644);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3645 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3646);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3645);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3647 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3647 == null){
                                    INR3647 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3647.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3647.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3647);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3649 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3649.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3650 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3649);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3650 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3650)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3648 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3649 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3648.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3648);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3648.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3652 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3652.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3648);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3652.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3650);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3651 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3652);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3651);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3654 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3654.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3655 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3654);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3655 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3655)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3653 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3654 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3653.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3653);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3653.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3657 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3657.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3653);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3657.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3655);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3656 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3657);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3656);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3658 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3658 == null){
                                    INR3658 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3658.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3658.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3658);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3660 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3660.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3661 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3660);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3661 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3661)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3659 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3660 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3659.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3659);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3659.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3663 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3663.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3659);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3663.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3661);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3662 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3663);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3662);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3664 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3664 == null){
                                    INR3664 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3664.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3664.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3664);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3666 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3666.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3667 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3666);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3667 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3667)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3665 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3666 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3665.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3665);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3665.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3669 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3669.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3665);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3669.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3667);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3668 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3669);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3668);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3671 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3671.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3672 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3671);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3672 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3672)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3670 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3671 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3670.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3670);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3670.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3674 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3674.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3670);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3674.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3672);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3673 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3674);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3673);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3675 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3675 == null){
                                    INR3675 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3675.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3675.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3675);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3677 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3677.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3678 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3677);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3678 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3678)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3676 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3677 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3676.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3676);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3676.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3680 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3680.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3676);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3680.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3678);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3679 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3680);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3679);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3681 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3681 == null){
                                    INR3681 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3681.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3681.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3681);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - SharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3683 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3683.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3684 = DBS01ReportUtil.retrieveValueForElement(field.getSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3683);
                            
                                if(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3684 != null && !"".equals(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3684)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3682 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3683 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3682.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3682);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3682.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3686 = new StringItemType();
                                    explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3686.setContextRef(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3682);
                                    
                                    
                                        explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3686.setValue(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3684);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3685 = instancObjectFactory.createSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3686);
                                    bodyElements.add(explictMember1DBS01FS_Layout2SharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3685);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3688 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3688.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3689 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3688);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3689 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3689)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3687 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisMap3688 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3687.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3687);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3687.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3691 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3691.setContextRef(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisContext3687);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3691.setValue(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberValue3689);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3690 = instancObjectFactory.createRemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSI(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberDataType3691);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForSharesInDepositTakingAssociatesOtherThanBanksReportedForFSIParameterAxisFSMemberElement3690);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3692 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3692 == null){
                                    INR3692 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3692.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3692.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3692);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3694 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3694.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3695 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3694);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3695 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3695)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3693 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3694 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3693.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3693);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3693.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3697 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3697.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3693);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3697.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3695);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3696 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3697);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3696);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3698 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3698 == null){
                                    INR3698 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3698.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3698.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3698);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3700 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3700.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3701 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3700);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3701 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3701)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3699 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3700 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3699.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3699);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3699.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3703 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3703.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3699);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3703.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3701);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3702 = instancObjectFactory.createFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3703);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3702);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3705 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3705.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3706 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3705);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3706 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3706)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3704 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisMap3705 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3704.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3704);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3704.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3708 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3708.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisContext3704);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3708.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberValue3706);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3707 = instancObjectFactory.createRemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberDataType3708);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossPositiveMtmValuesReportedForFSIParameterAxisFSMemberElement3707);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3709 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3709 == null){
                                    INR3709 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3709.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3709.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3709);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3711 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3711.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3712 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3711);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3712 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3712)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3710 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3711 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3710.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3710);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3710.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3714 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3714.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3710);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3714.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3712);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3713 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3714);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3713);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3715 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3715 == null){
                                    INR3715 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3715.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3715.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3715);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3717 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3717.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3718 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3717);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3718 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3718)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3716 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3717 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3716.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3716);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3716.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3720 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3720.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3716);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3720.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3718);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3719 = instancObjectFactory.createFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3720);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3719);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3722 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3722.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3723 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3722);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3723 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3723)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3721 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3722 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3721.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3721);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3721.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3725 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3725.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3721);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3725.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3723);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3724 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3725);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossPositiveMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3726 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3726 == null){
                                    INR3726 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3726.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3726.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3726);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3728 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3728.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3729 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3728);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3729 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3729)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3727 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3728 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3727.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3727);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3727.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3731 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3731.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3727);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3731.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3729);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3730 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3731);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3730);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3732 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3732 == null){
                                    INR3732 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3732.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3732.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3732);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3734 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3734.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3735 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3734);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3735 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3735)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3733 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3734 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3733.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3733);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3733.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3737 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3737.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3733);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3737.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3735);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3736 = instancObjectFactory.createFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3737);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3736);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3739 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3739.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3740 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3739);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3740 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3740)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3738 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisMap3739 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3738.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3738);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3738.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3742 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3742.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisContext3738);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3742.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberValue3740);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3741 = instancObjectFactory.createRemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberDataType3742);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesGrossNegativeMtmValuesReportedForFSIParameterAxisFSMemberElement3741);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3743 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3743 == null){
                                    INR3743 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3743.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3743.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3743);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3745 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3745.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3746 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3745);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3746 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3746)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3744 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3745 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3744.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3744);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3744.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3748 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3748.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3744);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3748.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3746);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3747 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3748);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3747);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3749 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3749 == null){
                                    INR3749 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3749.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3749.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3749);
                                }
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3751 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3751.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3752 = DBS01ReportUtil.retrieveValueForElement(field.getFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3751);
                            
                                if(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3752 != null && !"".equals(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3752)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3750 = DBS01ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3751 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3750.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3750);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3750.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3754 = new StringItemType();
                                    explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3754.setContextRef(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3750);
                                    
                                    
                                        explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3754.setValue(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3752);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3753 = instancObjectFactory.createFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3754);
                                    bodyElements.add(explictMember1DBS01FS_Layout2FinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3753);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBS01FS_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ParameterAxis - RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI
                            
                        
                            
                                
                                Map explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3756 = new HashMap<String, String>();
                                
                                explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3756.put("ParameterAxis", "FSMember");                
                                
                                String explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3757 = DBS01ReportUtil.retrieveValueForElement(field.getRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(), explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3756);
                            
                                if(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3757 != null && !"".equals(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3757)) {
                                
                                    
                                        Context explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3755 = DBS01ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisMap3756 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3755.getId())) {
                                        contextElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3755);
                                        contextIdentifiers.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3755.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3759 = new StringItemType();
                                    explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3759.setContextRef(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisContext3755);
                                    
                                    
                                        explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3759.setValue(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberValue3757);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3758 = instancObjectFactory.createRemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSI(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberDataType3759);
                                    bodyElements.add(explictMember1DBS01FS_Layout2RemarkForFinancialDerivativesOfWhichGrossNegativeMtmValuesForResidualMaturityLessThanOneYearReportedForFSIParameterAxisFSMemberElement3758);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01FS_Layout3 if any typeMembers then List or Single
                DBS01FS_Layout3 dBS01FS_Layout3 = mainReportData.getDBS01FS_Layout3();
            
                
                    {
            
                    DBS01FS_Layout3 field = dBS01FS_Layout3;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBS01OFC_Layout1 if any typeMembers then List or Single
                DBS01OFC_Layout1 dBS01OFC_Layout1 = mainReportData.getDBS01OFC_Layout1();
            
                
                    {
            
                    DBS01OFC_Layout1 field = dBS01OFC_Layout1;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
            // end contexts loop
            // add contexts to xbrl
            contextElements.forEach(ce->{
                xbrl.getItemOrTupleOrContext().add(ce);
            });
            unitElements.forEach(u->{
                xbrl.getItemOrTupleOrContext().add(u);
            });
            
            bodyElements.forEach(be->{
                xbrl.getItemOrTupleOrContext().add(be);
            });
            m.marshal(xbrl, writer);
            System.out.println("");
            System.out.println(writer.toString());
            System.out.println("");
            return writer;
        } catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }
}

